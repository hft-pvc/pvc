   1               		.file	"RP6RobotBaseLib.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	BUMPERS_stateChanged_DUMMY
  12               	BUMPERS_stateChanged_DUMMY:
  13               	.LFB7:
  14               		.file 1 "../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c"
   1:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /* ****************************************************************************
   2:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *                           _______________________
   3:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *                           \| RP6  ROBOT SYSTEM |/
   4:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *                            \_-_-_-_-_-_-_-_-_-_/         >>> BASE CONTROLLER
   5:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * ----------------------------------------------------------------------------
   6:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * ------------------- [c]2006 / 2007 - AREXX ENGINEERING ---------------------
   7:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * -------------------------- http://www.arexx.com/ ---------------------------
   8:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * ****************************************************************************
   9:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * File: RP6RobotBaseLib.c
  10:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Version: 1.8
  11:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Target: RP6 Base - ATMEGA32 @8.00MHz
  12:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Author(s): Dominik S. Herwald
  13:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * ****************************************************************************
  14:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Description:
  15:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
  16:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This is the RP6 Robot Base Library - it contains the following functions:
  17:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * - Processor initialisation
  18:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * - LED Control
  19:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * - Bumpers
  20:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * - A/D Convertor (Motor Current, Light Sensors, Battery Voltage...)
  21:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * - Encoder reading and speed measurement 
  22:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * - Motor Control (Automatic speed control and PWM + Direction control
  23:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *   + failsafe functions (overcurrent and defect motor/encoder detection))
  24:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * - ACS (Anti Collision System) 
  25:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * - IRCOMM (IR-Communication System, RC5 transmission and reception)
  26:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * - Timing functions (Delays, Stopwatches etc.)
  27:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
  28:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * PLEASE ALSO READ THE RP6MANUAL! THERE YOU WILL FIND EXAMPLE
  29:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * CODE AND SOME FURTHER EXPLANATIONS!
  30:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
  31:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * In other parts of this library (RP6uart.c, RP6I2CSlaceTWI.c and 
  32:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * RP6I2CMasterTWI.c)
  33:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * you can find UART communication and I²C Bus communication routines.
  34:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
  35:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * -----
  36:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Hint: You should better leave all this as it is if you just started with
  37:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * C programming, but it is a very good idea to read the comments and review 
  38:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * the code, it will help you to understand C programming for AVR better!
  39:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * -----
  40:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
  41:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * For the experienced users: 
  42:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This code works OK, but it is not optimal! There is a lot potential for 
  43:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * tuning! 
  44:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Well, this leaves some tasks for you and this is what makes most 
  45:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * fun: To improve the excisting!  
  46:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
  47:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Of course you are free to add new functions and improvements to this
  48:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * library and make them available to the public on the Internet e.g. on
  49:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * our Forum!
  50:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Please use the changelog at the end of this file to document your
  51:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * changes! And add your name to any new function or modification you added! 
  52:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * E.g. a "modified by <name> at <date>" is always a good idea to show 
  53:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * other users where and WHAT you changed in the source code!
  54:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
  55:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * It is a good idea to make your own includeable libraries instead of
  56:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * changing this library - of course only if this is possible.
  57:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
  58:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Or create your own complete library with all specific functions you need.
  59:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This code is GPL'd - s. license at the end of this file!
  60:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
  61:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * ****************************************************************************
  62:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * CHANGELOG AND LICENSING INFORMATION CAN BE FOUND AT THE END OF THIS FILE!
  63:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * ****************************************************************************
  64:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
  65:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
  66:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
  67:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Includes:
  68:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
  69:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #include "RP6RobotBaseLib.h"
  70:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
  71:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
  72:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
  73:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
  74:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Status LEDs:
  75:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
  76:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // -------------------------------
  77:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Power on warning
  78:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // 
  79:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #ifdef POWER_ON_WARNING
  80:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	uint8_t leds_on;
  81:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
  82:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	/**
  83:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	 * Enables the "led-blink" warning after some time with
  84:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	 * no active LEDs. This is to ensure that you don't forget
  85:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	 * to turn of the Robot if your program does not use
  86:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	 * any LEDs for a long time! 
  87:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	 */
  88:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	void enablePowerOnWarning(void) 
  89:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	{ 
  90:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(leds_on > 3)
  91:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			leds_on = 0; 
  92:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
  93:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
  94:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	/**
  95:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	 * This disables the power on warning. 
  96:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	 * also see RP6Config.h for #define POWER_ON_WARNING
  97:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	 */
  98:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	void disablePowerOnWarning(void) 
  99:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	{ 
 100:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		leds_on = 4; 
 101:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 102:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #endif
 103:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 104:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 105:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Update status LEDs with current value from shadow register.
 106:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 107:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Additional info:
 108:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This function ensures that the LED pins are not driven low to allow
 109:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * other circuitry to be connected to the I/O pads on the mainboard! 
 110:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * As long as external circuits only connect the I/O pads to VCC and not to 
 111:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * GND, everything should work fine, but always connect a >= 470 Ohm 
 112:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * series resistor to limit maximum current!
 113:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 114:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 115:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
 116:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 117:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			statusLEDs.byte=0b101001;
 118:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			updateStatusLEDs();
 119:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			// this clears all LEDs and sets the LEDs STATUS1,
 120:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			// STATUS6 and STATUS4!
 121:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 122:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			// Other possibility:
 123:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			statusLEDs.LED2=true;
 124:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			updateStatusLEDs();
 125:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			// This sets LED2 and does not affect any other LED!
 126:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 127:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void updateStatusLEDs(void)
 128:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 129:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRB &= ~0x83;
 130:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTB &= ~0x83;
 131:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(statusLEDs.LED4){ DDRB |= SL4; PORTB |= SL4; }
 132:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(statusLEDs.LED5){ DDRB |= SL5; PORTB |= SL5; }
 133:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(statusLEDs.LED6){ DDRB |= SL6; PORTB |= SL6; }
 134:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRC &= ~0x70;
 135:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTC &= ~0x70;
 136:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRC |= ((statusLEDs.byte << 4) & 0x70);
 137:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTC |= ((statusLEDs.byte << 4) & 0x70);
 138:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#ifdef POWER_ON_WARNING
 139:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		leds_on = (leds_on ? leds_on : (statusLEDs.byte && 1));
 140:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#endif
 141:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 142:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 143:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 144:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Set status LEDs - this is very handy if you want to set all LEDs.
 145:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 146:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
 147:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 148:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			setLEDs(0b101001);
 149:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			// this clears all LEDs and sets the LEDs STATUS1,
 150:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			// STATUS6 and STATUS4!
 151:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 152:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void setLEDs(uint8_t leds)
 153:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 154:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	statusLEDs.byte = leds;
 155:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	updateStatusLEDs();
 156:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 157:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 158:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 159:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
 160:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Bumpers:
 161:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 162:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 163:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Returns true if the the left Bumper is hit. 
 164:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This function turns off the LED connected to the port, reads the Bumper 
 165:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * value and restores previous LED state afterwards!
 166:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 167:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
 168:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 169:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		if(getBumperLeft())
 170:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			// do something
 171:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 172:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t getBumperLeft(void)
 173:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** { 
 174:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTB &= ~SL6;
 175:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRB &= ~SL6; 
 176:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	nop();
 177:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	uint8_t tmp = PINB & SL6;
 178:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(statusLEDs.LED6) { 
 179:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		DDRB |= SL6; 
 180:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		PORTB |= SL6; 
 181:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 182:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	return tmp;
 183:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 184:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 185:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 186:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Returns true if the the right Bumper is hit. 
 187:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This function turns off the LED connected to the port, reads the Bumper 
 188:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * value and restores previous LED state afterwards!
 189:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 190:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
 191:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 192:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		if(getBumperRight())
 193:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			// do something
 194:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 195:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t getBumperRight(void)
 196:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 197:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTC &= ~SL3;
 198:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRC &= ~SL3; 
 199:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	nop();
 200:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	uint8_t tmp = PINC & SL3;
 201:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(statusLEDs.LED3) { 
 202:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		DDRC |= SL3; 
 203:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		PORTC |= SL3; 
 204:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 205:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	return tmp;
 206:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 207:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 208:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // -------------------------------
 209:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Bumpers State changed handler:
 210:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 211:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void BUMPERS_stateChanged_DUMMY(void){}
  15               		.loc 1 211 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  21 0000 0895      		ret
  22               		.cfi_endproc
  23               	.LFE7:
  25               	.global	MOTIONCONTROL_stateChanged_DUMMY
  27               	MOTIONCONTROL_stateChanged_DUMMY:
  28               	.LFB15:
 212:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** static void (*BUMPERS_stateChangedHandler)(void) = BUMPERS_stateChanged_DUMMY;
 213:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 214:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Use this function to set the Bumpers state change handler. 
 215:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 
 216:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 217:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void BUMPERS_setStateChangedHandler(void (*bumperHandler)(void)) 
 218:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 219:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	BUMPERS_stateChangedHandler = bumperHandler;
 220:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 221:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // -------------------------------
 222:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 223:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint8_t bumper_timer;
 224:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t bumper_left;
 225:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t bumper_right;
 226:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 227:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 228:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * If you call this frequently out of the mainloop (or use task_RP6System which
 229:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * calls this routine for you), the global bumper_left and bumper_right
 230:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * variables are updated automatically every 50ms and can be used everywhere
 231:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * in your program. It can also call an event handler routine, that you
 232:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * need to register with BUMPERS_setStateChangedHandler before.
 233:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 234:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void task_Bumpers(void)
 235:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 236:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(bumper_timer > 50) { // 50ms
 237:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		uint8_t left = getBumperLeft();
 238:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		uint8_t right = getBumperRight();
 239:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(bumper_left != left || bumper_right != right) {
 240:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			bumper_left = left;
 241:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			bumper_right = right;
 242:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			BUMPERS_stateChangedHandler();
 243:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
 244:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		bumper_timer = 0;
 245:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 246:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 247:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 248:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
 249:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // ADC:
 250:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 251:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 252:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Read ADC channel (10 bit -> result is an integer from 0 to 1023).
 253:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * The channels (ADC_BAT etc.) are defined in the RP6RobotBase.h file!
 254:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 255:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This is a blocking function, which means it waits until the conversion
 256:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * is complete. There is a more complicated alternative that frequently 
 257:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * checks all channels (s. below).
 258:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 259:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This function returns 0 if the ADC is buisy! This has been done to
 260:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * prevents problems when the automatical function is used.
 261:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * You should usually NOT use this function if you use the automatic one!
 262:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 263:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
 264:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 265:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			uint16_t uBat = readADC(ADC_BAT);
 266:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			if(uBat < 600)
 267:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *				writeString("WARNING: BAT IS LOW!\n");
 268:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 269:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 270:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t readADC(uint8_t channel)
 271:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 272:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if((ADCSRA & (1<<ADSC))) return 0; // check if ADC is buisy...
 273:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADMUX = (1<<REFS0) | (0<<REFS1) | (channel<<MUX0);
 274:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADCSRA = (0<<ADIE) | (1<<ADSC) | (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADIF);
 275:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	while ((ADCSRA & (1<<ADSC))); 
 276:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADCSRA |= (1<<ADIF);
 277:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	return ADC;
 278:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 279:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 280:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 281:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This function starts an ADC conversion - it does not return the
 282:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * read value! You need to poll if the conversion is complete somewhere
 283:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * else and then read it from the ADC result register.
 284:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * (s. task_ADC function below)
 285:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 286:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void startADC(uint8_t channel)
 287:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 288:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADMUX = (1<<REFS0) | (0<<REFS1) | (channel<<MUX0);
 289:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADCSRA = (0<<ADIE) | (1<<ADSC) | (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADIF);
 290:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 291:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 292:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // -----------------------
 293:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 294:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t adcBat;
 295:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t adcMotorCurrentLeft;
 296:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t adcMotorCurrentRight;
 297:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t adcLSL;
 298:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t adcLSR;
 299:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t adc0;
 300:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t adc1;
 301:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 302:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 303:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This functions checks all ADC channels sequentially in the Background!
 304:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * It can save a lot of time, if the ADC channels are checked like this, because
 305:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * each A/D conversion takes some time. With this function you don't need to
 306:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * wait until the A/D conversion is finished and you can do other things in the 
 307:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * meanwhile.
 308:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * If you use this function (this is also the case if you use task_RP6System 
 309:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * because it calls this function), you can NOT use readADC anymore!
 310:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 311:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Instead you can use the seven global variables you see above to
 312:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * get the ADC values!
 313:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 314:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void task_ADC(void)
 315:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 316:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	static uint8_t current_adc_channel = 0;
 317:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(!(ADCSRA & (1<<ADSC))) {
 318:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	//	ADCSRA |= (1<<ADIF);
 319:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		switch(current_adc_channel) {
 320:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			case 0: adcBat = ADC; startADC(ADC_MCURRENT_L); break;
 321:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			case 1: adcMotorCurrentLeft = ADC; startADC(ADC_MCURRENT_R); break;
 322:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			case 2: adcMotorCurrentRight = ADC; startADC(ADC_LS_L); break;
 323:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			case 3: adcLSL = ADC; startADC(ADC_LS_R); break;
 324:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			case 4: adcLSR = ADC; startADC(ADC_ADC0); break;
 325:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			case 5: adc0 = ADC; startADC(ADC_ADC1); break;
 326:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			case 6: adc1 = ADC; startADC(ADC_BAT); break;
 327:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
 328:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(current_adc_channel == 6)
 329:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			current_adc_channel = 0;
 330:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		else
 331:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			current_adc_channel++;
 332:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 333:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 334:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 335:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
 336:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Encoders
 337:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 338:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Timing variable used for speed calculation:
 339:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint8_t speed_timer;
 340:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 341:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Speed measurement variables
 342:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint16_t mleft_counter;
 343:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint16_t mright_counter;
 344:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint16_t mleft_speed;
 345:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint16_t mright_speed;
 346:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 347:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Distance
 348:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint16_t mleft_dist;
 349:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint16_t mright_dist;
 350:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 351:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // This is only used for the selftest program.
 352:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // You don't need this for your own programs!
 353:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #ifdef DEBUG_MEASURE_DUTY_CYCLE
 354:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	volatile uint16_t cycle_h_l;
 355:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	volatile uint16_t cycle_l_l;
 356:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	volatile uint16_t cycle_h_r;
 357:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	volatile uint16_t cycle_l_r;
 358:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 359:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	volatile uint8_t cycle_h_l_tmp;
 360:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	volatile uint8_t cycle_l_l_tmp;
 361:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	volatile uint8_t cycle_h_r_tmp;
 362:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	volatile uint8_t cycle_l_r_tmp;
 363:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #endif
 364:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 365:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 366:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * External Interrupt 0 ISR
 367:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * (ENCL)
 368:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 369:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 370:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** ISR (INT0_vect)
 371:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 372:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_dist++;
 373:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_counter++;	
 374:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 375:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Only used for selftest program:
 376:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#ifdef DEBUG_MEASURE_DUTY_CYCLE
 377:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(isEncoderLeft()) {
 378:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			cycle_l_l = cycle_l_l_tmp;
 379:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			cycle_l_l_tmp = 0;
 380:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
 381:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		else {
 382:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			cycle_h_l = cycle_h_l_tmp;
 383:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			cycle_h_l_tmp = 0;
 384:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
 385:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#endif
 386:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 387:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 388:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 389:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * External Interrupt 1 ISR
 390:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * (ENCR)
 391:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 392:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 393:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** ISR (INT1_vect)
 394:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 395:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_dist++;
 396:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_counter++;
 397:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 398:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Only used for selftest program:
 399:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#ifdef DEBUG_MEASURE_DUTY_CYCLE
 400:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(isEncoderLeft()) {
 401:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			cycle_l_r += cycle_l_r_tmp;
 402:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			cycle_l_r >>=1;
 403:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			cycle_l_r_tmp = 0;
 404:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
 405:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		else {
 406:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			cycle_h_r += cycle_h_r_tmp;
 407:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			cycle_h_r >>=1;
 408:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			cycle_h_r_tmp = 0;
 409:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
 410:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#endif
 411:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 412:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 413:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 414:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
 415:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Motor speed control
 416:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 417:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define MC_LEFT_IMAX 420
 418:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define MC_LEFT_IMIN -420
 419:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define MC_RIGHT_IMAX 420
 420:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define MC_RIGHT_IMIN -420
 421:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 422:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** int16_t right_i; 
 423:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** int16_t left_i; 
 424:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** int16_t mleft_power;
 425:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** int16_t mright_power;
 426:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t mleft_ptmp;
 427:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t mright_ptmp;
 428:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 429:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t mleft_des_speed;
 430:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t mright_des_speed;
 431:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t mleft_des_speed_tmp;
 432:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t mright_des_speed_tmp;
 433:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 434:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t mleft_des_dir = FWD;
 435:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t mright_des_dir = FWD;
 436:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t mleft_dir = FWD;
 437:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t mright_dir = FWD;
 438:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 439:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t overcurrent_timeout;
 440:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t overcurrent_timer;
 441:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t overcurrent_errors;
 442:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t overcurrent_error_clear;
 443:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 444:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t motion_status_tmp;
 445:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 446:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t distanceToMove_L;
 447:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t distanceToMove_R;
 448:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t preDecelerate_L;
 449:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t preDecelerate_R;
 450:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t preStop_L;
 451:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t preStop_R;
 452:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 453:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint8_t motor_control;
 454:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 455:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 456:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // -------------------------------
 457:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // MotionControl state changed handler:
 458:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 459:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void MOTIONCONTROL_stateChanged_DUMMY(void){}
  29               		.loc 1 459 0
  30               		.cfi_startproc
  31               	/* prologue: function */
  32               	/* frame size = 0 */
  33               	/* stack size = 0 */
  34               	.L__stack_usage = 0
  35 0002 0895      		ret
  36               		.cfi_endproc
  37               	.LFE15:
  39               	.global	IRCOMM_RC5dataReady_DUMMY
  41               	IRCOMM_RC5dataReady_DUMMY:
  42               	.LFB31:
 460:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** static void (*MOTIONCONTROL_stateChangedHandler)(void) = MOTIONCONTROL_stateChanged_DUMMY;
 461:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 462:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Use this function to set the Motion Control state change handler. 
 463:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 
 464:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 465:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void MOTIONCONTROL_setStateChangedHandler(void (*motionControlHandler)(void)) 
 466:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 467:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	MOTIONCONTROL_stateChangedHandler = motionControlHandler;
 468:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 469:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // -------------------------------
 470:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 471:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 472:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Outcomment this:
 473:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define ENABLE_OC_ERROR_MESSAGE
 474:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // to disable the error messages (s. below) in order to save some program space!
 475:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // The motionControl function will still check for any errors and stop all operations
 476:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // if neccessary.
 477:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // This option just disables the error message for overcurrent or 
 478:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // defect encoder/motor events.
 479:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 480:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Error type:
 481:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define ENCODER_MALFUNCTION_LEFT 1
 482:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define ENCODER_MALFUNCTION_RIGHT 2
 483:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define OVERCURRENT 3
 484:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 485:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 486:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * If there are any errors like overcurrent or encoder malfunction, this function is 
 487:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * called from task_motionControl (s. below) and outputs an error message and then stops
 488:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * all operations to save the robot from damages that may occur if it continues
 489:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * to drive around. 
 490:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 491:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void emergencyShutdown(uint8_t why)
 492:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 493:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	cli();
 494:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	IRCOMM_OFF();
 495:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	setACSPwrOff();
 496:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_power = 0;
 497:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_power = 0;
 498:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	left_i = 0;
 499:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	right_i = 0;
 500:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_ptmp = 0;
 501:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_ptmp = 0;
 502:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	OCR1AL = 0;
 503:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	OCR1BL = 0;
 504:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	TCCR1A = 0;
 505:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	powerOFF();
 506:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #ifdef ENABLE_OC_ERROR_MESSAGE
 507:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	writeString_P("\n\n##### EMERGENCY SHUTDOWN #####\n");
 508:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	writeString_P("##### ALL OPERATIONS STOPPED TO PREVENT ANY DAMAGE! #####\n");
 509:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(why == ENCODER_MALFUNCTION_LEFT || why == ENCODER_MALFUNCTION_RIGHT) {
 510:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		
 511:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		writeString_P("\n### ENCODER (OR MOTOR) MALFUNCTION! ###\n");
 512:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		writeString_P("Affected channel:"); 	
 513:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(why == ENCODER_MALFUNCTION_LEFT)
 514:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			writeString_P("LEFT");
 515:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		else
 516:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			writeString_P("RIGHT");
 517:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		writeString_P("!\n\n(s. task_motorControl() function in RP6Lib!)\n");
 518:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		writeString_P("You need to check Encoder/Motor assembly (or your software).\n\n");
 519:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 520:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	else if(why == OVERCURRENT)
 521:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	{
 522:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		writeString_P("\n\n### MOTOR OVERCURRENT ###\n");
 523:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		writeString_P("\n\n(s. task_motorControl() function in RP6Lib!)\n");
 524:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		writeString_P("You need to check Motor assembly (or your software).\n\n");
 525:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 526:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	writeString_P("The Robot needs to be resetted now.\n\n");
 527:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #endif
 528:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	while(true) // Rest In Peace
 529:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	{
 530:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		setLEDs(0b110110);
 531:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		uint8_t dly;
 532:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		for(dly = 10; dly; dly--)
 533:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			delayCycles(32768);
 534:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		setLEDs(0b000000);
 535:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		for(dly = 10; dly; dly--)
 536:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			delayCycles(65535);
 537:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 538:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 539:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 540:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 541:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Automatic motor speed regulation, direction control, move specific distances and
 542:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * overcurrent+motor+encoder malfunction detection.
 543:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * You must call this function frequently out of the main loop if you
 544:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * want to use the motors! (this call is included in the task_RP6System function!)
 545:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 
 546:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This is the most important motor control function!
 547:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 548:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Integral regulation only - works OK but could be improved by 
 549:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * implementing PI or PID regulation.
 550:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 
 551:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * The speed increase is limited by Soft-PWM adjustment (can also be used to make the
 552:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * acceleration of the motors a lot slower just by software) in the Timer0 interrupt.
 553:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This intends to increase motor and gears life - along with slow turning direction
 554:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * change! Fast changes at high speeds can wear out the gears over time. 
 555:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 556:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * You need to consider this Soft-PWM when changing/tuning this function!
 557:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 558:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 559:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void task_motionControl(void)
 560:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 561:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Automatic motor overcurrent shutdown:
 562:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(overcurrent_timer >= 50) { // every 5ms
 563:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		overcurrent_timer = 0;
 564:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(!overcurrent_timeout) {
 565:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if((adcMotorCurrentLeft > 770) || (adcMotorCurrentRight > 770)) {
 566:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				overcurrent_errors++;
 567:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				overcurrent_timeout = 10; 
 568:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				mleft_power = 0;
 569:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				mright_power = 0;				
 570:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				left_i = 0;
 571:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				right_i = 0;
 572:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				motion_status.overcurrent = true;
 573:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				return;
 574:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
 575:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			else
 576:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				motion_status.overcurrent = false;
 577:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			
 578:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			// Emergency shutdown if there are too many (default: 3) overcurrent
 579:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			// events within ~20 seconds (100 * 200ms).
 580:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(overcurrent_error_clear > 100) {
 581:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				overcurrent_errors = 0;
 582:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				overcurrent_error_clear = 0;
 583:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
 584:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			else if(overcurrent_errors > 2)
 585:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				emergencyShutdown(OVERCURRENT);
 586:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
 587:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		
 588:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		// Detect if one of the encoders or motors does not work properly and stop 
 589:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		// all operations immediately if this is the case! 
 590:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if((adcMotorCurrentLeft < 150) && (mleft_speed == 0) 
 591:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		  && (mleft_des_speed != 0) &&  (mleft_ptmp > 150))
 592:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			emergencyShutdown(ENCODER_MALFUNCTION_LEFT);
 593:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if((adcMotorCurrentRight < 150) && (mright_speed == 0) 
 594:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		  && (mright_des_speed != 0) && (mright_ptmp > 150))
 595:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			emergencyShutdown(ENCODER_MALFUNCTION_RIGHT);
 596:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 597:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 598:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Motor Control
 599:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(motor_control) { // Everytime after the speed has been measured. (default: 200ms)
 600:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(!overcurrent_timeout) { // No overcurrent timeout? (default is to wait 2 seconds before new tr
 601:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(overcurrent_errors) // Overcurrent errors?
 602:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				overcurrent_error_clear++; // Yes, Timeout to clear all error events.
 603:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			else
 604:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				overcurrent_error_clear=0; // No, we set the timeout to zero.
 605:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				
 606:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			// Move Distance left:
 607:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(motion_status.move_R) {
 608:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(mleft_dist >= preStop_R) { // Stop a bit before the desired distance for ..
 609:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_des_speed = 0;      // ... better accurancy.
 610:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					left_i = 0;
 611:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_power = 0;		
 612:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					motion_status.move_R = false;
 613:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}
 614:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				else if(mleft_dist >= preDecelerate_R) { // Start to decelerate?
 615:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_des_speed /= 2;
 616:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					if(mleft_des_speed < 22) mleft_des_speed = 22;
 617:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}	
 618:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
 619:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			
 620:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			// Move Distance right:
 621:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(motion_status.move_L) {
 622:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(mright_dist >= preStop_L) { // Stop a bit before the desired distance for ..
 623:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_des_speed = 0;      // ... better accurancy.
 624:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					right_i = 0;
 625:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_power = 0;
 626:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					motion_status.move_L = false;
 627:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}
 628:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				else if(mright_dist >= preDecelerate_L) { // Start to decelerate?
 629:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_des_speed /= 2;
 630:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					if(mright_des_speed < 22) mright_des_speed = 22;
 631:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}	
 632:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
 633:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 634:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // ----------------------------------------
 635:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // The following settings are for users that want to tune the behaviour
 636:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // of the robot when changing direction --> make it faster or slower.
 637:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Carefully read the comments!  
 638:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // #define CHANGE_DIRECTION_SLOW   // this is enabled by default when none of the other options is 
 639:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define CHANGE_DIRECTION_MEDIUM  // Standard, keep it like this if you do not know what you are doi
 640:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Uncomment this if you want the Robot to change motor direction as fast as possible: 
 641:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** //#define CHANGE_DIRECTION_FAST
 642:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 643:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #ifdef CHANGE_DIRECTION_FAST
 644:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			// Change direction -- FAST Version.
 645:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			// This changes direction without any slowdown. 
 646:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****       // Only use this mode if you need it as this will reduce
 647:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****       // lifetime of the motors and gears.   
 648:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mleft_des_dir != mleft_dir || mright_des_dir != mright_dir) {
 649:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****   			  mright_ptmp = 0;
 650:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****   			  mleft_ptmp = 0;
 651:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****   			  mright_power=0; 
 652:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_power=0;
 653:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					TCCR1A = 0;   
 654:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					setMotorDir(mleft_des_dir,mright_des_dir);
 655:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
 656:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #else 
 657:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #ifdef CHANGE_DIRECTION_MEDIUM
 658:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			// Change direction -- Medium Version.
 659:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****       // This stops before changing the motor direction but is a bit faster
 660:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****       // than the original version. 
 661:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mleft_des_dir != mleft_dir || mright_des_dir != mright_dir) {
 662:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(mleft_des_speed || mright_des_speed) {
 663:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_des_speed_tmp = mleft_des_speed; // store current speed
 664:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_des_speed_tmp = mright_des_speed; 
 665:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_des_speed = 0;			
 666:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_des_speed = 0;
 667:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_power=0; // Soft PWM adjust to 0
 668:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_power=0;
 669:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					left_i = 0;
 670:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					right_i = 0;
 671:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}
 672:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(!TCCR1A) {
 673:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					setMotorDir(mleft_des_dir,mright_des_dir);
 674:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_des_speed = mleft_des_speed_tmp;
 675:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_des_speed = mright_des_speed_tmp;
 676:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					left_i = mleft_des_speed / 2;
 677:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					right_i = mright_des_speed / 2;
 678:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}
 679:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
 680:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #else
 681:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			// Change direction -- slow Version from the original library. 
 682:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			// Slowdown and stop before changing direction  
 683:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			// to improve gears and motors lifetime.
 684:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			// This variant was the original Version, the current library has
 685:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			// medium enabled by default. 
 686:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mleft_des_dir != mleft_dir || mright_des_dir != mright_dir) {
 687:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(mleft_des_speed || mright_des_speed) {
 688:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_des_speed_tmp = mleft_des_speed; // store current speed
 689:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_des_speed_tmp = mright_des_speed; 
 690:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_des_speed = 0;			
 691:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_des_speed = 0;
 692:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					left_i /= 2;
 693:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					right_i /= 2;
 694:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}
 695:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(mright_speed <= 40 && mleft_speed <= 40) {
 696:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_power=0; // Soft PWM adjust to 0
 697:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_power=0;
 698:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}
 699:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(!TCCR1A) // Is the PWM module turned off?
 700:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				{			// Yes, change direction and restore old speed:
 701:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					setMotorDir(mleft_des_dir,mright_des_dir);
 702:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_des_speed = mleft_des_speed_tmp;
 703:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_des_speed = mright_des_speed_tmp;
 704:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					left_i = 0;
 705:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					right_i = 0;
 706:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}
 707:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
 708:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #endif
 709:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #endif
 710:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 711:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 712:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			// Left motor speed control:
 713:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			int16_t error_left = mleft_des_speed - mleft_speed;
 714:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			left_i = left_i + error_left;
 715:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(left_i > MC_LEFT_IMAX) left_i = MC_LEFT_IMAX;
 716:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(left_i < MC_LEFT_IMIN) left_i = MC_LEFT_IMIN;
 717:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mleft_speed == 0 && mleft_des_speed == 0)
 718:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				left_i = 0;
 719:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			mleft_power = left_i / 2; 
 720:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mleft_power > 210) mleft_power = 210;
 721:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mleft_power < 0) mleft_power = 0;
 722:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			
 723:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			// Right motor speed control:
 724:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			int16_t error_right = mright_des_speed - mright_speed;
 725:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			right_i = right_i + error_right;
 726:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(right_i > MC_RIGHT_IMAX) right_i = MC_RIGHT_IMAX;
 727:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(right_i < MC_RIGHT_IMIN) right_i = MC_RIGHT_IMIN;
 728:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mright_speed == 0 && mright_des_speed == 0)
 729:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				right_i = 0;
 730:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			mright_power = right_i / 2;
 731:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mright_power > 210) mright_power = 210;
 732:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mright_power < 0) mright_power = 0;
 733:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
 734:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		else
 735:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			overcurrent_timeout--;
 736:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		motor_control = false;
 737:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 738:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 739:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Call event handlers if necessary:
 740:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(motion_status_tmp != motion_status.byte)
 741:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	{
 742:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		motion_status_tmp = motion_status.byte;
 743:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		MOTIONCONTROL_stateChangedHandler();
 744:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 745:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 746:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 747:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 748:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This function sets the desired speed value. 
 749:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * The rest is done automatically. The speed is regulated to this speed value 
 750:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * independent of Battery voltage, surface, weight of the robot and other things. 
 751:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 752:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * You need to call task_motorSpeedControl();  frequently out of the main loop!
 753:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * otherwise this function will not work!
 754:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Or use task_RP6System which includes this call. 
 755:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 756:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * The function limits maximum speed to 200! This has been done because the maximum
 757:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * possible speed gets lower over time due to battery discharging (--> voltage drop).
 758:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * And the gears and motors will live longer if you don't stress them that much.
 759:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 760:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Also 200 leaves a bit room to the maximum possible PWM value when you 
 761:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * put additional load onto the Robot or drive up a ramp etc.  
 762:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 763:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 764:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void moveAtSpeed(uint8_t desired_speed_left, uint8_t desired_speed_right)
 765:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 766:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(desired_speed_left > 200) desired_speed_left = 200; 
 767:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(desired_speed_right > 200) desired_speed_right = 200;
 768:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_des_speed = desired_speed_left;
 769:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_des_speed = desired_speed_right;
 770:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 771:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 772:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t drive_dir = FWD;
 773:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 774:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 775:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This functions sets the desired turning direction of the two motors. 
 776:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * The Robot first slows down, stops, changes direction and then it accelerates again
 777:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * to the previours speed (if the robot was driving... ).  
 778:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This is done to increase motors and gears lifetime and to avoid hard cut changes.
 779:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 780:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 781:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void changeDirection(uint8_t dir)
 782:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 783:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	drive_dir = dir;
 784:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_des_dir = (dir == BWD || dir == LEFT);
 785:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_des_dir = (dir == BWD || dir == RIGHT);
 786:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 787:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 788:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*
 789:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define FWD 0
 790:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define BWD 1
 791:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define LEFT 2
 792:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define RIGHT 3
 793:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** */
 794:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 795:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 796:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 797:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 798:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void moveAtSpeedDirection(int16_t desired_speed_left, int16_t desired_speed_right)
 799:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 800:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_des_dir = desired_speed_left < 0;
 801:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_des_dir = desired_speed_right < 0;
 802:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****   
 803:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****   //drive_dir = ;  muss ich mir noch überlegen ist aber auch unwichtig TODO
 804:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****   
 805:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****   uint8_t speed_l_abs = desired_speed_left > 0 ? (uint8_t)desired_speed_left : (uint8_t)(-desired_s
 806:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****   uint8_t speed_r_abs = desired_speed_left > 0 ? (uint8_t)desired_speed_right : (uint8_t)(-desired_
 807:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****   moveAtSpeed(speed_l_abs, speed_r_abs);
 808:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 809:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 810:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 811:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 812:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 813:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * You can use this function to check if there is any movement going on or if
 814:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * every operation like moving a specific distance or rotating has been finished. 
 815:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 816:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t isMovementComplete(void)
 817:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 818:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	return !(motion_status.move_L || motion_status.move_R);
 819:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 820:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 821:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 822:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * If there are any operations like moving a specific distance or rotating or
 823:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * any motion at all, you can stop the robot with this function. 
 824:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This can be used for example if the Bumpers detected and obstacle during
 825:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * movement...
 826:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 827:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void stop(void)
 828:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 829:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_des_speed = 0;
 830:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_des_speed = 0;
 831:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	left_i = 0;
 832:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	right_i = 0;
 833:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status.move_L = false;
 834:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status.move_R = false;
 835:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status_tmp = motion_status.byte;
 836:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	MOTIONCONTROL_stateChangedHandler();
 837:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 838:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 839:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 840:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 841:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * The robot can use the encoders to measure the distance it has driven. 
 842:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This function allows you to tell the robot to drive a specific distance 
 843:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * at a given speed and then stop. 
 844:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Of course this only works if you calibrated the Encoders before! 
 845:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Also read the RP6 Manual for additional details and have a look at the
 846:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * movement example programs where you also find a detail description of
 847:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * the parameters along with usage examples! 
 848:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 849:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * The function sets some parameters that make the robot decelerate a bit
 850:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * before reaching the target distance. This makes it more accurate.
 851:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * If you need faster reaction rather than precision then you should implement 
 852:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * your own routine and set the distance a bit lower... 
 853:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 854:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 855:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void move(uint8_t desired_speed, uint8_t dir, uint16_t distance, uint8_t blocking)
 856:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 857:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status.move_L = true;
 858:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status.move_R = true;
 859:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	preDecelerate_L = 0;
 860:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	preDecelerate_R = 0;
 861:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(desired_speed > 22) {
 862:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_L = distance - (20+(desired_speed*2));
 863:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_R = preDecelerate_L;
 864:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 865:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	preStop_L = distance - 2;
 866:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	preStop_R = preStop_L;
 867:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(distance < 40) {
 868:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		distance = 40; 
 869:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preStop_L = 20;
 870:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preStop_R = preStop_L;
 871:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_L = 10;
 872:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_R = preDecelerate_L;
 873:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 874:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(distance < 400 && desired_speed > 40) {
 875:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		desired_speed = 40; 
 876:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_L = distance - (distance/4);
 877:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_R = preDecelerate_L;
 878:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 879:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****     mleft_dist = 0; 
 880:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_dist = 0;
 881:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	moveAtSpeed(desired_speed,desired_speed);
 882:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	changeDirection(dir);
 883:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 884:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	distanceToMove_L = distance;
 885:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	distanceToMove_R = distance;
 886:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 887:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status_tmp = motion_status.byte;
 888:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 889:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status_tmp = motion_status.byte;
 890:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	MOTIONCONTROL_stateChangedHandler();
 891:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 892:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(blocking)
 893:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		while(!isMovementComplete())
 894:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			task_RP6System();
 895:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 896:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 897:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 898:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * You can let the Robot rotate specific angles with this function. 
 899:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * ATTENTION: THIS IS NOT PRECISE!!! (+-10° after calibrating the 
 900:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Encoders depending on the floor surface)
 901:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 902:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * The main problem is tracks slippery - the encoders usually measure far bigger
 903:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * distances than the Robot actually turns! 
 904:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This depends on the surface you rotate on and also on rotation speed! Thus you have 
 905:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * to do experiments with this function or your own implementation on the surfaces 
 906:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * you want to use the Robot on. The Robot will behave different for example
 907:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * on a carpet compared to a wooden floor!  
 908:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * It will even behave a bit different depending on the weight of the Robot!
 909:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 
 910:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This usually does not affect the precision when driving forwards! 
 911:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * It only affects rotation! 
 912:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 913:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This means that you can use external sensors for rotation in order to make it
 914:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * more accurate. For example an electronic compass. 
 915:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 
 916:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 917:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void rotate(uint8_t desired_speed, uint8_t dir, uint16_t angle, uint8_t blocking)
 918:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 919:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status.move_L = true;
 920:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status.move_R = true;
 921:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	uint16_t distance = (uint16_t) (((uint32_t)(ROTATION_FACTOR) * (uint16_t)angle)/100);
 922:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	preDecelerate_L = distance - 100;
 923:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	preDecelerate_R = distance - 100;
 924:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	preStop_L = distance;
 925:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	preStop_R = distance;
 926:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(distance < 40) {
 927:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		distance = 40; 
 928:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preStop_L = 20;
 929:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preStop_R = 20;
 930:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_L = 10;
 931:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_R = 10;
 932:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 933:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	moveAtSpeed(desired_speed,desired_speed);
 934:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	changeDirection(dir);
 935:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 936:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****     mleft_dist = 0; 
 937:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_dist = 0;
 938:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	distanceToMove_L = distance;
 939:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	distanceToMove_R = distance;
 940:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 941:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status_tmp = motion_status.byte;
 942:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	MOTIONCONTROL_stateChangedHandler();
 943:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(blocking)
 944:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		while(!isMovementComplete())
 945:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			task_RP6System();
 946:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 947:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 948:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 949:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
 950:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
 951:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 952:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 953:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Set Motor Power (PWM Value - proportional Speed - this is NOT the real
 954:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * speed value, the real speed depends on weight of your RP6,
 955:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * surface, battery voltage and various other things).
 956:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This function just sets PWM duty cycle and thus the mean voltage present 
 957:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * at the motors. 
 958:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * PWM is turned off when speed of both motors is set to 0.
 959:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Even this function does not set the PWM Value directly, the PWM value
 960:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * is soft-ramped up and down in the Timer 0 Interrupt to make the changes a
 961:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * bit slower (increased gears and Motor lifetime)! 
 962:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * It is still quite fast, so keep in mind that you should not change the speed 
 963:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * by big values in short time - this could damage the gears and the Motor if you 
 964:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * do this too often. 
 965:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * It will not instantly damage the motors/gears, but they will wear out much 
 966:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * faster if you do not use soft speed adjustment.)
 967:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 968:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * IMPORTANT:
 969:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * MAX PWM VALUE DEPENDS ON TIMER1 SETTINGS! (see comment in init function!)
 970:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Maximum value is 210 per default and NOT 255 as you might have thought!
 971:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 972:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Again: 210 is the MAXIMUM Value! This function automatically limits the 
 973:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * speed value to this limit.
 974:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * You should not let the motors run at 210 all the time! This is just the
 975:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * maximum value - better let them operate well below this maximum value!
 976:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 977:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * -------------------------------------------------------------
 978:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * IT IS A BETTER IDEA NOT TO USE THIS FUNCTION AT ALL!
 979:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Use moveAtSpeed together with task_motionControl instead.
 980:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * YOU CAN NOT USE setMotorPower AND setMotorDir WHEN YOU USE 
 981:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * task_motionControl!  This will not work!
 982:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * -------------------------------------------------------------
 983:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 984:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
 985:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void setMotorPower(uint8_t left_power, uint8_t right_power)
 986:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 987:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(left_power > 210) left_power = 210;
 988:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(right_power > 210) right_power = 210;
 989:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_power = right_power;
 990:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_power = left_power;
 991:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 992:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 993:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
 994:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Sets the rotation direction of both motors.
 995:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
 996:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * DO NOT CHANGE THE DIRECTION OF THE MOTORS WHILE THEY
 997:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * ARE RUNNING AT HIGH SPEEDS!!! 
 998:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * It will not instantly damage the motors/gears, but they will  
 999:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * wear out much faster if you do it at high speeds - better wait 
1000:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * until speed has slowed down - and change direction AFTER this.
1001:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1002:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * -------------------------------------------------------------
1003:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * IT IS A BETTER IDEA NOT TO USE THIS FUNCTION AT ALL!
1004:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Use moveAtSpeed together with task_motionControl instead.
1005:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * YOU CAN NOT USE setMotorPower AND setMotorDir WHEN YOU USE 
1006:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * task_motionControl!  This will not work!
1007:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * -------------------------------------------------------------
1008:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1009:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * task_motionControl also ensures that the direction is changed
1010:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * slowly and only after the motors have stopped!
1011:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1012:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
1013:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *          // DO NOT perform these commands directly after each
1014:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			// other in your programs - this is just a LIST of possible
1015:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			// combinations:
1016:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			setMotorDir(FWD,FWD); // Move forwards
1017:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			setMotorDir(BWD,FWD); // Rotate right
1018:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			setMotorDir(FWD,BWD); // Rotate left
1019:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			setMotorDir(BWD,BWD); // Move backwards
1020:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1021:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1022:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void setMotorDir(uint8_t left_dir, uint8_t right_dir)
1023:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
1024:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_dir = left_dir;
1025:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_dir = right_dir;
1026:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_des_dir = left_dir;
1027:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_des_dir = right_dir;
1028:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(left_dir)
1029:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		PORTC |= DIR_L;
1030:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	else
1031:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		PORTC &= ~DIR_L;
1032:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(right_dir)
1033:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		PORTC |= DIR_R;
1034:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	else
1035:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		PORTC &= ~DIR_R;
1036:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1037:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1038:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1039:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
1040:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
1041:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1042:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1043:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
1044:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Anti Collision System (ACS) 
1045:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // and IR-Communication (IRCOMM)
1046:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1047:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // -------------------------------------------------
1048:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // ACS definitions, variables and bitfields:
1049:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1050:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define ACS_STATE_IDLE 0
1051:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define ACS_STATE_IRCOMM_DELAY 1
1052:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define ACS_STATE_SEND_LEFT 2
1053:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define ACS_STATE_WAIT_LEFT 3
1054:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define ACS_STATE_SEND_RIGHT 5
1055:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define ACS_STATE_WAIT_RIGHT 6
1056:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1057:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define ACS_CHANNEL_LEFT 0
1058:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #define ACS_CHANNEL_RIGHT 1
1059:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1060:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t acs_state = ACS_STATE_IRCOMM_DELAY;
1061:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint16_t acs_timer; 
1062:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint8_t acs_pulse;
1063:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint8_t acs_event_counter;
1064:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t obstacle_left;
1065:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint8_t obstacle_right;
1066:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1067:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** union {
1068:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	uint8_t byte;
1069:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	struct {
1070:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		unsigned channel:1;
1071:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		unsigned pin:1;
1072:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		unsigned acs_int:1;
1073:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		unsigned rc5_data_received:1;
1074:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		volatile unsigned detect_rc5:1;
1075:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		unsigned acs_go:1;
1076:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		volatile unsigned ircomm_transmit:1;
1077:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		unsigned reserved:1;
1078:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	};
1079:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** } sysStatACS;
1080:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1081:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // -------------------------------
1082:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // IRCOMM
1083:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint8_t ircomm_send;
1084:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint16_t ircomm_data;
1085:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** uint16_t ircomm_data_tmp;
1086:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1087:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile RC5data_t IRCOMM_RC5_data_ok;
1088:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile RC5data_t IRCOMM_RC5_data; 
1089:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1090:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1091:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This function initiates a RC5 transmission with the IRCOMM. 
1092:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * You need to call the "task_ACS()" function (s. below) frequently
1093:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * out of the main loop - otherwise it will not work! (this is required
1094:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * because it needs to be synchronized with the ACS...)
1095:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * The transmission itself is interrupt based and takes about 20ms.
1096:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Warning: The IRCOMM_sendRC5 function blocks ACS operation until
1097:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * transmission is finished!
1098:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 
1099:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * The address byte contains the device address and the togglebit. 
1100:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Address is 5 bit + 1 toggle bit, data is 6 bit.
1101:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * You can use some of the address bits for data if you need 8 bit 
1102:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * data!
1103:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 
1104:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example: 
1105:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 	IRCOMM_sendRC5(10 | TOGGLEBIT, 40); 
1106:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *  // This transmits 40 to the device with address 10.
1107:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 	// The togglebit is set.
1108:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1109:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 	IRCOMM_sendRC5(10, 40); 
1110:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *  // This is nearly the same but the Togglebit is NOT set.
1111:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1112:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *  IRCOMM_sendRC5(30, 60);
1113:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *  // This is another transmission with device address 30 and 60 as data
1114:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *  // with togglebit NOT set.
1115:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *  
1116:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1117:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void IRCOMM_sendRC5(uint8_t adr, uint8_t data)
1118:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
1119:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	while(ircomm_send){TIMSK |= (1 << OCIE2);}
1120:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Here we create the RC5 data packet:
1121:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ircomm_data_tmp = 0x3000 | (((uint16_t)(adr & 0x3F)) << 6) | (((uint16_t)(data & 0x3F)));
1122:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	sysStatACS.ircomm_transmit = true;
1123:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1124:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1125:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // -------------------------------
1126:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1127:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1128:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Timer 2 Compare ISR
1129:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * ACS & IRCOMM
1130:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1131:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * WARNING: DO NOT CHANGE THIS!
1132:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * NEVER try to control the IRCOMM by your own routines if you do not
1133:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * know what you are doing!
1134:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1135:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1136:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** ISR (TIMER2_COMP_vect)
1137:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
1138:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	static uint8_t ircomm_pulse;
1139:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(acs_state < 2) { // If ACS is not active, perform IRCOMM transmissions
1140:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(ircomm_pulse) { // Do we have IR pulses to send?
1141:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(ircomm_pulse < 60) { // Bi-Phase encoding...
1142:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(ircomm_data & 0x4000) // check current bit
1143:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					PORTD ^= (1<<PIND7); // Toggle IRCOMM port
1144:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				else
1145:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					PORTD &= ~(1<<PIND7); // deactivate IRCOMM port
1146:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
1147:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			else if(ircomm_data & 0x4000) // The same as above, but the other way round:
1148:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				PORTD &= ~(1<<PIND7); // deactivate IRCOMM port
1149:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			else
1150:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				PORTD ^= (1<<PIND7); // Toggle IRCOMM port
1151:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			ircomm_pulse--;
1152:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
1153:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		else if(ircomm_send) { // Do we still have data?
1154:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			PORTD &= ~(1<<PIND7);
1155:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			ircomm_data <<= 1; // Next Bit!
1156:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			ircomm_pulse = 120;
1157:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			ircomm_send--;
1158:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
1159:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		else 
1160:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			PORTD &= ~(1<<PIND7); // no more pulses - IR LEDs off!
1161:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
1162:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	else if(acs_pulse) { // Send ACS IR pulses?
1163:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(sysStatACS.channel == ACS_CHANNEL_LEFT) // which channel?
1164:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			PORTB ^= ACS_L; 
1165:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		else 			
1166:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			PORTC ^= ACS_R; 
1167:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		acs_pulse--;
1168:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
1169:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	else { // no more pulses - IR LEDs off!
1170:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		PORTB |= ACS_L;
1171:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		PORTC |= ACS_R;
1172:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
1173:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1174:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1175:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1176:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * External Interrupt 2 ISR (ACS)
1177:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Detects ACS Events.
1178:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1179:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** ISR (INT2_vect)
1180:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
1181:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(acs_state == ACS_STATE_WAIT_LEFT || acs_state == ACS_STATE_WAIT_RIGHT)
1182:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(!sysStatACS.detect_rc5 && sysStatACS.acs_go && !(PINB & ACS))
1183:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			acs_event_counter++;
1184:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	sysStatACS.pin = (PINB & ACS);
1185:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1186:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1187:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // -------------------------------
1188:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // RC5 Data reception Handler:
1189:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1190:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void IRCOMM_RC5dataReady_DUMMY(RC5data_t rc5data){}
  43               		.loc 1 1190 0
  44               		.cfi_startproc
  45               	.LVL0:
  46               	/* prologue: function */
  47               	/* frame size = 0 */
  48               	/* stack size = 0 */
  49               	.L__stack_usage = 0
  50 0004 0895      		ret
  51               		.cfi_endproc
  52               	.LFE31:
  54               	.global	ACS_stateChanged_DUMMY
  56               	ACS_stateChanged_DUMMY:
  57               	.LFB33:
1191:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** static void (*IRCOMM_RC5dataReadyHandler)(RC5data_t rc5data) = IRCOMM_RC5dataReady_DUMMY;
1192:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1193:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Use this function to set the RC5 reception handler. 
1194:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 
1195:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
1196:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 
1197:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *  void receiveRC5Data(RC5data_t rc5data)
1198:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *	{
1199:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		writeString_P("Toggle Bit:");
1200:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		writeChar(rc5data.toggle_bit + '0');
1201:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		writeString_P(" | Device Address:");
1202:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		writeInteger(rc5data.device, DEC);
1203:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		writeString_P(" | Key Code:");
1204:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		writeInteger(rc5data.key_code, DEC);
1205:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		writeChar('\n');
1206:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *      // This is just an example and prints out the received data. 
1207:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		// You can do other things here like check for specific keycodes...
1208:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *	}
1209:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 
1210:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *  // [...]
1211:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *  // in the main function or somewhere else:
1212:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *  IRCOMM_setRC5DataReadyHandler(receiveRC5Data);
1213:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *  // [...]
1214:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1215:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * With this setup, the function receiveRC5Data would be called everytime
1216:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * the IRCOMM receives a RC5 Data packet.
1217:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 
1218:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1219:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void IRCOMM_setRC5DataReadyHandler(void (*rc5Handler)(RC5data_t rc5data)) 
1220:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
1221:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	IRCOMM_RC5dataReadyHandler = rc5Handler;
1222:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1223:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1224:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // -------------------------------
1225:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1226:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1227:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // -------------------------------
1228:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // ACS State changed handler:
1229:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1230:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void ACS_stateChanged_DUMMY(void){}
  58               		.loc 1 1230 0
  59               		.cfi_startproc
  60               	/* prologue: function */
  61               	/* frame size = 0 */
  62               	/* stack size = 0 */
  63               	.L__stack_usage = 0
  64 0006 0895      		ret
  65               		.cfi_endproc
  66               	.LFE33:
  68               	.global	enablePowerOnWarning
  70               	enablePowerOnWarning:
  71               	.LFB1:
  89:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(leds_on > 3)
  72               		.loc 1 89 0
  73               		.cfi_startproc
  74               	/* prologue: function */
  75               	/* frame size = 0 */
  76               	/* stack size = 0 */
  77               	.L__stack_usage = 0
  90:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			leds_on = 0; 
  78               		.loc 1 90 0
  79 0008 8091 0000 		lds r24,leds_on
  80 000c 8430      		cpi r24,lo8(4)
  81 000e 00F0      		brlo .L5
  91:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
  82               		.loc 1 91 0
  83 0010 1092 0000 		sts leds_on,__zero_reg__
  84               	.L5:
  85 0014 0895      		ret
  86               		.cfi_endproc
  87               	.LFE1:
  89               	.global	disablePowerOnWarning
  91               	disablePowerOnWarning:
  92               	.LFB2:
  99:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		leds_on = 4; 
  93               		.loc 1 99 0
  94               		.cfi_startproc
  95               	/* prologue: function */
  96               	/* frame size = 0 */
  97               	/* stack size = 0 */
  98               	.L__stack_usage = 0
 100:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
  99               		.loc 1 100 0
 100 0016 84E0      		ldi r24,lo8(4)
 101 0018 8093 0000 		sts leds_on,r24
 102 001c 0895      		ret
 103               		.cfi_endproc
 104               	.LFE2:
 106               	.global	updateStatusLEDs
 108               	updateStatusLEDs:
 109               	.LFB3:
 128:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRB &= ~0x83;
 110               		.loc 1 128 0
 111               		.cfi_startproc
 112               	/* prologue: function */
 113               	/* frame size = 0 */
 114               	/* stack size = 0 */
 115               	.L__stack_usage = 0
 129:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTB &= ~0x83;
 116               		.loc 1 129 0
 117 001e 87B3      		in r24,0x17
 118 0020 8C77      		andi r24,lo8(124)
 119 0022 87BB      		out 0x17,r24
 130:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(statusLEDs.LED4){ DDRB |= SL4; PORTB |= SL4; }
 120               		.loc 1 130 0
 121 0024 88B3      		in r24,0x18
 122 0026 8C77      		andi r24,lo8(124)
 123 0028 88BB      		out 0x18,r24
 131:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(statusLEDs.LED5){ DDRB |= SL5; PORTB |= SL5; }
 124               		.loc 1 131 0
 125 002a 8091 0000 		lds r24,statusLEDs
 126 002e 83FF      		sbrs r24,3
 127 0030 00C0      		rjmp .L10
 131:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(statusLEDs.LED5){ DDRB |= SL5; PORTB |= SL5; }
 128               		.loc 1 131 0 is_stmt 0 discriminator 1
 129 0032 BF9A      		sbi 0x17,7
 130 0034 C79A      		sbi 0x18,7
 131               	.L10:
 132:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(statusLEDs.LED6){ DDRB |= SL6; PORTB |= SL6; }
 132               		.loc 1 132 0 is_stmt 1
 133 0036 8091 0000 		lds r24,statusLEDs
 134 003a 84FF      		sbrs r24,4
 135 003c 00C0      		rjmp .L11
 132:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(statusLEDs.LED6){ DDRB |= SL6; PORTB |= SL6; }
 136               		.loc 1 132 0 is_stmt 0 discriminator 1
 137 003e B99A      		sbi 0x17,1
 138 0040 C19A      		sbi 0x18,1
 139               	.L11:
 133:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRC &= ~0x70;
 140               		.loc 1 133 0 is_stmt 1
 141 0042 8091 0000 		lds r24,statusLEDs
 142 0046 85FF      		sbrs r24,5
 143 0048 00C0      		rjmp .L12
 133:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRC &= ~0x70;
 144               		.loc 1 133 0 is_stmt 0 discriminator 1
 145 004a B89A      		sbi 0x17,0
 146 004c C09A      		sbi 0x18,0
 147               	.L12:
 134:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTC &= ~0x70;
 148               		.loc 1 134 0 is_stmt 1
 149 004e 84B3      		in r24,0x14
 150 0050 8F78      		andi r24,lo8(-113)
 151 0052 84BB      		out 0x14,r24
 135:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRC |= ((statusLEDs.byte << 4) & 0x70);
 152               		.loc 1 135 0
 153 0054 85B3      		in r24,0x15
 154 0056 8F78      		andi r24,lo8(-113)
 155 0058 85BB      		out 0x15,r24
 136:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTC |= ((statusLEDs.byte << 4) & 0x70);
 156               		.loc 1 136 0
 157 005a 24B3      		in r18,0x14
 158 005c 8091 0000 		lds r24,statusLEDs
 159 0060 30E1      		ldi r19,lo8(16)
 160 0062 839F      		mul r24,r19
 161 0064 C001      		movw r24,r0
 162 0066 1124      		clr __zero_reg__
 163 0068 8077      		andi r24,lo8(112)
 164 006a 822B      		or r24,r18
 165 006c 84BB      		out 0x14,r24
 137:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#ifdef POWER_ON_WARNING
 166               		.loc 1 137 0
 167 006e 25B3      		in r18,0x15
 168 0070 8091 0000 		lds r24,statusLEDs
 169 0074 30E1      		ldi r19,lo8(16)
 170 0076 839F      		mul r24,r19
 171 0078 C001      		movw r24,r0
 172 007a 1124      		clr __zero_reg__
 173 007c 8077      		andi r24,lo8(112)
 174 007e 822B      		or r24,r18
 175 0080 85BB      		out 0x15,r24
 139:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#endif
 176               		.loc 1 139 0
 177 0082 8091 0000 		lds r24,leds_on
 178 0086 8111      		cpse r24,__zero_reg__
 179 0088 00C0      		rjmp .L13
 139:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#endif
 180               		.loc 1 139 0 is_stmt 0 discriminator 2
 181 008a 81E0      		ldi r24,lo8(1)
 182 008c 9091 0000 		lds r25,statusLEDs
 183 0090 9111      		cpse r25,__zero_reg__
 184 0092 00C0      		rjmp .L13
 185 0094 80E0      		ldi r24,0
 186               	.L13:
 139:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#endif
 187               		.loc 1 139 0 discriminator 3
 188 0096 8093 0000 		sts leds_on,r24
 189 009a 0895      		ret
 190               		.cfi_endproc
 191               	.LFE3:
 193               	.global	setLEDs
 195               	setLEDs:
 196               	.LFB4:
 153:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	statusLEDs.byte = leds;
 197               		.loc 1 153 0 is_stmt 1
 198               		.cfi_startproc
 199               	.LVL1:
 200               	/* prologue: function */
 201               	/* frame size = 0 */
 202               	/* stack size = 0 */
 203               	.L__stack_usage = 0
 154:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	updateStatusLEDs();
 204               		.loc 1 154 0
 205 009c 8093 0000 		sts statusLEDs,r24
 155:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 206               		.loc 1 155 0
 207 00a0 0C94 0000 		jmp updateStatusLEDs
 208               	.LVL2:
 209               		.cfi_endproc
 210               	.LFE4:
 212               	.global	getBumperLeft
 214               	getBumperLeft:
 215               	.LFB5:
 173:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTB &= ~SL6;
 216               		.loc 1 173 0
 217               		.cfi_startproc
 218               	/* prologue: function */
 219               	/* frame size = 0 */
 220               	/* stack size = 0 */
 221               	.L__stack_usage = 0
 174:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRB &= ~SL6; 
 222               		.loc 1 174 0
 223 00a4 C098      		cbi 0x18,0
 175:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	nop();
 224               		.loc 1 175 0
 225 00a6 B898      		cbi 0x17,0
 176:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	uint8_t tmp = PINB & SL6;
 226               		.loc 1 176 0
 227               	/* #APP */
 228               	 ;  176 "../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c" 1
 229 00a8 0000      		nop
 230               		
 231               	 ;  0 "" 2
 177:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(statusLEDs.LED6) { 
 232               		.loc 1 177 0
 233               	/* #NOAPP */
 234 00aa 86B3      		in r24,0x16
 235 00ac 8170      		andi r24,lo8(1)
 236               	.LVL3:
 178:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		DDRB |= SL6; 
 237               		.loc 1 178 0
 238 00ae 9091 0000 		lds r25,statusLEDs
 239 00b2 95FF      		sbrs r25,5
 240 00b4 00C0      		rjmp .L27
 179:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		PORTB |= SL6; 
 241               		.loc 1 179 0
 242 00b6 B89A      		sbi 0x17,0
 180:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 243               		.loc 1 180 0
 244 00b8 C09A      		sbi 0x18,0
 245               	.L27:
 183:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 246               		.loc 1 183 0
 247 00ba 0895      		ret
 248               		.cfi_endproc
 249               	.LFE5:
 251               	.global	getBumperRight
 253               	getBumperRight:
 254               	.LFB6:
 196:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTC &= ~SL3;
 255               		.loc 1 196 0
 256               		.cfi_startproc
 257               	/* prologue: function */
 258               	/* frame size = 0 */
 259               	/* stack size = 0 */
 260               	.L__stack_usage = 0
 197:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRC &= ~SL3; 
 261               		.loc 1 197 0
 262 00bc AE98      		cbi 0x15,6
 198:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	nop();
 263               		.loc 1 198 0
 264 00be A698      		cbi 0x14,6
 199:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	uint8_t tmp = PINC & SL3;
 265               		.loc 1 199 0
 266               	/* #APP */
 267               	 ;  199 "../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c" 1
 268 00c0 0000      		nop
 269               		
 270               	 ;  0 "" 2
 200:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(statusLEDs.LED3) { 
 271               		.loc 1 200 0
 272               	/* #NOAPP */
 273 00c2 83B3      		in r24,0x13
 274 00c4 8074      		andi r24,lo8(64)
 275               	.LVL4:
 201:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		DDRC |= SL3; 
 276               		.loc 1 201 0
 277 00c6 9091 0000 		lds r25,statusLEDs
 278 00ca 92FF      		sbrs r25,2
 279 00cc 00C0      		rjmp .L32
 202:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		PORTC |= SL3; 
 280               		.loc 1 202 0
 281 00ce A69A      		sbi 0x14,6
 203:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 282               		.loc 1 203 0
 283 00d0 AE9A      		sbi 0x15,6
 284               	.L32:
 206:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 285               		.loc 1 206 0
 286 00d2 0895      		ret
 287               		.cfi_endproc
 288               	.LFE6:
 290               	.global	BUMPERS_setStateChangedHandler
 292               	BUMPERS_setStateChangedHandler:
 293               	.LFB8:
 218:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	BUMPERS_stateChangedHandler = bumperHandler;
 294               		.loc 1 218 0
 295               		.cfi_startproc
 296               	.LVL5:
 297               	/* prologue: function */
 298               	/* frame size = 0 */
 299               	/* stack size = 0 */
 300               	.L__stack_usage = 0
 219:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 301               		.loc 1 219 0
 302 00d4 9093 0000 		sts BUMPERS_stateChangedHandler+1,r25
 303 00d8 8093 0000 		sts BUMPERS_stateChangedHandler,r24
 304 00dc 0895      		ret
 305               		.cfi_endproc
 306               	.LFE8:
 308               	.global	task_Bumpers
 310               	task_Bumpers:
 311               	.LFB9:
 235:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(bumper_timer > 50) { // 50ms
 312               		.loc 1 235 0
 313               		.cfi_startproc
 314 00de CF93      		push r28
 315               	.LCFI0:
 316               		.cfi_def_cfa_offset 3
 317               		.cfi_offset 28, -2
 318               	/* prologue: function */
 319               	/* frame size = 0 */
 320               	/* stack size = 1 */
 321               	.L__stack_usage = 1
 236:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		uint8_t left = getBumperLeft();
 322               		.loc 1 236 0
 323 00e0 8091 0000 		lds r24,bumper_timer
 324 00e4 8333      		cpi r24,lo8(51)
 325 00e6 00F0      		brlo .L37
 326               	.LBB19:
 237:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		uint8_t right = getBumperRight();
 327               		.loc 1 237 0
 328 00e8 0E94 0000 		call getBumperLeft
 329               	.LVL6:
 330 00ec C82F      		mov r28,r24
 331               	.LVL7:
 238:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(bumper_left != left || bumper_right != right) {
 332               		.loc 1 238 0
 333 00ee 0E94 0000 		call getBumperRight
 334               	.LVL8:
 239:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			bumper_left = left;
 335               		.loc 1 239 0
 336 00f2 9091 0000 		lds r25,bumper_left
 337 00f6 9C13      		cpse r25,r28
 338 00f8 00C0      		rjmp .L39
 239:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			bumper_left = left;
 339               		.loc 1 239 0 is_stmt 0 discriminator 1
 340 00fa 9091 0000 		lds r25,bumper_right
 341 00fe 9817      		cp r25,r24
 342 0100 01F0      		breq .L40
 343               	.L39:
 240:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			bumper_right = right;
 344               		.loc 1 240 0 is_stmt 1
 345 0102 C093 0000 		sts bumper_left,r28
 241:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			BUMPERS_stateChangedHandler();
 346               		.loc 1 241 0
 347 0106 8093 0000 		sts bumper_right,r24
 242:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
 348               		.loc 1 242 0
 349 010a E091 0000 		lds r30,BUMPERS_stateChangedHandler
 350 010e F091 0000 		lds r31,BUMPERS_stateChangedHandler+1
 351 0112 0995      		icall
 352               	.LVL9:
 353               	.L40:
 244:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 354               		.loc 1 244 0
 355 0114 1092 0000 		sts bumper_timer,__zero_reg__
 356               	.LVL10:
 357               	.L37:
 358               	/* epilogue start */
 359               	.LBE19:
 246:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 360               		.loc 1 246 0
 361 0118 CF91      		pop r28
 362 011a 0895      		ret
 363               		.cfi_endproc
 364               	.LFE9:
 366               	.global	readADC
 368               	readADC:
 369               	.LFB10:
 271:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if((ADCSRA & (1<<ADSC))) return 0; // check if ADC is buisy...
 370               		.loc 1 271 0
 371               		.cfi_startproc
 372               	.LVL11:
 373               	/* prologue: function */
 374               	/* frame size = 0 */
 375               	/* stack size = 0 */
 376               	.L__stack_usage = 0
 272:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADMUX = (1<<REFS0) | (0<<REFS1) | (channel<<MUX0);
 377               		.loc 1 272 0
 378 011c 3699      		sbic 0x6,6
 379 011e 00C0      		rjmp .L45
 273:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADCSRA = (0<<ADIE) | (1<<ADSC) | (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADIF);
 380               		.loc 1 273 0
 381 0120 8064      		ori r24,lo8(64)
 382               	.LVL12:
 383 0122 87B9      		out 0x7,r24
 274:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	while ((ADCSRA & (1<<ADSC))); 
 384               		.loc 1 274 0
 385 0124 86ED      		ldi r24,lo8(-42)
 386 0126 86B9      		out 0x6,r24
 387               	.L44:
 275:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADCSRA |= (1<<ADIF);
 388               		.loc 1 275 0 discriminator 1
 389 0128 3699      		sbic 0x6,6
 390 012a 00C0      		rjmp .L44
 276:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	return ADC;
 391               		.loc 1 276 0
 392 012c 349A      		sbi 0x6,4
 277:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 393               		.loc 1 277 0
 394 012e 84B1      		in r24,0x4
 395 0130 95B1      		in r25,0x4+1
 396 0132 0895      		ret
 397               	.LVL13:
 398               	.L45:
 272:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADMUX = (1<<REFS0) | (0<<REFS1) | (channel<<MUX0);
 399               		.loc 1 272 0
 400 0134 80E0      		ldi r24,0
 401 0136 90E0      		ldi r25,0
 402               	.LVL14:
 278:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 403               		.loc 1 278 0
 404 0138 0895      		ret
 405               		.cfi_endproc
 406               	.LFE10:
 408               	.global	startADC
 410               	startADC:
 411               	.LFB11:
 287:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADMUX = (1<<REFS0) | (0<<REFS1) | (channel<<MUX0);
 412               		.loc 1 287 0
 413               		.cfi_startproc
 414               	.LVL15:
 415               	/* prologue: function */
 416               	/* frame size = 0 */
 417               	/* stack size = 0 */
 418               	.L__stack_usage = 0
 288:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADCSRA = (0<<ADIE) | (1<<ADSC) | (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADIF);
 419               		.loc 1 288 0
 420 013a 8064      		ori r24,lo8(64)
 421               	.LVL16:
 422 013c 87B9      		out 0x7,r24
 289:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 423               		.loc 1 289 0
 424 013e 86ED      		ldi r24,lo8(-42)
 425 0140 86B9      		out 0x6,r24
 426 0142 0895      		ret
 427               		.cfi_endproc
 428               	.LFE11:
 430               	.global	task_ADC
 432               	task_ADC:
 433               	.LFB12:
 315:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	static uint8_t current_adc_channel = 0;
 434               		.loc 1 315 0
 435               		.cfi_startproc
 436               	/* prologue: function */
 437               	/* frame size = 0 */
 438               	/* stack size = 0 */
 439               	.L__stack_usage = 0
 317:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	//	ADCSRA |= (1<<ADIF);
 440               		.loc 1 317 0
 441 0144 3699      		sbic 0x6,6
 442 0146 00C0      		rjmp .L47
 319:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			case 0: adcBat = ADC; startADC(ADC_MCURRENT_L); break;
 443               		.loc 1 319 0
 444 0148 8091 0000 		lds r24,current_adc_channel.2141
 445 014c 90E0      		ldi r25,0
 446 014e 8730      		cpi r24,7
 447 0150 9105      		cpc r25,__zero_reg__
 448 0152 00F4      		brsh .L49
 449 0154 FC01      		movw r30,r24
 450 0156 E050      		subi r30,lo8(-(gs(.L51)))
 451 0158 F040      		sbci r31,hi8(-(gs(.L51)))
 326:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
 452               		.loc 1 326 0
 453 015a 84B1      		in r24,0x4
 454 015c 95B1      		in r25,0x4+1
 319:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			case 0: adcBat = ADC; startADC(ADC_MCURRENT_L); break;
 455               		.loc 1 319 0
 456 015e 0C94 0000 		jmp __tablejump2__
 457               		.section	.progmem.gcc_sw_table,"a",@progbits
 458               		.p2align	1
 459               	.L51:
 460 0000 0000      		.word gs(.L50)
 461 0002 0000      		.word gs(.L52)
 462 0004 0000      		.word gs(.L53)
 463 0006 0000      		.word gs(.L54)
 464 0008 0000      		.word gs(.L55)
 465 000a 0000      		.word gs(.L56)
 466 000c 0000      		.word gs(.L57)
 467               		.text
 468               	.L50:
 320:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			case 1: adcMotorCurrentLeft = ADC; startADC(ADC_MCURRENT_R); break;
 469               		.loc 1 320 0
 470 0162 9093 0000 		sts adcBat+1,r25
 471 0166 8093 0000 		sts adcBat,r24
 472               	.LVL17:
 473               	.LBB34:
 474               	.LBB35:
 288:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADCSRA = (0<<ADIE) | (1<<ADSC) | (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADIF);
 475               		.loc 1 288 0
 476 016a 86E4      		ldi r24,lo8(70)
 477 016c 00C0      		rjmp .L59
 478               	.LVL18:
 479               	.L52:
 480               	.LBE35:
 481               	.LBE34:
 321:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			case 2: adcMotorCurrentRight = ADC; startADC(ADC_LS_L); break;
 482               		.loc 1 321 0
 483 016e 9093 0000 		sts adcMotorCurrentLeft+1,r25
 484 0172 8093 0000 		sts adcMotorCurrentLeft,r24
 485               	.LVL19:
 486               	.LBB36:
 487               	.LBB37:
 288:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADCSRA = (0<<ADIE) | (1<<ADSC) | (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADIF);
 488               		.loc 1 288 0
 489 0176 85E4      		ldi r24,lo8(69)
 490 0178 00C0      		rjmp .L59
 491               	.LVL20:
 492               	.L53:
 493               	.LBE37:
 494               	.LBE36:
 322:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			case 3: adcLSL = ADC; startADC(ADC_LS_R); break;
 495               		.loc 1 322 0
 496 017a 9093 0000 		sts adcMotorCurrentRight+1,r25
 497 017e 8093 0000 		sts adcMotorCurrentRight,r24
 498               	.LVL21:
 499               	.LBB38:
 500               	.LBB39:
 288:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADCSRA = (0<<ADIE) | (1<<ADSC) | (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADIF);
 501               		.loc 1 288 0
 502 0182 83E4      		ldi r24,lo8(67)
 503 0184 00C0      		rjmp .L59
 504               	.LVL22:
 505               	.L54:
 506               	.LBE39:
 507               	.LBE38:
 323:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			case 4: adcLSR = ADC; startADC(ADC_ADC0); break;
 508               		.loc 1 323 0
 509 0186 9093 0000 		sts adcLSL+1,r25
 510 018a 8093 0000 		sts adcLSL,r24
 511               	.LVL23:
 512               	.LBB40:
 513               	.LBB41:
 288:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADCSRA = (0<<ADIE) | (1<<ADSC) | (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADIF);
 514               		.loc 1 288 0
 515 018e 82E4      		ldi r24,lo8(66)
 516 0190 00C0      		rjmp .L59
 517               	.LVL24:
 518               	.L55:
 519               	.LBE41:
 520               	.LBE40:
 324:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			case 5: adc0 = ADC; startADC(ADC_ADC1); break;
 521               		.loc 1 324 0
 522 0192 9093 0000 		sts adcLSR+1,r25
 523 0196 8093 0000 		sts adcLSR,r24
 524               	.LVL25:
 525               	.LBB42:
 526               	.LBB43:
 288:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADCSRA = (0<<ADIE) | (1<<ADSC) | (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADIF);
 527               		.loc 1 288 0
 528 019a 80E4      		ldi r24,lo8(64)
 529 019c 00C0      		rjmp .L59
 530               	.LVL26:
 531               	.L56:
 532               	.LBE43:
 533               	.LBE42:
 325:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			case 6: adc1 = ADC; startADC(ADC_BAT); break;
 534               		.loc 1 325 0
 535 019e 9093 0000 		sts adc0+1,r25
 536 01a2 8093 0000 		sts adc0,r24
 537               	.LVL27:
 538               	.LBB44:
 539               	.LBB45:
 288:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADCSRA = (0<<ADIE) | (1<<ADSC) | (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADIF);
 540               		.loc 1 288 0
 541 01a6 81E4      		ldi r24,lo8(65)
 542 01a8 00C0      		rjmp .L59
 543               	.LVL28:
 544               	.L57:
 545               	.LBE45:
 546               	.LBE44:
 326:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
 547               		.loc 1 326 0
 548 01aa 9093 0000 		sts adc1+1,r25
 549 01ae 8093 0000 		sts adc1,r24
 550               	.LVL29:
 551               	.LBB46:
 552               	.LBB47:
 288:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADCSRA = (0<<ADIE) | (1<<ADSC) | (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADIF);
 553               		.loc 1 288 0
 554 01b2 87E4      		ldi r24,lo8(71)
 555               	.LVL30:
 556               	.L59:
 557 01b4 87B9      		out 0x7,r24
 289:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 558               		.loc 1 289 0
 559 01b6 86ED      		ldi r24,lo8(-42)
 560 01b8 86B9      		out 0x6,r24
 561               	.L49:
 562               	.LBE47:
 563               	.LBE46:
 328:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			current_adc_channel = 0;
 564               		.loc 1 328 0
 565 01ba 8091 0000 		lds r24,current_adc_channel.2141
 566 01be 8630      		cpi r24,lo8(6)
 567 01c0 01F4      		brne .L58
 329:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		else
 568               		.loc 1 329 0
 569 01c2 1092 0000 		sts current_adc_channel.2141,__zero_reg__
 570 01c6 0895      		ret
 571               	.L58:
 331:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 572               		.loc 1 331 0
 573 01c8 8F5F      		subi r24,lo8(-(1))
 574 01ca 8093 0000 		sts current_adc_channel.2141,r24
 575               	.L47:
 576 01ce 0895      		ret
 577               		.cfi_endproc
 578               	.LFE12:
 580               	.global	__vector_1
 582               	__vector_1:
 583               	.LFB13:
 371:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_dist++;
 584               		.loc 1 371 0
 585               		.cfi_startproc
 586 01d0 1F92      		push r1
 587               	.LCFI1:
 588               		.cfi_def_cfa_offset 3
 589               		.cfi_offset 1, -2
 590 01d2 0F92      		push r0
 591               	.LCFI2:
 592               		.cfi_def_cfa_offset 4
 593               		.cfi_offset 0, -3
 594 01d4 0FB6      		in r0,__SREG__
 595 01d6 0F92      		push r0
 596 01d8 1124      		clr __zero_reg__
 597 01da 8F93      		push r24
 598               	.LCFI3:
 599               		.cfi_def_cfa_offset 5
 600               		.cfi_offset 24, -4
 601 01dc 9F93      		push r25
 602               	.LCFI4:
 603               		.cfi_def_cfa_offset 6
 604               		.cfi_offset 25, -5
 605               	/* prologue: Signal */
 606               	/* frame size = 0 */
 607               	/* stack size = 5 */
 608               	.L__stack_usage = 5
 372:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_counter++;	
 609               		.loc 1 372 0
 610 01de 8091 0000 		lds r24,mleft_dist
 611 01e2 9091 0000 		lds r25,mleft_dist+1
 612 01e6 0196      		adiw r24,1
 613 01e8 9093 0000 		sts mleft_dist+1,r25
 614 01ec 8093 0000 		sts mleft_dist,r24
 373:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 615               		.loc 1 373 0
 616 01f0 8091 0000 		lds r24,mleft_counter
 617 01f4 9091 0000 		lds r25,mleft_counter+1
 618 01f8 0196      		adiw r24,1
 619 01fa 9093 0000 		sts mleft_counter+1,r25
 620 01fe 8093 0000 		sts mleft_counter,r24
 621               	/* epilogue start */
 386:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 622               		.loc 1 386 0
 623 0202 9F91      		pop r25
 624 0204 8F91      		pop r24
 625 0206 0F90      		pop r0
 626 0208 0FBE      		out __SREG__,r0
 627 020a 0F90      		pop r0
 628 020c 1F90      		pop r1
 629 020e 1895      		reti
 630               		.cfi_endproc
 631               	.LFE13:
 633               	.global	__vector_2
 635               	__vector_2:
 636               	.LFB14:
 394:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_dist++;
 637               		.loc 1 394 0
 638               		.cfi_startproc
 639 0210 1F92      		push r1
 640               	.LCFI5:
 641               		.cfi_def_cfa_offset 3
 642               		.cfi_offset 1, -2
 643 0212 0F92      		push r0
 644               	.LCFI6:
 645               		.cfi_def_cfa_offset 4
 646               		.cfi_offset 0, -3
 647 0214 0FB6      		in r0,__SREG__
 648 0216 0F92      		push r0
 649 0218 1124      		clr __zero_reg__
 650 021a 8F93      		push r24
 651               	.LCFI7:
 652               		.cfi_def_cfa_offset 5
 653               		.cfi_offset 24, -4
 654 021c 9F93      		push r25
 655               	.LCFI8:
 656               		.cfi_def_cfa_offset 6
 657               		.cfi_offset 25, -5
 658               	/* prologue: Signal */
 659               	/* frame size = 0 */
 660               	/* stack size = 5 */
 661               	.L__stack_usage = 5
 395:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_counter++;
 662               		.loc 1 395 0
 663 021e 8091 0000 		lds r24,mright_dist
 664 0222 9091 0000 		lds r25,mright_dist+1
 665 0226 0196      		adiw r24,1
 666 0228 9093 0000 		sts mright_dist+1,r25
 667 022c 8093 0000 		sts mright_dist,r24
 396:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 668               		.loc 1 396 0
 669 0230 8091 0000 		lds r24,mright_counter
 670 0234 9091 0000 		lds r25,mright_counter+1
 671 0238 0196      		adiw r24,1
 672 023a 9093 0000 		sts mright_counter+1,r25
 673 023e 8093 0000 		sts mright_counter,r24
 674               	/* epilogue start */
 411:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 675               		.loc 1 411 0
 676 0242 9F91      		pop r25
 677 0244 8F91      		pop r24
 678 0246 0F90      		pop r0
 679 0248 0FBE      		out __SREG__,r0
 680 024a 0F90      		pop r0
 681 024c 1F90      		pop r1
 682 024e 1895      		reti
 683               		.cfi_endproc
 684               	.LFE14:
 686               	.global	MOTIONCONTROL_setStateChangedHandler
 688               	MOTIONCONTROL_setStateChangedHandler:
 689               	.LFB16:
 466:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	MOTIONCONTROL_stateChangedHandler = motionControlHandler;
 690               		.loc 1 466 0
 691               		.cfi_startproc
 692               	.LVL31:
 693               	/* prologue: function */
 694               	/* frame size = 0 */
 695               	/* stack size = 0 */
 696               	.L__stack_usage = 0
 467:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 697               		.loc 1 467 0
 698 0250 9093 0000 		sts MOTIONCONTROL_stateChangedHandler+1,r25
 699 0254 8093 0000 		sts MOTIONCONTROL_stateChangedHandler,r24
 700 0258 0895      		ret
 701               		.cfi_endproc
 702               	.LFE16:
 704               	.global	moveAtSpeed
 706               	moveAtSpeed:
 707               	.LFB19:
 765:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(desired_speed_left > 200) desired_speed_left = 200; 
 708               		.loc 1 765 0
 709               		.cfi_startproc
 710               	.LVL32:
 711               	/* prologue: function */
 712               	/* frame size = 0 */
 713               	/* stack size = 0 */
 714               	.L__stack_usage = 0
 715 025a 893C      		cpi r24,lo8(-55)
 716 025c 00F0      		brlo .L64
 717 025e 88EC      		ldi r24,lo8(-56)
 718               	.LVL33:
 719               	.L64:
 768:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_des_speed = desired_speed_right;
 720               		.loc 1 768 0
 721 0260 90E0      		ldi r25,0
 722 0262 9093 0000 		sts mleft_des_speed+1,r25
 723 0266 8093 0000 		sts mleft_des_speed,r24
 724 026a 693C      		cpi r22,lo8(-55)
 725 026c 00F0      		brlo .L65
 726 026e 68EC      		ldi r22,lo8(-56)
 727               	.LVL34:
 728               	.L65:
 769:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 729               		.loc 1 769 0
 730 0270 70E0      		ldi r23,0
 731 0272 7093 0000 		sts mright_des_speed+1,r23
 732 0276 6093 0000 		sts mright_des_speed,r22
 733 027a 0895      		ret
 734               		.cfi_endproc
 735               	.LFE19:
 737               	.global	changeDirection
 739               	changeDirection:
 740               	.LFB20:
 782:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	drive_dir = dir;
 741               		.loc 1 782 0
 742               		.cfi_startproc
 743               	.LVL35:
 744               	/* prologue: function */
 745               	/* frame size = 0 */
 746               	/* stack size = 0 */
 747               	.L__stack_usage = 0
 783:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_des_dir = (dir == BWD || dir == LEFT);
 748               		.loc 1 783 0
 749 027c 8093 0000 		sts drive_dir,r24
 784:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_des_dir = (dir == BWD || dir == RIGHT);
 750               		.loc 1 784 0
 751 0280 2FEF      		ldi r18,lo8(-1)
 752 0282 280F      		add r18,r24
 753 0284 91E0      		ldi r25,lo8(1)
 754 0286 2230      		cpi r18,lo8(2)
 755 0288 00F0      		brlo .L67
 756 028a 90E0      		ldi r25,0
 757               	.L67:
 758 028c 9093 0000 		sts mleft_des_dir,r25
 785:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 759               		.loc 1 785 0
 760 0290 8D7F      		andi r24,lo8(-3)
 761               	.LVL36:
 762 0292 91E0      		ldi r25,lo8(1)
 763 0294 8130      		cpi r24,lo8(1)
 764 0296 01F0      		breq .L68
 765 0298 90E0      		ldi r25,0
 766               	.L68:
 767 029a 9093 0000 		sts mright_des_dir,r25
 768 029e 0895      		ret
 769               		.cfi_endproc
 770               	.LFE20:
 772               	.global	moveAtSpeedDirection
 774               	moveAtSpeedDirection:
 775               	.LFB21:
 799:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_des_dir = desired_speed_left < 0;
 776               		.loc 1 799 0
 777               		.cfi_startproc
 778               	.LVL37:
 779               	/* prologue: function */
 780               	/* frame size = 0 */
 781               	/* stack size = 0 */
 782               	.L__stack_usage = 0
 800:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_des_dir = desired_speed_right < 0;
 783               		.loc 1 800 0
 784 02a0 292F      		mov r18,r25
 785 02a2 221F      		rol r18
 786 02a4 2227      		clr r18
 787 02a6 221F      		rol r18
 788 02a8 2093 0000 		sts mleft_des_dir,r18
 801:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****   
 789               		.loc 1 801 0
 790 02ac 771F      		rol r23
 791 02ae 7727      		clr r23
 792 02b0 771F      		rol r23
 793 02b2 7093 0000 		sts mright_des_dir,r23
 805:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****   uint8_t speed_r_abs = desired_speed_left > 0 ? (uint8_t)desired_speed_right : (uint8_t)(-desired_
 794               		.loc 1 805 0
 795 02b6 1816      		cp __zero_reg__,r24
 796 02b8 1906      		cpc __zero_reg__,r25
 797 02ba 04F0      		brlt .L74
 805:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****   uint8_t speed_r_abs = desired_speed_left > 0 ? (uint8_t)desired_speed_right : (uint8_t)(-desired_
 798               		.loc 1 805 0 is_stmt 0 discriminator 2
 799 02bc 8195      		neg r24
 800               	.LVL38:
 806:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****   moveAtSpeed(speed_l_abs, speed_r_abs);
 801               		.loc 1 806 0 is_stmt 1 discriminator 2
 802 02be 6195      		neg r22
 803               	.LVL39:
 804               	.L74:
 807:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 805               		.loc 1 807 0 discriminator 3
 806 02c0 0C94 0000 		jmp moveAtSpeed
 807               	.LVL40:
 808               		.cfi_endproc
 809               	.LFE21:
 811               	.global	isMovementComplete
 813               	isMovementComplete:
 814               	.LFB22:
 817:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	return !(motion_status.move_L || motion_status.move_R);
 815               		.loc 1 817 0
 816               		.cfi_startproc
 817               	/* prologue: function */
 818               	/* frame size = 0 */
 819               	/* stack size = 0 */
 820               	.L__stack_usage = 0
 818:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 821               		.loc 1 818 0
 822 02c4 9091 0000 		lds r25,motion_status
 823 02c8 9370      		andi r25,lo8(3)
 824 02ca 81E0      		ldi r24,lo8(1)
 825 02cc 01F0      		breq .L76
 826 02ce 80E0      		ldi r24,0
 827               	.L76:
 819:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 828               		.loc 1 819 0
 829 02d0 0895      		ret
 830               		.cfi_endproc
 831               	.LFE22:
 833               	.global	stop
 835               	stop:
 836               	.LFB23:
 828:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_des_speed = 0;
 837               		.loc 1 828 0
 838               		.cfi_startproc
 839               	/* prologue: function */
 840               	/* frame size = 0 */
 841               	/* stack size = 0 */
 842               	.L__stack_usage = 0
 829:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_des_speed = 0;
 843               		.loc 1 829 0
 844 02d2 1092 0000 		sts mleft_des_speed+1,__zero_reg__
 845 02d6 1092 0000 		sts mleft_des_speed,__zero_reg__
 830:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	left_i = 0;
 846               		.loc 1 830 0
 847 02da 1092 0000 		sts mright_des_speed+1,__zero_reg__
 848 02de 1092 0000 		sts mright_des_speed,__zero_reg__
 831:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	right_i = 0;
 849               		.loc 1 831 0
 850 02e2 1092 0000 		sts left_i+1,__zero_reg__
 851 02e6 1092 0000 		sts left_i,__zero_reg__
 832:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status.move_L = false;
 852               		.loc 1 832 0
 853 02ea 1092 0000 		sts right_i+1,__zero_reg__
 854 02ee 1092 0000 		sts right_i,__zero_reg__
 833:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status.move_R = false;
 855               		.loc 1 833 0
 856 02f2 8091 0000 		lds r24,motion_status
 834:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status_tmp = motion_status.byte;
 857               		.loc 1 834 0
 858 02f6 8E7F      		andi r24,lo8(-2)
 859 02f8 8D7F      		andi r24,lo8(~(1<<1))
 860 02fa 8093 0000 		sts motion_status,r24
 835:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	MOTIONCONTROL_stateChangedHandler();
 861               		.loc 1 835 0
 862 02fe 8093 0000 		sts motion_status_tmp,r24
 836:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 863               		.loc 1 836 0
 864 0302 E091 0000 		lds r30,MOTIONCONTROL_stateChangedHandler
 865 0306 F091 0000 		lds r31,MOTIONCONTROL_stateChangedHandler+1
 866 030a 0994      		ijmp
 867               	.LVL41:
 868               		.cfi_endproc
 869               	.LFE23:
 871               	.global	setMotorPower
 873               	setMotorPower:
 874               	.LFB26:
 986:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(left_power > 210) left_power = 210;
 875               		.loc 1 986 0
 876               		.cfi_startproc
 877               	.LVL42:
 878               	/* prologue: function */
 879               	/* frame size = 0 */
 880               	/* stack size = 0 */
 881               	.L__stack_usage = 0
 882 030c 633D      		cpi r22,lo8(-45)
 883 030e 00F0      		brlo .L82
 884 0310 62ED      		ldi r22,lo8(-46)
 885               	.L82:
 989:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_power = left_power;
 886               		.loc 1 989 0
 887 0312 70E0      		ldi r23,0
 888 0314 7093 0000 		sts mright_power+1,r23
 889 0318 6093 0000 		sts mright_power,r22
 890 031c 833D      		cpi r24,lo8(-45)
 891 031e 00F0      		brlo .L83
 892 0320 82ED      		ldi r24,lo8(-46)
 893               	.LVL43:
 894               	.L83:
 990:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 895               		.loc 1 990 0
 896 0322 90E0      		ldi r25,0
 897 0324 9093 0000 		sts mleft_power+1,r25
 898 0328 8093 0000 		sts mleft_power,r24
 899 032c 0895      		ret
 900               		.cfi_endproc
 901               	.LFE26:
 903               	.global	setMotorDir
 905               	setMotorDir:
 906               	.LFB27:
1023:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_dir = left_dir;
 907               		.loc 1 1023 0
 908               		.cfi_startproc
 909               	.LVL44:
 910               	/* prologue: function */
 911               	/* frame size = 0 */
 912               	/* stack size = 0 */
 913               	.L__stack_usage = 0
1024:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_dir = right_dir;
 914               		.loc 1 1024 0
 915 032e 8093 0000 		sts mleft_dir,r24
1025:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_des_dir = left_dir;
 916               		.loc 1 1025 0
 917 0332 6093 0000 		sts mright_dir,r22
1026:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_des_dir = right_dir;
 918               		.loc 1 1026 0
 919 0336 8093 0000 		sts mleft_des_dir,r24
1027:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(left_dir)
 920               		.loc 1 1027 0
 921 033a 6093 0000 		sts mright_des_dir,r22
1028:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		PORTC |= DIR_L;
 922               		.loc 1 1028 0
 923 033e 8823      		tst r24
 924 0340 01F0      		breq .L85
1029:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	else
 925               		.loc 1 1029 0
 926 0342 AA9A      		sbi 0x15,2
 927 0344 00C0      		rjmp .L86
 928               	.L85:
1031:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(right_dir)
 929               		.loc 1 1031 0
 930 0346 AA98      		cbi 0x15,2
 931               	.L86:
1032:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		PORTC |= DIR_R;
 932               		.loc 1 1032 0
 933 0348 6623      		tst r22
 934 034a 01F0      		breq .L87
 935               	.LVL45:
 936               	.LBB50:
 937               	.LBB51:
1033:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	else
 938               		.loc 1 1033 0
 939 034c AB9A      		sbi 0x15,3
 940 034e 0895      		ret
 941               	.LVL46:
 942               	.L87:
 943               	.LBE51:
 944               	.LBE50:
1035:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 945               		.loc 1 1035 0
 946 0350 AB98      		cbi 0x15,3
 947 0352 0895      		ret
 948               		.cfi_endproc
 949               	.LFE27:
 951               	.global	IRCOMM_sendRC5
 953               	IRCOMM_sendRC5:
 954               	.LFB28:
1118:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	while(ircomm_send){TIMSK |= (1 << OCIE2);}
 955               		.loc 1 1118 0
 956               		.cfi_startproc
 957               	.LVL47:
 958               	/* prologue: function */
 959               	/* frame size = 0 */
 960               	/* stack size = 0 */
 961               	.L__stack_usage = 0
 962               	.L90:
1119:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Here we create the RC5 data packet:
 963               		.loc 1 1119 0 discriminator 1
 964 0354 9091 0000 		lds r25,ircomm_send
 965 0358 9923      		tst r25
 966 035a 01F0      		breq .L92
1119:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Here we create the RC5 data packet:
 967               		.loc 1 1119 0 is_stmt 0 discriminator 2
 968 035c 99B7      		in r25,0x39
 969 035e 9068      		ori r25,lo8(-128)
 970 0360 99BF      		out 0x39,r25
 971 0362 00C0      		rjmp .L90
 972               	.L92:
1121:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	sysStatACS.ircomm_transmit = true;
 973               		.loc 1 1121 0 is_stmt 1
 974 0364 6F73      		andi r22,lo8(63)
 975               	.LVL48:
 976 0366 70E0      		ldi r23,0
 977 0368 7063      		ori r23,48
 978 036a 8F73      		andi r24,lo8(63)
 979               	.LVL49:
 980 036c 20E4      		ldi r18,lo8(64)
 981 036e 829F      		mul r24,r18
 982 0370 C001      		movw r24,r0
 983 0372 1124      		clr __zero_reg__
 984 0374 682B      		or r22,r24
 985 0376 792B      		or r23,r25
 986 0378 7093 0000 		sts ircomm_data_tmp+1,r23
 987 037c 6093 0000 		sts ircomm_data_tmp,r22
1122:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 988               		.loc 1 1122 0
 989 0380 8091 0000 		lds r24,sysStatACS
 990 0384 8064      		ori r24,lo8(1<<6)
 991 0386 8093 0000 		sts sysStatACS,r24
 992 038a 0895      		ret
 993               		.cfi_endproc
 994               	.LFE28:
 996               	.global	__vector_4
 998               	__vector_4:
 999               	.LFB29:
1137:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	static uint8_t ircomm_pulse;
 1000               		.loc 1 1137 0
 1001               		.cfi_startproc
 1002 038c 1F92      		push r1
 1003               	.LCFI9:
 1004               		.cfi_def_cfa_offset 3
 1005               		.cfi_offset 1, -2
 1006 038e 0F92      		push r0
 1007               	.LCFI10:
 1008               		.cfi_def_cfa_offset 4
 1009               		.cfi_offset 0, -3
 1010 0390 0FB6      		in r0,__SREG__
 1011 0392 0F92      		push r0
 1012 0394 1124      		clr __zero_reg__
 1013 0396 8F93      		push r24
 1014               	.LCFI11:
 1015               		.cfi_def_cfa_offset 5
 1016               		.cfi_offset 24, -4
 1017 0398 9F93      		push r25
 1018               	.LCFI12:
 1019               		.cfi_def_cfa_offset 6
 1020               		.cfi_offset 25, -5
 1021               	/* prologue: Signal */
 1022               	/* frame size = 0 */
 1023               	/* stack size = 5 */
 1024               	.L__stack_usage = 5
1139:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(ircomm_pulse) { // Do we have IR pulses to send?
 1025               		.loc 1 1139 0
 1026 039a 8091 0000 		lds r24,acs_state
 1027 039e 8230      		cpi r24,lo8(2)
 1028 03a0 00F4      		brsh .L94
1140:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(ircomm_pulse < 60) { // Bi-Phase encoding...
 1029               		.loc 1 1140 0
 1030 03a2 8091 0000 		lds r24,ircomm_pulse.2326
 1031 03a6 8823      		tst r24
 1032 03a8 01F0      		breq .L95
1141:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(ircomm_data & 0x4000) // check current bit
 1033               		.loc 1 1141 0
 1034 03aa 8C33      		cpi r24,lo8(60)
 1035 03ac 00F4      		brsh .L96
1142:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					PORTD ^= (1<<PIND7); // Toggle IRCOMM port
 1036               		.loc 1 1142 0
 1037 03ae 8091 0000 		lds r24,ircomm_data
 1038 03b2 9091 0000 		lds r25,ircomm_data+1
 1039 03b6 96FF      		sbrs r25,6
 1040 03b8 00C0      		rjmp .L105
 1041 03ba 00C0      		rjmp .L99
 1042               	.L96:
1147:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				PORTD &= ~(1<<PIND7); // deactivate IRCOMM port
 1043               		.loc 1 1147 0
 1044 03bc 8091 0000 		lds r24,ircomm_data
 1045 03c0 9091 0000 		lds r25,ircomm_data+1
 1046 03c4 96FF      		sbrs r25,6
 1047 03c6 00C0      		rjmp .L99
 1048               	.L105:
1148:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			else
 1049               		.loc 1 1148 0
 1050 03c8 9798      		cbi 0x12,7
 1051 03ca 00C0      		rjmp .L98
 1052               	.L99:
1150:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			ircomm_pulse--;
 1053               		.loc 1 1150 0
 1054 03cc 82B3      		in r24,0x12
 1055 03ce 8058      		subi r24,lo8(-(-128))
 1056 03d0 82BB      		out 0x12,r24
 1057               	.L98:
1151:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
 1058               		.loc 1 1151 0 discriminator 2
 1059 03d2 8091 0000 		lds r24,ircomm_pulse.2326
 1060 03d6 8150      		subi r24,lo8(-(-1))
 1061 03d8 8093 0000 		sts ircomm_pulse.2326,r24
 1062 03dc 00C0      		rjmp .L93
 1063               	.L95:
1153:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			PORTD &= ~(1<<PIND7);
 1064               		.loc 1 1153 0
 1065 03de 8091 0000 		lds r24,ircomm_send
1154:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			ircomm_data <<= 1; // Next Bit!
 1066               		.loc 1 1154 0
 1067 03e2 9798      		cbi 0x12,7
1153:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			PORTD &= ~(1<<PIND7);
 1068               		.loc 1 1153 0
 1069 03e4 8823      		tst r24
 1070 03e6 01F0      		breq .L93
1155:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			ircomm_pulse = 120;
 1071               		.loc 1 1155 0
 1072 03e8 8091 0000 		lds r24,ircomm_data
 1073 03ec 9091 0000 		lds r25,ircomm_data+1
 1074 03f0 880F      		lsl r24
 1075 03f2 991F      		rol r25
 1076 03f4 9093 0000 		sts ircomm_data+1,r25
 1077 03f8 8093 0000 		sts ircomm_data,r24
1156:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			ircomm_send--;
 1078               		.loc 1 1156 0
 1079 03fc 88E7      		ldi r24,lo8(120)
 1080 03fe 8093 0000 		sts ircomm_pulse.2326,r24
1157:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
 1081               		.loc 1 1157 0
 1082 0402 8091 0000 		lds r24,ircomm_send
 1083 0406 8150      		subi r24,lo8(-(-1))
 1084 0408 8093 0000 		sts ircomm_send,r24
 1085 040c 00C0      		rjmp .L93
 1086               	.L94:
1162:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(sysStatACS.channel == ACS_CHANNEL_LEFT) // which channel?
 1087               		.loc 1 1162 0
 1088 040e 8091 0000 		lds r24,acs_pulse
 1089 0412 8823      		tst r24
 1090 0414 01F0      		breq .L102
1163:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			PORTB ^= ACS_L; 
 1091               		.loc 1 1163 0
 1092 0416 8091 0000 		lds r24,sysStatACS
 1093 041a 80FD      		sbrc r24,0
 1094 041c 00C0      		rjmp .L103
1164:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		else 			
 1095               		.loc 1 1164 0
 1096 041e 88B3      		in r24,0x18
 1097 0420 90E4      		ldi r25,lo8(64)
 1098 0422 8927      		eor r24,r25
 1099 0424 88BB      		out 0x18,r24
 1100 0426 00C0      		rjmp .L104
 1101               	.L103:
1166:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		acs_pulse--;
 1102               		.loc 1 1166 0
 1103 0428 85B3      		in r24,0x15
 1104 042a 8058      		subi r24,lo8(-(-128))
 1105 042c 85BB      		out 0x15,r24
 1106               	.L104:
1167:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 1107               		.loc 1 1167 0 discriminator 4
 1108 042e 8091 0000 		lds r24,acs_pulse
 1109 0432 8150      		subi r24,lo8(-(-1))
 1110 0434 8093 0000 		sts acs_pulse,r24
 1111 0438 00C0      		rjmp .L93
 1112               	.L102:
1170:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		PORTC |= ACS_R;
 1113               		.loc 1 1170 0
 1114 043a C69A      		sbi 0x18,6
1171:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 1115               		.loc 1 1171 0
 1116 043c AF9A      		sbi 0x15,7
 1117               	.L93:
 1118               	/* epilogue start */
1173:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 1119               		.loc 1 1173 0
 1120 043e 9F91      		pop r25
 1121 0440 8F91      		pop r24
 1122 0442 0F90      		pop r0
 1123 0444 0FBE      		out __SREG__,r0
 1124 0446 0F90      		pop r0
 1125 0448 1F90      		pop r1
 1126 044a 1895      		reti
 1127               		.cfi_endproc
 1128               	.LFE29:
 1130               	.global	__vector_3
 1132               	__vector_3:
 1133               	.LFB30:
1180:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(acs_state == ACS_STATE_WAIT_LEFT || acs_state == ACS_STATE_WAIT_RIGHT)
 1134               		.loc 1 1180 0
 1135               		.cfi_startproc
 1136 044c 1F92      		push r1
 1137               	.LCFI13:
 1138               		.cfi_def_cfa_offset 3
 1139               		.cfi_offset 1, -2
 1140 044e 0F92      		push r0
 1141               	.LCFI14:
 1142               		.cfi_def_cfa_offset 4
 1143               		.cfi_offset 0, -3
 1144 0450 0FB6      		in r0,__SREG__
 1145 0452 0F92      		push r0
 1146 0454 1124      		clr __zero_reg__
 1147 0456 8F93      		push r24
 1148               	.LCFI15:
 1149               		.cfi_def_cfa_offset 5
 1150               		.cfi_offset 24, -4
 1151               	/* prologue: Signal */
 1152               	/* frame size = 0 */
 1153               	/* stack size = 4 */
 1154               	.L__stack_usage = 4
1181:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(!sysStatACS.detect_rc5 && sysStatACS.acs_go && !(PINB & ACS))
 1155               		.loc 1 1181 0
 1156 0458 8091 0000 		lds r24,acs_state
 1157 045c 8330      		cpi r24,lo8(3)
 1158 045e 01F0      		breq .L107
1181:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(!sysStatACS.detect_rc5 && sysStatACS.acs_go && !(PINB & ACS))
 1159               		.loc 1 1181 0 is_stmt 0 discriminator 1
 1160 0460 8630      		cpi r24,lo8(6)
 1161 0462 01F4      		brne .L108
 1162               	.L107:
1182:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			acs_event_counter++;
 1163               		.loc 1 1182 0 is_stmt 1
 1164 0464 8091 0000 		lds r24,sysStatACS
 1165 0468 84FD      		sbrc r24,4
 1166 046a 00C0      		rjmp .L108
1182:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			acs_event_counter++;
 1167               		.loc 1 1182 0 is_stmt 0 discriminator 1
 1168 046c 8091 0000 		lds r24,sysStatACS
 1169 0470 85FF      		sbrs r24,5
 1170 0472 00C0      		rjmp .L108
 1171 0474 B299      		sbic 0x16,2
 1172 0476 00C0      		rjmp .L108
1183:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	sysStatACS.pin = (PINB & ACS);
 1173               		.loc 1 1183 0 is_stmt 1
 1174 0478 8091 0000 		lds r24,acs_event_counter
 1175 047c 8F5F      		subi r24,lo8(-(1))
 1176 047e 8093 0000 		sts acs_event_counter,r24
 1177               	.L108:
1184:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 1178               		.loc 1 1184 0
 1179 0482 86B3      		in r24,0x16
 1180 0484 8091 0000 		lds r24,sysStatACS
 1181 0488 8D7F      		andi r24,lo8(~(1<<1))
 1182 048a 8093 0000 		sts sysStatACS,r24
 1183               	/* epilogue start */
1185:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 1184               		.loc 1 1185 0
 1185 048e 8F91      		pop r24
 1186 0490 0F90      		pop r0
 1187 0492 0FBE      		out __SREG__,r0
 1188 0494 0F90      		pop r0
 1189 0496 1F90      		pop r1
 1190 0498 1895      		reti
 1191               		.cfi_endproc
 1192               	.LFE30:
 1194               	.global	IRCOMM_setRC5DataReadyHandler
 1196               	IRCOMM_setRC5DataReadyHandler:
 1197               	.LFB32:
1220:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	IRCOMM_RC5dataReadyHandler = rc5Handler;
 1198               		.loc 1 1220 0
 1199               		.cfi_startproc
 1200               	.LVL50:
 1201               	/* prologue: function */
 1202               	/* frame size = 0 */
 1203               	/* stack size = 0 */
 1204               	.L__stack_usage = 0
1221:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 1205               		.loc 1 1221 0
 1206 049a 9093 0000 		sts IRCOMM_RC5dataReadyHandler+1,r25
 1207 049e 8093 0000 		sts IRCOMM_RC5dataReadyHandler,r24
 1208 04a2 0895      		ret
 1209               		.cfi_endproc
 1210               	.LFE32:
 1212               	.global	ACS_setStateChangedHandler
 1214               	ACS_setStateChangedHandler:
 1215               	.LFB34:
1231:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** static void (*ACS_stateChangedHandler)(void) = ACS_stateChanged_DUMMY;
1232:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1233:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Use this function to set the ACS state changed handler. 
1234:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * The function you register will be called everytime when the ACS
1235:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * has different status - e.g. if it suddenly detects and obstacle
1236:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * OR if the obstacle moves out of the line of sight and ACS
1237:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * reports "Way is free" again.
1238:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1239:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void ACS_setStateChangedHandler(void (*acsHandler)(void)) 
1240:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 1216               		.loc 1 1240 0
 1217               		.cfi_startproc
 1218               	.LVL51:
 1219               	/* prologue: function */
 1220               	/* frame size = 0 */
 1221               	/* stack size = 0 */
 1222               	.L__stack_usage = 0
1241:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ACS_stateChangedHandler = acsHandler;
 1223               		.loc 1 1241 0
 1224 04a4 9093 0000 		sts ACS_stateChangedHandler+1,r25
 1225 04a8 8093 0000 		sts ACS_stateChangedHandler,r24
 1226 04ac 0895      		ret
 1227               		.cfi_endproc
 1228               	.LFE34:
 1230               	.global	task_ACS
 1232               	task_ACS:
 1233               	.LFB35:
1242:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1243:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1244:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1245:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1246:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This is the ACS task.
1247:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * It should be called frequently out of the main loop.
1248:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1249:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * ACS is synchronized with RC5 transmission/reception and works also during 
1250:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * RC5 data transmissions. If other _non_ RC5 code IR transmission are active, 
1251:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * it will maybe NOT work during this time or it may detect invisible obstacles!
1252:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * You need to call this function all the time if you want to transmit or receive
1253:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * RC5 data with the IRCOMM!
1254:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1255:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
1256:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1257:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 		// Main loop 
1258:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		while(true) 
1259:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		{
1260:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			task_ACS();
1261:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			//... other things ...
1262:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		}
1263:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1264:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1265:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  
1266:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1267:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void task_ACS(void)
1268:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 1234               		.loc 1 1268 0
 1235               		.cfi_startproc
 1236               	/* prologue: function */
 1237               	/* frame size = 0 */
 1238               	/* stack size = 0 */
 1239               	.L__stack_usage = 0
1269:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  	static uint8_t acs_counter;
1270:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	static uint16_t acs_detect_timeout;
1271:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(acs_timer >= ACS_UPDATE_INTERVAL) { 
 1240               		.loc 1 1271 0
 1241 04ae 8091 0000 		lds r24,acs_timer
 1242 04b2 9091 0000 		lds r25,acs_timer+1
 1243 04b6 0297      		sbiw r24,2
 1244 04b8 00F4      		brsh .+2
 1245 04ba 00C0      		rjmp .L117
 1246               	.LBB52:
1272:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(!sysStatACS.detect_rc5) {    // Any RC5 reception detected?
 1247               		.loc 1 1272 0
 1248 04bc 8091 0000 		lds r24,sysStatACS
 1249 04c0 84FD      		sbrc r24,4
 1250 04c2 00C0      		rjmp .L119
1273:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			switch(acs_state) {       // No - perform IR Transmission and ACS tasks...
 1251               		.loc 1 1273 0
 1252 04c4 8091 0000 		lds r24,acs_state
 1253 04c8 8230      		cpi r24,lo8(2)
 1254 04ca 01F4      		brne .+2
 1255 04cc 00C0      		rjmp .L121
 1256 04ce 00F4      		brsh .L122
 1257 04d0 8823      		tst r24
 1258 04d2 01F0      		breq .L123
 1259 04d4 8130      		cpi r24,lo8(1)
 1260 04d6 01F0      		breq .L124
 1261 04d8 00C0      		rjmp .L120
 1262               	.L122:
 1263 04da 8530      		cpi r24,lo8(5)
 1264 04dc 01F4      		brne .+2
 1265 04de 00C0      		rjmp .L125
 1266 04e0 8630      		cpi r24,lo8(6)
 1267 04e2 01F4      		brne .+2
 1268 04e4 00C0      		rjmp .L126
 1269 04e6 8330      		cpi r24,lo8(3)
 1270 04e8 01F0      		breq .+2
 1271 04ea 00C0      		rjmp .L120
 1272 04ec 00C0      		rjmp .L156
 1273               	.L123:
1274:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				case ACS_STATE_IDLE: // Disable Timer2 interrupt to save processing time:
1275:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					TIMSK &= ~(1 << OCIE2);
 1274               		.loc 1 1275 0
 1275 04ee 89B7      		in r24,0x39
 1276 04f0 8F77      		andi r24,lo8(127)
 1277 04f2 89BF      		out 0x39,r24
1276:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					IRCOMM_OFF();
 1278               		.loc 1 1276 0
 1279 04f4 9798      		cbi 0x12,7
1277:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					PORTB |= ACS_L;
 1280               		.loc 1 1277 0
 1281 04f6 C69A      		sbi 0x18,6
1278:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					PORTC |= ACS_R;
 1282               		.loc 1 1278 0
 1283 04f8 AF9A      		sbi 0x15,7
1279:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				break;
 1284               		.loc 1 1279 0
 1285 04fa 00C0      		rjmp .L120
 1286               	.L124:
1280:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				case ACS_STATE_IRCOMM_DELAY: // Check for IRCOMM transmit data:
1281:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					if(!ircomm_send) {  // Transmission finished?
 1287               		.loc 1 1281 0
 1288 04fc 8091 0000 		lds r24,ircomm_send
 1289 0500 8111      		cpse r24,__zero_reg__
 1290 0502 00C0      		rjmp .L128
1282:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						if(sysStatACS.ircomm_transmit) { // New transmission?
 1291               		.loc 1 1282 0
 1292 0504 8091 0000 		lds r24,sysStatACS
 1293 0508 86FF      		sbrs r24,6
 1294 050a 00C0      		rjmp .L129
1283:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							ircomm_data = ircomm_data_tmp;
 1295               		.loc 1 1283 0
 1296 050c 8091 0000 		lds r24,ircomm_data_tmp
 1297 0510 9091 0000 		lds r25,ircomm_data_tmp+1
 1298 0514 9093 0000 		sts ircomm_data+1,r25
 1299 0518 8093 0000 		sts ircomm_data,r24
1284:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							ircomm_send = 14;
 1300               		.loc 1 1284 0
 1301 051c 8EE0      		ldi r24,lo8(14)
 1302 051e 8093 0000 		sts ircomm_send,r24
1285:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							sysStatACS.ircomm_transmit = false;
 1303               		.loc 1 1285 0
 1304 0522 8091 0000 		lds r24,sysStatACS
 1305 0526 8F7B      		andi r24,lo8(~(1<<6))
 1306 0528 8093 0000 		sts sysStatACS,r24
1286:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							TIMSK |= (1 << OCIE2);
 1307               		.loc 1 1286 0
 1308 052c 89B7      		in r24,0x39
 1309 052e 8068      		ori r24,lo8(-128)
 1310 0530 89BF      		out 0x39,r24
 1311 0532 00C0      		rjmp .L130
 1312               	.L129:
1287:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						}
1288:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						else {
1289:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							TIMSK &= ~(1 << OCIE2);
 1313               		.loc 1 1289 0
 1314 0534 89B7      		in r24,0x39
 1315 0536 8F77      		andi r24,lo8(127)
 1316 0538 89BF      		out 0x39,r24
1290:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							IRCOMM_OFF();
 1317               		.loc 1 1290 0
 1318 053a 9798      		cbi 0x12,7
1291:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							PORTB |= ACS_L;
 1319               		.loc 1 1291 0
 1320 053c C69A      		sbi 0x18,6
1292:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							PORTC |= ACS_R;
 1321               		.loc 1 1292 0
 1322 053e AF9A      		sbi 0x15,7
 1323               	.L130:
1293:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						}
1294:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						if(acs_counter++ >= ACS_IRCOMM_WAIT_TIME) // Delay 
 1324               		.loc 1 1294 0
 1325 0540 8091 0000 		lds r24,acs_counter.2353
 1326 0544 91E0      		ldi r25,lo8(1)
 1327 0546 980F      		add r25,r24
 1328 0548 9093 0000 		sts acs_counter.2353,r25
 1329 054c 8431      		cpi r24,lo8(20)
 1330 054e 00F0      		brlo .L131
1295:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							acs_state=ACS_STATE_SEND_LEFT;
 1331               		.loc 1 1295 0
 1332 0550 82E0      		ldi r24,lo8(2)
 1333 0552 8093 0000 		sts acs_state,r24
 1334 0556 00C0      		rjmp .L131
 1335               	.L128:
1296:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					}
1297:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					else
1298:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						TIMSK |= (1 << OCIE2);
 1336               		.loc 1 1298 0
 1337 0558 89B7      		in r24,0x39
 1338 055a 8068      		ori r24,lo8(-128)
 1339 055c 89BF      		out 0x39,r24
 1340               	.L131:
1299:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					if(sysStatACS.rc5_data_received) { // RC5 data received? 
 1341               		.loc 1 1299 0
 1342 055e 8091 0000 		lds r24,sysStatACS
 1343 0562 83FF      		sbrs r24,3
 1344 0564 00C0      		rjmp .L120
1300:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						IRCOMM_RC5dataReadyHandler(IRCOMM_RC5_data_ok); // Call handler
 1345               		.loc 1 1300 0
 1346 0566 E091 0000 		lds r30,IRCOMM_RC5dataReadyHandler
 1347 056a F091 0000 		lds r31,IRCOMM_RC5dataReadyHandler+1
 1348 056e 8091 0000 		lds r24,IRCOMM_RC5_data_ok
 1349 0572 9091 0000 		lds r25,IRCOMM_RC5_data_ok+1
 1350 0576 0995      		icall
 1351               	.LVL52:
1301:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						IRCOMM_RC5_data	= IRCOMM_RC5_data_ok;
 1352               		.loc 1 1301 0
 1353 0578 8091 0000 		lds r24,IRCOMM_RC5_data_ok
 1354 057c 9091 0000 		lds r25,IRCOMM_RC5_data_ok+1
 1355 0580 9093 0000 		sts IRCOMM_RC5_data+1,r25
 1356 0584 8093 0000 		sts IRCOMM_RC5_data,r24
1302:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						IRCOMM_RC5_data_ok.data = 0;
 1357               		.loc 1 1302 0
 1358 0588 1092 0000 		sts IRCOMM_RC5_data_ok+1,__zero_reg__
 1359 058c 1092 0000 		sts IRCOMM_RC5_data_ok,__zero_reg__
1303:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						sysStatACS.rc5_data_received = false;
 1360               		.loc 1 1303 0
 1361 0590 8091 0000 		lds r24,sysStatACS
 1362 0594 877F      		andi r24,lo8(~(1<<3))
 1363 0596 8093 0000 		sts sysStatACS,r24
 1364 059a 00C0      		rjmp .L120
 1365               	.L121:
1304:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					}
1305:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				break;
1306:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				case ACS_STATE_SEND_LEFT:  // Prepare left channel:
1307:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					TIMSK &= ~(1 << OCIE2);
 1366               		.loc 1 1307 0
 1367 059c 89B7      		in r24,0x39
 1368 059e 8F77      		andi r24,lo8(127)
 1369 05a0 89BF      		out 0x39,r24
1308:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					IRCOMM_OFF();
 1370               		.loc 1 1308 0
 1371 05a2 9798      		cbi 0x12,7
1309:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					PORTB |= ACS_L;
 1372               		.loc 1 1309 0
 1373 05a4 C69A      		sbi 0x18,6
1310:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					PORTC |= ACS_R;
 1374               		.loc 1 1310 0
 1375 05a6 AF9A      		sbi 0x15,7
1311:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					acs_pulse = 0;
 1376               		.loc 1 1311 0
 1377 05a8 1092 0000 		sts acs_pulse,__zero_reg__
1312:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					acs_event_counter = 0;
 1378               		.loc 1 1312 0
 1379 05ac 1092 0000 		sts acs_event_counter,__zero_reg__
1313:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					acs_detect_timeout = 0;
 1380               		.loc 1 1313 0
 1381 05b0 1092 0000 		sts acs_detect_timeout.2354+1,__zero_reg__
 1382 05b4 1092 0000 		sts acs_detect_timeout.2354,__zero_reg__
1314:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					sysStatACS.channel = ACS_CHANNEL_LEFT;
 1383               		.loc 1 1314 0
 1384 05b8 8091 0000 		lds r24,sysStatACS
1315:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					sysStatACS.acs_go = true;
 1385               		.loc 1 1315 0
 1386 05bc 8E7F      		andi r24,lo8(-2)
 1387 05be 8062      		ori r24,lo8(1<<5)
 1388 05c0 8093 0000 		sts sysStatACS,r24
1316:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					acs_counter = 3; 
 1389               		.loc 1 1316 0
 1390 05c4 83E0      		ldi r24,lo8(3)
 1391 05c6 8093 0000 		sts acs_counter.2353,r24
 1392 05ca 00C0      		rjmp .L152
 1393               	.L156:
1317:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					acs_state = ACS_STATE_WAIT_LEFT;
1318:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				break;
1319:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				case ACS_STATE_WAIT_LEFT: // Wait for reception of IR pulses from Left channel
1320:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					if(!acs_pulse && acs_counter++ > 2) { 
 1394               		.loc 1 1320 0
 1395 05cc 8091 0000 		lds r24,acs_pulse
 1396 05d0 8111      		cpse r24,__zero_reg__
 1397 05d2 00C0      		rjmp .L134
 1398               		.loc 1 1320 0 is_stmt 0 discriminator 1
 1399 05d4 8091 0000 		lds r24,acs_counter.2353
 1400 05d8 91E0      		ldi r25,lo8(1)
 1401 05da 980F      		add r25,r24
 1402 05dc 9093 0000 		sts acs_counter.2353,r25
 1403 05e0 8330      		cpi r24,lo8(3)
 1404 05e2 00F0      		brlo .L134
1321:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						TIMSK |= (1 << OCIE2); 
 1405               		.loc 1 1321 0 is_stmt 1
 1406 05e4 89B7      		in r24,0x39
 1407 05e6 8068      		ori r24,lo8(-128)
 1408 05e8 89BF      		out 0x39,r24
1322:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_pulse = ACS_SEND_PULSES_LEFT;  // Send pulses! 
 1409               		.loc 1 1322 0
 1410 05ea 88E2      		ldi r24,lo8(40)
 1411 05ec 8093 0000 		sts acs_pulse,r24
1323:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_counter = 0;
 1412               		.loc 1 1323 0
 1413 05f0 1092 0000 		sts acs_counter.2353,__zero_reg__
 1414               	.L134:
1324:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					}
1325:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					if(obstacle_left && acs_event_counter >= ACS_REC_PULSES_LEFT_THRESHOLD) {
 1415               		.loc 1 1325 0
 1416 05f4 8091 0000 		lds r24,obstacle_left
 1417 05f8 8823      		tst r24
 1418 05fa 01F0      		breq .L136
 1419               		.loc 1 1325 0 is_stmt 0 discriminator 1
 1420 05fc 8091 0000 		lds r24,acs_event_counter
 1421 0600 8230      		cpi r24,lo8(2)
 1422 0602 00F4      		brsh .L155
 1423               	.L136:
1326:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_event_counter = 0;
1327:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						obstacle_left = true;
1328:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_state = ACS_STATE_SEND_RIGHT;
1329:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					}
1330:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					else if(acs_event_counter >= ACS_REC_PULSES_LEFT) { // receive min. ACS_REC_PULSES_LEFT pulses
 1424               		.loc 1 1330 0 is_stmt 1
 1425 0604 8091 0000 		lds r24,acs_event_counter
 1426 0608 8630      		cpi r24,lo8(6)
 1427 060a 00F0      		brlo .L137
 1428               	.L155:
1331:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_event_counter = 0;
 1429               		.loc 1 1331 0
 1430 060c 1092 0000 		sts acs_event_counter,__zero_reg__
1332:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						obstacle_left = true;
 1431               		.loc 1 1332 0
 1432 0610 81E0      		ldi r24,lo8(1)
 1433 0612 8093 0000 		sts obstacle_left,r24
1333:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_state = ACS_STATE_SEND_RIGHT;
 1434               		.loc 1 1333 0
 1435 0616 85E0      		ldi r24,lo8(5)
 1436 0618 00C0      		rjmp .L152
 1437               	.L137:
1334:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					}
1335:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					else if(acs_detect_timeout++ >= ACS_TIMEOUT_LEFT) { // Timeout?
 1438               		.loc 1 1335 0
 1439 061a 8091 0000 		lds r24,acs_detect_timeout.2354
 1440 061e 9091 0000 		lds r25,acs_detect_timeout.2354+1
 1441 0622 9C01      		movw r18,r24
 1442 0624 2F5F      		subi r18,-1
 1443 0626 3F4F      		sbci r19,-1
 1444 0628 3093 0000 		sts acs_detect_timeout.2354+1,r19
 1445 062c 2093 0000 		sts acs_detect_timeout.2354,r18
 1446 0630 0E97      		sbiw r24,14
 1447 0632 00F4      		brsh .+2
 1448 0634 00C0      		rjmp .L120
1336:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						obstacle_left = false;
 1449               		.loc 1 1336 0
 1450 0636 1092 0000 		sts obstacle_left,__zero_reg__
1337:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_state = ACS_STATE_SEND_RIGHT;
 1451               		.loc 1 1337 0
 1452 063a 85E0      		ldi r24,lo8(5)
 1453 063c 00C0      		rjmp .L154
 1454               	.L125:
1338:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						TIMSK &= ~(1 << OCIE2);
1339:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						IRCOMM_OFF();
1340:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						PORTB |= ACS_L;
1341:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						PORTC |= ACS_R;
1342:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_pulse = 0;
1343:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					}
1344:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				break;
1345:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				case ACS_STATE_SEND_RIGHT:   // Prepare right channel:
1346:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					TIMSK &= ~(1 << OCIE2);
 1455               		.loc 1 1346 0
 1456 063e 89B7      		in r24,0x39
 1457 0640 8F77      		andi r24,lo8(127)
 1458 0642 89BF      		out 0x39,r24
1347:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					IRCOMM_OFF();
 1459               		.loc 1 1347 0
 1460 0644 9798      		cbi 0x12,7
1348:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					PORTB |= ACS_L;
 1461               		.loc 1 1348 0
 1462 0646 C69A      		sbi 0x18,6
1349:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					PORTC |= ACS_R;
 1463               		.loc 1 1349 0
 1464 0648 AF9A      		sbi 0x15,7
1350:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					acs_pulse = 0;
 1465               		.loc 1 1350 0
 1466 064a 1092 0000 		sts acs_pulse,__zero_reg__
1351:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					acs_event_counter = 0;
 1467               		.loc 1 1351 0
 1468 064e 1092 0000 		sts acs_event_counter,__zero_reg__
1352:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					acs_detect_timeout = 0;
 1469               		.loc 1 1352 0
 1470 0652 1092 0000 		sts acs_detect_timeout.2354+1,__zero_reg__
 1471 0656 1092 0000 		sts acs_detect_timeout.2354,__zero_reg__
1353:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					sysStatACS.channel = ACS_CHANNEL_RIGHT;
 1472               		.loc 1 1353 0
 1473 065a 8091 0000 		lds r24,sysStatACS
1354:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					sysStatACS.acs_go = true;
 1474               		.loc 1 1354 0
 1475 065e 8160      		ori r24,lo8(1)
 1476 0660 8062      		ori r24,lo8(1<<5)
 1477 0662 8093 0000 		sts sysStatACS,r24
1355:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					acs_counter = 3;
 1478               		.loc 1 1355 0
 1479 0666 83E0      		ldi r24,lo8(3)
 1480 0668 8093 0000 		sts acs_counter.2353,r24
1356:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					acs_state = ACS_STATE_WAIT_RIGHT;
 1481               		.loc 1 1356 0
 1482 066c 86E0      		ldi r24,lo8(6)
 1483 066e 00C0      		rjmp .L152
 1484               	.L126:
1357:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				break;
1358:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				case ACS_STATE_WAIT_RIGHT:  // Wait for reception of IR pulses
1359:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					if(!acs_pulse && acs_counter++ > 2) { 
 1485               		.loc 1 1359 0
 1486 0670 8091 0000 		lds r24,acs_pulse
 1487 0674 8111      		cpse r24,__zero_reg__
 1488 0676 00C0      		rjmp .L140
 1489               		.loc 1 1359 0 is_stmt 0 discriminator 1
 1490 0678 8091 0000 		lds r24,acs_counter.2353
 1491 067c 91E0      		ldi r25,lo8(1)
 1492 067e 980F      		add r25,r24
 1493 0680 9093 0000 		sts acs_counter.2353,r25
 1494 0684 8330      		cpi r24,lo8(3)
 1495 0686 00F0      		brlo .L140
1360:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						TIMSK |= (1 << OCIE2);
 1496               		.loc 1 1360 0 is_stmt 1
 1497 0688 89B7      		in r24,0x39
 1498 068a 8068      		ori r24,lo8(-128)
 1499 068c 89BF      		out 0x39,r24
1361:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_pulse = ACS_SEND_PULSES_RIGHT; 	// Send pulses!
 1500               		.loc 1 1361 0
 1501 068e 88E2      		ldi r24,lo8(40)
 1502 0690 8093 0000 		sts acs_pulse,r24
1362:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_counter = 0;
 1503               		.loc 1 1362 0
 1504 0694 1092 0000 		sts acs_counter.2353,__zero_reg__
 1505               	.L140:
1363:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					}
1364:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					if(obstacle_right && acs_event_counter >= ACS_REC_PULSES_RIGHT_THRESHOLD) {
 1506               		.loc 1 1364 0
 1507 0698 8091 0000 		lds r24,obstacle_right
 1508 069c 8823      		tst r24
 1509 069e 01F0      		breq .L142
 1510               		.loc 1 1364 0 is_stmt 0 discriminator 1
 1511 06a0 8091 0000 		lds r24,acs_event_counter
 1512 06a4 8230      		cpi r24,lo8(2)
 1513 06a6 00F4      		brsh .L153
 1514               	.L142:
1365:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_event_counter = 0;
1366:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						obstacle_right = true;
1367:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_state = ACS_STATE_IRCOMM_DELAY;
1368:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					}
1369:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					else if(acs_event_counter >= ACS_REC_PULSES_RIGHT) { // receive min. ACS_REC_PULSES_RIGHT puls
 1515               		.loc 1 1369 0 is_stmt 1
 1516 06a8 8091 0000 		lds r24,acs_event_counter
 1517 06ac 8630      		cpi r24,lo8(6)
 1518 06ae 00F0      		brlo .L143
 1519               	.L153:
1370:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_event_counter = 0;
 1520               		.loc 1 1370 0
 1521 06b0 1092 0000 		sts acs_event_counter,__zero_reg__
1371:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						obstacle_right = true;
 1522               		.loc 1 1371 0
 1523 06b4 81E0      		ldi r24,lo8(1)
 1524 06b6 8093 0000 		sts obstacle_right,r24
 1525               	.L152:
1372:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_state = ACS_STATE_IRCOMM_DELAY;
 1526               		.loc 1 1372 0
 1527 06ba 8093 0000 		sts acs_state,r24
 1528 06be 00C0      		rjmp .L120
 1529               	.L143:
1373:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					}
1374:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					else if(acs_detect_timeout++ >= ACS_TIMEOUT_RIGHT) { // Timeout?
 1530               		.loc 1 1374 0
 1531 06c0 8091 0000 		lds r24,acs_detect_timeout.2354
 1532 06c4 9091 0000 		lds r25,acs_detect_timeout.2354+1
 1533 06c8 9C01      		movw r18,r24
 1534 06ca 2F5F      		subi r18,-1
 1535 06cc 3F4F      		sbci r19,-1
 1536 06ce 3093 0000 		sts acs_detect_timeout.2354+1,r19
 1537 06d2 2093 0000 		sts acs_detect_timeout.2354,r18
 1538 06d6 0E97      		sbiw r24,14
 1539 06d8 00F0      		brlo .L120
1375:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						obstacle_right = false;
 1540               		.loc 1 1375 0
 1541 06da 1092 0000 		sts obstacle_right,__zero_reg__
1376:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_state = ACS_STATE_IRCOMM_DELAY;
 1542               		.loc 1 1376 0
 1543 06de 81E0      		ldi r24,lo8(1)
 1544               	.L154:
 1545 06e0 8093 0000 		sts acs_state,r24
1377:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						TIMSK &= ~(1 << OCIE2);
 1546               		.loc 1 1377 0
 1547 06e4 89B7      		in r24,0x39
 1548 06e6 8F77      		andi r24,lo8(127)
 1549 06e8 89BF      		out 0x39,r24
1378:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						IRCOMM_OFF();
 1550               		.loc 1 1378 0
 1551 06ea 9798      		cbi 0x12,7
1379:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						PORTB |= ACS_L;
 1552               		.loc 1 1379 0
 1553 06ec C69A      		sbi 0x18,6
1380:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						PORTC |= ACS_R;
 1554               		.loc 1 1380 0
 1555 06ee AF9A      		sbi 0x15,7
1381:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						acs_pulse = 0;
 1556               		.loc 1 1381 0
 1557 06f0 1092 0000 		sts acs_pulse,__zero_reg__
 1558 06f4 00C0      		rjmp .L120
 1559               	.L119:
1382:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					}
1383:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				break;
1384:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
1385:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
1386:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		else { // RC5 reception detected...
1387:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			acs_detect_timeout = 0;
 1560               		.loc 1 1387 0
 1561 06f6 1092 0000 		sts acs_detect_timeout.2354+1,__zero_reg__
 1562 06fa 1092 0000 		sts acs_detect_timeout.2354,__zero_reg__
1388:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			acs_counter = 0;
 1563               		.loc 1 1388 0
 1564 06fe 1092 0000 		sts acs_counter.2353,__zero_reg__
 1565               	.L120:
1389:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
1390:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		
1391:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		// Check for changes and call event handler if necessary:
1392:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		static uint8_t acs_l_tmp;
1393:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		static uint8_t acs_r_tmp;
1394:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(acs_l_tmp != obstacle_left || acs_r_tmp != obstacle_right) { // Did the ACS Status change?
 1566               		.loc 1 1394 0
 1567 0702 9091 0000 		lds r25,obstacle_left
 1568 0706 2091 0000 		lds r18,acs_l_tmp.2362
 1569 070a 8091 0000 		lds r24,obstacle_right
 1570 070e 2913      		cpse r18,r25
 1571 0710 00C0      		rjmp .L144
 1572               		.loc 1 1394 0 is_stmt 0 discriminator 1
 1573 0712 2091 0000 		lds r18,acs_r_tmp.2363
 1574 0716 2817      		cp r18,r24
 1575 0718 01F0      		breq .L145
 1576               	.L144:
1395:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			acs_l_tmp = obstacle_left;   // Yes, update and call event handler...
 1577               		.loc 1 1395 0 is_stmt 1
 1578 071a 9093 0000 		sts acs_l_tmp.2362,r25
1396:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			acs_r_tmp = obstacle_right;
 1579               		.loc 1 1396 0
 1580 071e 8093 0000 		sts acs_r_tmp.2363,r24
1397:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			ACS_stateChangedHandler();
 1581               		.loc 1 1397 0
 1582 0722 E091 0000 		lds r30,ACS_stateChangedHandler
 1583 0726 F091 0000 		lds r31,ACS_stateChangedHandler+1
 1584 072a 0995      		icall
 1585               	.LVL53:
 1586               	.L145:
1398:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
1399:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		acs_timer = 0;
 1587               		.loc 1 1399 0
 1588 072c 1092 0000 		sts acs_timer+1,__zero_reg__
 1589 0730 1092 0000 		sts acs_timer,__zero_reg__
 1590               	.L117:
 1591 0734 0895      		ret
 1592               	.LBE52:
 1593               		.cfi_endproc
 1594               	.LFE35:
 1596               	.global	disableACS
 1598               	disableACS:
 1599               	.LFB36:
1400:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
1401:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1402:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1403:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1404:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Disables the ACS task.
1405:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * ACS and IRCOMM Transmissions/Receptions will not work anymore.
1406:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1407:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void disableACS(void)
1408:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 1600               		.loc 1 1408 0
 1601               		.cfi_startproc
 1602               	/* prologue: function */
 1603               	/* frame size = 0 */
 1604               	/* stack size = 0 */
 1605               	.L__stack_usage = 0
1409:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	acs_state = ACS_STATE_IDLE;
 1606               		.loc 1 1409 0
 1607 0736 1092 0000 		sts acs_state,__zero_reg__
1410:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	TIMSK &= ~(1 << OCIE2);
 1608               		.loc 1 1410 0
 1609 073a 89B7      		in r24,0x39
 1610 073c 8F77      		andi r24,lo8(127)
 1611 073e 89BF      		out 0x39,r24
1411:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	IRCOMM_OFF();
 1612               		.loc 1 1411 0
 1613 0740 9798      		cbi 0x12,7
1412:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTB |= ACS_L;
 1614               		.loc 1 1412 0
 1615 0742 C69A      		sbi 0x18,6
1413:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTC |= ACS_R;
 1616               		.loc 1 1413 0
 1617 0744 AF9A      		sbi 0x15,7
1414:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	obstacle_right = false;
 1618               		.loc 1 1414 0
 1619 0746 1092 0000 		sts obstacle_right,__zero_reg__
1415:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	obstacle_left = false;
 1620               		.loc 1 1415 0
 1621 074a 1092 0000 		sts obstacle_left,__zero_reg__
 1622 074e 0895      		ret
 1623               		.cfi_endproc
 1624               	.LFE36:
 1626               	.global	enableACS
 1628               	enableACS:
 1629               	.LFB37:
1416:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1417:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1418:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1419:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Enables the ACS task.
1420:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1421:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void enableACS(void)
1422:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 1630               		.loc 1 1422 0
 1631               		.cfi_startproc
 1632               	/* prologue: function */
 1633               	/* frame size = 0 */
 1634               	/* stack size = 0 */
 1635               	.L__stack_usage = 0
1423:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	TIMSK &= ~(1 << OCIE2);
 1636               		.loc 1 1423 0
 1637 0750 89B7      		in r24,0x39
 1638 0752 8F77      		andi r24,lo8(127)
 1639 0754 89BF      		out 0x39,r24
1424:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	IRCOMM_OFF();
 1640               		.loc 1 1424 0
 1641 0756 9798      		cbi 0x12,7
1425:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTB |= ACS_L;
 1642               		.loc 1 1425 0
 1643 0758 C69A      		sbi 0x18,6
1426:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTC |= ACS_R;
 1644               		.loc 1 1426 0
 1645 075a AF9A      		sbi 0x15,7
1427:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	obstacle_right = false;
 1646               		.loc 1 1427 0
 1647 075c 1092 0000 		sts obstacle_right,__zero_reg__
1428:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	obstacle_left = false;
 1648               		.loc 1 1428 0
 1649 0760 1092 0000 		sts obstacle_left,__zero_reg__
1429:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	acs_state = ACS_STATE_IRCOMM_DELAY;
 1650               		.loc 1 1429 0
 1651 0764 81E0      		ldi r24,lo8(1)
 1652 0766 8093 0000 		sts acs_state,r24
 1653 076a 0895      		ret
 1654               		.cfi_endproc
 1655               	.LFE37:
 1657               	.global	setACSPwrOff
 1659               	setACSPwrOff:
 1660               	.LFB38:
1430:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1431:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1432:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1433:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Turn ACS Power off.
1434:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1435:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
1436:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1437:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			setACSPwrOff();
1438:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1439:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1440:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void setACSPwrOff(void)
1441:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 1661               		.loc 1 1441 0
 1662               		.cfi_startproc
 1663               	/* prologue: function */
 1664               	/* frame size = 0 */
 1665               	/* stack size = 0 */
 1666               	.L__stack_usage = 0
1442:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRD &= ~ACS_PWR;
 1667               		.loc 1 1442 0
 1668 076c 8E98      		cbi 0x11,6
1443:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTD &= ~ACS_PWR;
 1669               		.loc 1 1443 0
 1670 076e 9698      		cbi 0x12,6
1444:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRB &= ~ACS_PWRH;
 1671               		.loc 1 1444 0
 1672 0770 BB98      		cbi 0x17,3
1445:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTB &= ~ACS_PWRH;
 1673               		.loc 1 1445 0
 1674 0772 C398      		cbi 0x18,3
1446:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTB &= ~ACS_L;
 1675               		.loc 1 1446 0
 1676 0774 C698      		cbi 0x18,6
1447:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTC &= ~ACS_R;
 1677               		.loc 1 1447 0
 1678 0776 AF98      		cbi 0x15,7
 1679 0778 0895      		ret
 1680               		.cfi_endproc
 1681               	.LFE38:
 1683               	.global	setACSPwrLow
 1685               	setACSPwrLow:
 1686               	.LFB39:
1448:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1449:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1450:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1451:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Set ACS Power low.
1452:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1453:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
1454:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1455:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			setACSPwrLow();
1456:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1457:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1458:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void setACSPwrLow(void)
1459:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 1687               		.loc 1 1459 0
 1688               		.cfi_startproc
 1689               	/* prologue: function */
 1690               	/* frame size = 0 */
 1691               	/* stack size = 0 */
 1692               	.L__stack_usage = 0
1460:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRD |= ACS_PWR;
 1693               		.loc 1 1460 0
 1694 077a 8E9A      		sbi 0x11,6
1461:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTD |= ACS_PWR;
 1695               		.loc 1 1461 0
 1696 077c 969A      		sbi 0x12,6
1462:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRB &= ~ACS_PWRH;
 1697               		.loc 1 1462 0
 1698 077e BB98      		cbi 0x17,3
1463:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTB &= ~ACS_PWRH;
 1699               		.loc 1 1463 0
 1700 0780 C398      		cbi 0x18,3
 1701 0782 0895      		ret
 1702               		.cfi_endproc
 1703               	.LFE39:
 1705               	.global	setACSPwrMed
 1707               	setACSPwrMed:
 1708               	.LFB40:
1464:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1465:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1466:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1467:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Set ACS Power medium.
1468:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1469:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
1470:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1471:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			setACSPwrMed();
1472:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1473:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1474:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void setACSPwrMed(void)
1475:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 1709               		.loc 1 1475 0
 1710               		.cfi_startproc
 1711               	/* prologue: function */
 1712               	/* frame size = 0 */
 1713               	/* stack size = 0 */
 1714               	.L__stack_usage = 0
1476:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRD &= ~ACS_PWR;
 1715               		.loc 1 1476 0
 1716 0784 8E98      		cbi 0x11,6
1477:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTD &= ~ACS_PWR;
 1717               		.loc 1 1477 0
 1718 0786 9698      		cbi 0x12,6
1478:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRB |= ACS_PWRH;
 1719               		.loc 1 1478 0
 1720 0788 BB9A      		sbi 0x17,3
1479:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTB |= ACS_PWRH;
 1721               		.loc 1 1479 0
 1722 078a C39A      		sbi 0x18,3
 1723 078c 0895      		ret
 1724               		.cfi_endproc
 1725               	.LFE40:
 1727               	.global	setACSPwrHigh
 1729               	setACSPwrHigh:
 1730               	.LFB41:
1480:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1481:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1482:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1483:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Set ACS Power high.
1484:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1485:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
1486:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1487:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			setACSPwrHigh();
1488:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1489:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1490:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void setACSPwrHigh(void)
1491:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 1731               		.loc 1 1491 0
 1732               		.cfi_startproc
 1733               	/* prologue: function */
 1734               	/* frame size = 0 */
 1735               	/* stack size = 0 */
 1736               	.L__stack_usage = 0
1492:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRD |= ACS_PWR;
 1737               		.loc 1 1492 0
 1738 078e 8E9A      		sbi 0x11,6
1493:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTD |= ACS_PWR;
 1739               		.loc 1 1493 0
 1740 0790 969A      		sbi 0x12,6
1494:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRB |= ACS_PWRH;
 1741               		.loc 1 1494 0
 1742 0792 BB9A      		sbi 0x17,3
1495:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTB |= ACS_PWRH;
 1743               		.loc 1 1495 0
 1744 0794 C39A      		sbi 0x18,3
 1745 0796 0895      		ret
 1746               		.cfi_endproc
 1747               	.LFE41:
 1749               	.global	powerON
 1751               	powerON:
 1752               	.LFB42:
1496:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1497:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1498:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
1499:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // 
1500:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1501:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void powerON(void) 
1502:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** { 
 1753               		.loc 1 1502 0
 1754               		.cfi_startproc
 1755               	/* prologue: function */
 1756               	/* frame size = 0 */
 1757               	/* stack size = 0 */
 1758               	.L__stack_usage = 0
1503:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTB |= PWRON;
 1759               		.loc 1 1503 0
 1760 0798 C49A      		sbi 0x18,4
1504:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#ifdef POWER_ON_WARNING
1505:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(leds_on < 4)
 1761               		.loc 1 1505 0
 1762 079a 8091 0000 		lds r24,leds_on
 1763 079e 8430      		cpi r24,lo8(4)
 1764 07a0 00F4      		brsh .L163
1506:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			leds_on = 3;
 1765               		.loc 1 1506 0
 1766 07a2 83E0      		ldi r24,lo8(3)
 1767 07a4 8093 0000 		sts leds_on,r24
 1768               	.L163:
 1769 07a8 0895      		ret
 1770               		.cfi_endproc
 1771               	.LFE42:
 1773               	.global	powerOFF
 1775               	powerOFF:
 1776               	.LFB43:
1507:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#endif
1508:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1509:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1510:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void powerOFF(void)
1511:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 1777               		.loc 1 1511 0
 1778               		.cfi_startproc
 1779               	/* prologue: function */
 1780               	/* frame size = 0 */
 1781               	/* stack size = 0 */
 1782               	.L__stack_usage = 0
1512:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTB &= ~PWRON;
 1783               		.loc 1 1512 0
 1784 07aa C498      		cbi 0x18,4
1513:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#ifdef POWER_ON_WARNING
1514:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(leds_on < 4)
 1785               		.loc 1 1514 0
 1786 07ac 8091 0000 		lds r24,leds_on
 1787 07b0 8430      		cpi r24,lo8(4)
 1788 07b2 00F4      		brsh .L165
1515:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			leds_on = (leds_on ? 1 : (statusLEDs.byte && 1));
 1789               		.loc 1 1515 0
 1790 07b4 8111      		cpse r24,__zero_reg__
 1791 07b6 00C0      		rjmp .L169
 1792               		.loc 1 1515 0 is_stmt 0 discriminator 2
 1793 07b8 81E0      		ldi r24,lo8(1)
 1794 07ba 9091 0000 		lds r25,statusLEDs
 1795 07be 9111      		cpse r25,__zero_reg__
 1796 07c0 00C0      		rjmp .L167
 1797 07c2 80E0      		ldi r24,0
 1798 07c4 00C0      		rjmp .L167
 1799               	.L169:
 1800               		.loc 1 1515 0
 1801 07c6 81E0      		ldi r24,lo8(1)
 1802               	.L167:
 1803               		.loc 1 1515 0 discriminator 4
 1804 07c8 8093 0000 		sts leds_on,r24
 1805               	.L165:
 1806 07cc 0895      		ret
 1807               		.cfi_endproc
 1808               	.LFE43:
 1810               	.global	__vector_10
 1812               	__vector_10:
 1813               	.LFB44:
1516:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#endif
1517:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1518:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1519:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
1520:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Delays, Stopwatches, Speed measurement and RC5 reception:
1521:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1522:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile stopwatches_t stopwatches;
1523:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint8_t delay_timer;
1524:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint8_t ms_timer;
1525:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint8_t speed_adjust_timer;
1526:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1527:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** volatile uint16_t timer; // You can use this timer for everything you like!
1528:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1529:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1530:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Timer 0 Compare ISR - This timer is used for blocking delays
1531:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * and "Stopwatches" for non-blocking delays. 
1532:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Also used for Speed measurement, soft PWM Adjustment, ACS timing and 
1533:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * RC5 code reception!
1534:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1535:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * By default, it runs at 10kHz which means this ISR is called
1536:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * every ~100µs! This is nice for all kinds of timing stuff!
1537:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1538:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** ISR (TIMER0_COMP_vect)
1539:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 1814               		.loc 1 1539 0 is_stmt 1
 1815               		.cfi_startproc
 1816 07ce 1F92      		push r1
 1817               	.LCFI16:
 1818               		.cfi_def_cfa_offset 3
 1819               		.cfi_offset 1, -2
 1820 07d0 0F92      		push r0
 1821               	.LCFI17:
 1822               		.cfi_def_cfa_offset 4
 1823               		.cfi_offset 0, -3
 1824 07d2 0FB6      		in r0,__SREG__
 1825 07d4 0F92      		push r0
 1826 07d6 1124      		clr __zero_reg__
 1827 07d8 2F93      		push r18
 1828               	.LCFI18:
 1829               		.cfi_def_cfa_offset 5
 1830               		.cfi_offset 18, -4
 1831 07da 3F93      		push r19
 1832               	.LCFI19:
 1833               		.cfi_def_cfa_offset 6
 1834               		.cfi_offset 19, -5
 1835 07dc 4F93      		push r20
 1836               	.LCFI20:
 1837               		.cfi_def_cfa_offset 7
 1838               		.cfi_offset 20, -6
 1839 07de 5F93      		push r21
 1840               	.LCFI21:
 1841               		.cfi_def_cfa_offset 8
 1842               		.cfi_offset 21, -7
 1843 07e0 6F93      		push r22
 1844               	.LCFI22:
 1845               		.cfi_def_cfa_offset 9
 1846               		.cfi_offset 22, -8
 1847 07e2 7F93      		push r23
 1848               	.LCFI23:
 1849               		.cfi_def_cfa_offset 10
 1850               		.cfi_offset 23, -9
 1851 07e4 8F93      		push r24
 1852               	.LCFI24:
 1853               		.cfi_def_cfa_offset 11
 1854               		.cfi_offset 24, -10
 1855 07e6 9F93      		push r25
 1856               	.LCFI25:
 1857               		.cfi_def_cfa_offset 12
 1858               		.cfi_offset 25, -11
 1859 07e8 AF93      		push r26
 1860               	.LCFI26:
 1861               		.cfi_def_cfa_offset 13
 1862               		.cfi_offset 26, -12
 1863 07ea BF93      		push r27
 1864               	.LCFI27:
 1865               		.cfi_def_cfa_offset 14
 1866               		.cfi_offset 27, -13
 1867               	/* prologue: Signal */
 1868               	/* frame size = 0 */
 1869               	/* stack size = 13 */
 1870               	.L__stack_usage = 13
1540:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#ifdef POWER_ON_WARNING
1541:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		static uint16_t leds_on_timer = 0;
1542:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#endif
1543:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
1544:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// 16bit timer (100µs resolution)
1545:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	timer++;
 1871               		.loc 1 1545 0
 1872 07ec 8091 0000 		lds r24,timer
 1873 07f0 9091 0000 		lds r25,timer+1
 1874 07f4 0196      		adiw r24,1
 1875 07f6 9093 0000 		sts timer+1,r25
 1876 07fa 8093 0000 		sts timer,r24
1546:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
1547:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Blocking delay (100µs):
1548:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	delay_timer++;
 1877               		.loc 1 1548 0
 1878 07fe 8091 0000 		lds r24,delay_timer
 1879 0802 8F5F      		subi r24,lo8(-(1))
 1880 0804 8093 0000 		sts delay_timer,r24
1549:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
1550:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// All 1ms based timing stuff
1551:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(ms_timer++ >= 9) { // 10 * 100µs = 1ms, >= 9 because 0..9 = 10 counts
 1881               		.loc 1 1551 0
 1882 0808 8091 0000 		lds r24,ms_timer
 1883 080c 91E0      		ldi r25,lo8(1)
 1884 080e 980F      		add r25,r24
 1885 0810 9093 0000 		sts ms_timer,r25
 1886 0814 8930      		cpi r24,lo8(9)
 1887 0816 00F4      		brsh .+2
 1888 0818 00C0      		rjmp .L171
1552:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		// 16bit Stopwatches:
1553:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(stopwatches.watches & STOPWATCH1)
 1889               		.loc 1 1553 0
 1890 081a 8091 0000 		lds r24,stopwatches
 1891 081e 80FF      		sbrs r24,0
 1892 0820 00C0      		rjmp .L172
1554:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			stopwatches.watch1++;
 1893               		.loc 1 1554 0
 1894 0822 8091 0000 		lds r24,stopwatches+1
 1895 0826 9091 0000 		lds r25,stopwatches+1+1
 1896 082a 0196      		adiw r24,1
 1897 082c 9093 0000 		sts stopwatches+1+1,r25
 1898 0830 8093 0000 		sts stopwatches+1,r24
 1899               	.L172:
1555:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(stopwatches.watches & STOPWATCH2)
 1900               		.loc 1 1555 0
 1901 0834 8091 0000 		lds r24,stopwatches
 1902 0838 81FF      		sbrs r24,1
 1903 083a 00C0      		rjmp .L173
1556:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			stopwatches.watch2++;
 1904               		.loc 1 1556 0
 1905 083c 8091 0000 		lds r24,stopwatches+3
 1906 0840 9091 0000 		lds r25,stopwatches+3+1
 1907 0844 0196      		adiw r24,1
 1908 0846 9093 0000 		sts stopwatches+3+1,r25
 1909 084a 8093 0000 		sts stopwatches+3,r24
 1910               	.L173:
1557:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(stopwatches.watches & STOPWATCH3)
 1911               		.loc 1 1557 0
 1912 084e 8091 0000 		lds r24,stopwatches
 1913 0852 82FF      		sbrs r24,2
 1914 0854 00C0      		rjmp .L174
1558:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			stopwatches.watch3++;
 1915               		.loc 1 1558 0
 1916 0856 8091 0000 		lds r24,stopwatches+5
 1917 085a 9091 0000 		lds r25,stopwatches+5+1
 1918 085e 0196      		adiw r24,1
 1919 0860 9093 0000 		sts stopwatches+5+1,r25
 1920 0864 8093 0000 		sts stopwatches+5,r24
 1921               	.L174:
1559:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(stopwatches.watches & STOPWATCH4)
 1922               		.loc 1 1559 0
 1923 0868 8091 0000 		lds r24,stopwatches
 1924 086c 83FF      		sbrs r24,3
 1925 086e 00C0      		rjmp .L175
1560:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			stopwatches.watch4++;
 1926               		.loc 1 1560 0
 1927 0870 8091 0000 		lds r24,stopwatches+7
 1928 0874 9091 0000 		lds r25,stopwatches+7+1
 1929 0878 0196      		adiw r24,1
 1930 087a 9093 0000 		sts stopwatches+7+1,r25
 1931 087e 8093 0000 		sts stopwatches+7,r24
 1932               	.L175:
1561:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(stopwatches.watches & STOPWATCH5)
 1933               		.loc 1 1561 0
 1934 0882 8091 0000 		lds r24,stopwatches
 1935 0886 84FF      		sbrs r24,4
 1936 0888 00C0      		rjmp .L176
1562:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			stopwatches.watch5++;
 1937               		.loc 1 1562 0
 1938 088a 8091 0000 		lds r24,stopwatches+9
 1939 088e 9091 0000 		lds r25,stopwatches+9+1
 1940 0892 0196      		adiw r24,1
 1941 0894 9093 0000 		sts stopwatches+9+1,r25
 1942 0898 8093 0000 		sts stopwatches+9,r24
 1943               	.L176:
1563:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(stopwatches.watches & STOPWATCH6)
 1944               		.loc 1 1563 0
 1945 089c 8091 0000 		lds r24,stopwatches
 1946 08a0 85FF      		sbrs r24,5
 1947 08a2 00C0      		rjmp .L177
1564:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			stopwatches.watch6++;
 1948               		.loc 1 1564 0
 1949 08a4 8091 0000 		lds r24,stopwatches+11
 1950 08a8 9091 0000 		lds r25,stopwatches+11+1
 1951 08ac 0196      		adiw r24,1
 1952 08ae 9093 0000 		sts stopwatches+11+1,r25
 1953 08b2 8093 0000 		sts stopwatches+11,r24
 1954               	.L177:
1565:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(stopwatches.watches & STOPWATCH7)
 1955               		.loc 1 1565 0
 1956 08b6 8091 0000 		lds r24,stopwatches
 1957 08ba 86FF      		sbrs r24,6
 1958 08bc 00C0      		rjmp .L178
1566:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			stopwatches.watch7++;
 1959               		.loc 1 1566 0
 1960 08be 8091 0000 		lds r24,stopwatches+13
 1961 08c2 9091 0000 		lds r25,stopwatches+13+1
 1962 08c6 0196      		adiw r24,1
 1963 08c8 9093 0000 		sts stopwatches+13+1,r25
 1964 08cc 8093 0000 		sts stopwatches+13,r24
 1965               	.L178:
1567:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(stopwatches.watches & STOPWATCH8)
 1966               		.loc 1 1567 0
 1967 08d0 8091 0000 		lds r24,stopwatches
 1968 08d4 87FF      		sbrs r24,7
 1969 08d6 00C0      		rjmp .L179
1568:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			stopwatches.watch8++;
 1970               		.loc 1 1568 0
 1971 08d8 8091 0000 		lds r24,stopwatches+15
 1972 08dc 9091 0000 		lds r25,stopwatches+15+1
 1973 08e0 0196      		adiw r24,1
 1974 08e2 9093 0000 		sts stopwatches+15+1,r25
 1975 08e6 8093 0000 		sts stopwatches+15,r24
 1976               	.L179:
1569:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1570:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		// Speed measurement timer
1571:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(speed_timer++ > SPEED_TIMER_BASE) {
 1977               		.loc 1 1571 0
 1978 08ea 8091 0000 		lds r24,speed_timer
 1979 08ee 91E0      		ldi r25,lo8(1)
 1980 08f0 980F      		add r25,r24
 1981 08f2 9093 0000 		sts speed_timer,r25
 1982 08f6 893C      		cpi r24,lo8(-55)
 1983 08f8 00F0      		brlo .L180
1572:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			mright_speed = mright_counter;
 1984               		.loc 1 1572 0
 1985 08fa 8091 0000 		lds r24,mright_counter
 1986 08fe 9091 0000 		lds r25,mright_counter+1
 1987 0902 9093 0000 		sts mright_speed+1,r25
 1988 0906 8093 0000 		sts mright_speed,r24
1573:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			mleft_speed = mleft_counter;
 1989               		.loc 1 1573 0
 1990 090a 8091 0000 		lds r24,mleft_counter
 1991 090e 9091 0000 		lds r25,mleft_counter+1
 1992 0912 9093 0000 		sts mleft_speed+1,r25
 1993 0916 8093 0000 		sts mleft_speed,r24
1574:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			mright_counter = 0;
 1994               		.loc 1 1574 0
 1995 091a 1092 0000 		sts mright_counter+1,__zero_reg__
 1996 091e 1092 0000 		sts mright_counter,__zero_reg__
1575:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			mleft_counter = 0;
 1997               		.loc 1 1575 0
 1998 0922 1092 0000 		sts mleft_counter+1,__zero_reg__
 1999 0926 1092 0000 		sts mleft_counter,__zero_reg__
1576:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			motor_control = true;
 2000               		.loc 1 1576 0
 2001 092a 81E0      		ldi r24,lo8(1)
 2002 092c 8093 0000 		sts motor_control,r24
1577:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			speed_timer = 0;
 2003               		.loc 1 1577 0
 2004 0930 1092 0000 		sts speed_timer,__zero_reg__
 2005               	.L180:
1578:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
1579:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		
1580:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		// Power on LED flashing:
1581:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		#ifdef POWER_ON_WARNING
1582:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(leds_on < 3) {
 2006               		.loc 1 1582 0
 2007 0934 4091 0000 		lds r20,leds_on
 2008 0938 4330      		cpi r20,lo8(3)
 2009 093a 00F0      		brlo .+2
 2010 093c 00C0      		rjmp .L182
1583:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(leds_on == 2) {
 2011               		.loc 1 1583 0
 2012 093e 4230      		cpi r20,lo8(2)
 2013 0940 01F4      		brne .L183
1584:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					if(!statusLEDs.byte) {
 2014               		.loc 1 1584 0
 2015 0942 8091 0000 		lds r24,statusLEDs
 2016 0946 8111      		cpse r24,__zero_reg__
 2017 0948 00C0      		rjmp .L184
1585:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						if(leds_on_timer++ % 200 == 0) {
 2018               		.loc 1 1585 0
 2019 094a 8091 0000 		lds r24,leds_on_timer.2398
 2020 094e 9091 0000 		lds r25,leds_on_timer.2398+1
 2021 0952 9C01      		movw r18,r24
 2022 0954 2F5F      		subi r18,-1
 2023 0956 3F4F      		sbci r19,-1
 2024 0958 3093 0000 		sts leds_on_timer.2398+1,r19
 2025 095c 2093 0000 		sts leds_on_timer.2398,r18
 2026 0960 68EC      		ldi r22,lo8(-56)
 2027 0962 70E0      		ldi r23,0
 2028 0964 0E94 0000 		call __udivmodhi4
 2029 0968 892B      		or r24,r25
 2030 096a 01F4      		brne .L182
1586:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							if(leds_on_timer > POWER_ON_SHOW_TIME) {
 2031               		.loc 1 1586 0
 2032 096c 213A      		cpi r18,-95
 2033 096e 3F40      		sbci r19,15
 2034 0970 00F0      		brlo .L186
1587:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 								DDRB &= ~SL5; 
 2035               		.loc 1 1587 0
 2036 0972 B998      		cbi 0x17,1
1588:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 								PORTB &= ~SL5;
 2037               		.loc 1 1588 0
 2038 0974 C198      		cbi 0x18,1
1589:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 								leds_on = 0;
 2039               		.loc 1 1589 0
 2040 0976 1092 0000 		sts leds_on,__zero_reg__
 2041 097a 00C0      		rjmp .L190
 2042               	.L186:
1590:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 								leds_on_timer = 0;
1591:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							}
1592:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							else {
1593:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 								DDRB ^= SL5; 
 2043               		.loc 1 1593 0
 2044 097c 87B3      		in r24,0x17
 2045 097e 8427      		eor r24,r20
 2046 0980 87BB      		out 0x17,r24
1594:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 								PORTB ^= SL5;
 2047               		.loc 1 1594 0
 2048 0982 88B3      		in r24,0x18
 2049 0984 8427      		eor r24,r20
 2050 0986 88BB      		out 0x18,r24
 2051 0988 00C0      		rjmp .L182
 2052               	.L184:
1595:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							}
1596:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						}
1597:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					}
1598:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					else {
1599:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						if(!statusLEDs.LED5) {
 2053               		.loc 1 1599 0
 2054 098a 84FD      		sbrc r24,4
 2055 098c 00C0      		rjmp .L187
1600:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							DDRB &= ~SL5; 
 2056               		.loc 1 1600 0
 2057 098e B998      		cbi 0x17,1
1601:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							PORTB &= ~SL5;
 2058               		.loc 1 1601 0
 2059 0990 C198      		cbi 0x18,1
 2060               	.L187:
1602:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						}
1603:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						leds_on_timer = 0;
 2061               		.loc 1 1603 0
 2062 0992 1092 0000 		sts leds_on_timer.2398+1,__zero_reg__
 2063 0996 1092 0000 		sts leds_on_timer.2398,__zero_reg__
1604:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						leds_on = 1;
 2064               		.loc 1 1604 0
 2065 099a 81E0      		ldi r24,lo8(1)
 2066 099c 8093 0000 		sts leds_on,r24
 2067 09a0 00C0      		rjmp .L182
 2068               	.L183:
1605:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					}
1606:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}
1607:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				else if(leds_on_timer > POWER_ON_WAIT_TIME) {
 2069               		.loc 1 1607 0
 2070 09a2 8091 0000 		lds r24,leds_on_timer.2398
 2071 09a6 9091 0000 		lds r25,leds_on_timer.2398+1
 2072 09aa 813E      		cpi r24,-31
 2073 09ac 2EE2      		ldi r18,46
 2074 09ae 9207      		cpc r25,r18
 2075 09b0 00F0      		brlo .L188
1608:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					if(leds_on == 1) {
 2076               		.loc 1 1608 0
 2077 09b2 4130      		cpi r20,lo8(1)
 2078 09b4 01F4      		brne .L189
1609:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						leds_on = 0;
 2079               		.loc 1 1609 0
 2080 09b6 1092 0000 		sts leds_on,__zero_reg__
1610:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						if(!statusLEDs.LED5) {
 2081               		.loc 1 1610 0
 2082 09ba 8091 0000 		lds r24,statusLEDs
 2083 09be 84FD      		sbrc r24,4
 2084 09c0 00C0      		rjmp .L190
1611:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							DDRB &= ~SL5; 
 2085               		.loc 1 1611 0
 2086 09c2 B998      		cbi 0x17,1
1612:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 							PORTB &= ~SL5;
 2087               		.loc 1 1612 0
 2088 09c4 C198      		cbi 0x18,1
 2089 09c6 00C0      		rjmp .L190
 2090               	.L189:
1613:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						}
1614:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					}
1615:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					else 
1616:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						leds_on = 2;
 2091               		.loc 1 1616 0
 2092 09c8 82E0      		ldi r24,lo8(2)
 2093 09ca 8093 0000 		sts leds_on,r24
 2094               	.L190:
1617:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					leds_on_timer = 0;
 2095               		.loc 1 1617 0 discriminator 3
 2096 09ce 1092 0000 		sts leds_on_timer.2398+1,__zero_reg__
 2097 09d2 1092 0000 		sts leds_on_timer.2398,__zero_reg__
 2098 09d6 00C0      		rjmp .L182
 2099               	.L188:
1618:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}
1619:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				else
1620:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					leds_on_timer++;
 2100               		.loc 1 1620 0
 2101 09d8 0196      		adiw r24,1
 2102 09da 9093 0000 		sts leds_on_timer.2398+1,r25
 2103 09de 8093 0000 		sts leds_on_timer.2398,r24
 2104               	.L182:
1621:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
1622:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		#endif
1623:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1624:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		// ACS timer:
1625:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(acs_timer < (ACS_UPDATE_INTERVAL+1))
 2105               		.loc 1 1625 0
 2106 09e2 8091 0000 		lds r24,acs_timer
 2107 09e6 9091 0000 		lds r25,acs_timer+1
 2108 09ea 0397      		sbiw r24,3
 2109 09ec 00F4      		brsh .L191
1626:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			acs_timer++;	
 2110               		.loc 1 1626 0
 2111 09ee 8091 0000 		lds r24,acs_timer
 2112 09f2 9091 0000 		lds r25,acs_timer+1
 2113 09f6 0196      		adiw r24,1
 2114 09f8 9093 0000 		sts acs_timer+1,r25
 2115 09fc 8093 0000 		sts acs_timer,r24
 2116               	.L191:
1627:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1628:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		// Overcurrent measurement timer
1629:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(overcurrent_timer < 55)
 2117               		.loc 1 1629 0
 2118 0a00 8091 0000 		lds r24,overcurrent_timer
 2119 0a04 8733      		cpi r24,lo8(55)
 2120 0a06 00F4      		brsh .L192
1630:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			overcurrent_timer++;
 2121               		.loc 1 1630 0
 2122 0a08 8F5F      		subi r24,lo8(-(1))
 2123 0a0a 8093 0000 		sts overcurrent_timer,r24
 2124               	.L192:
1631:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		
1632:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		// Bumper check timer
1633:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(bumper_timer < 52)
 2125               		.loc 1 1633 0
 2126 0a0e 8091 0000 		lds r24,bumper_timer
 2127 0a12 8433      		cpi r24,lo8(52)
 2128 0a14 00F4      		brsh .L193
1634:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			bumper_timer++;		
 2129               		.loc 1 1634 0
 2130 0a16 8091 0000 		lds r24,bumper_timer
 2131 0a1a 8F5F      		subi r24,lo8(-(1))
 2132 0a1c 8093 0000 		sts bumper_timer,r24
 2133               	.L193:
1635:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		
1636:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		// Soft PWM adjustment and automatic PWM shutdown if motor power is 0:
1637:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(speed_adjust_timer++ > 2) {
 2134               		.loc 1 1637 0
 2135 0a20 8091 0000 		lds r24,speed_adjust_timer
 2136 0a24 91E0      		ldi r25,lo8(1)
 2137 0a26 980F      		add r25,r24
 2138 0a28 9093 0000 		sts speed_adjust_timer,r25
 2139 0a2c 8330      		cpi r24,lo8(3)
 2140 0a2e 00F0      		brlo .L194
1638:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mright_ptmp != mright_power) {
 2141               		.loc 1 1638 0
 2142 0a30 4091 0000 		lds r20,mright_ptmp
 2143 0a34 242F      		mov r18,r20
 2144 0a36 30E0      		ldi r19,0
 2145 0a38 8091 0000 		lds r24,mright_power
 2146 0a3c 9091 0000 		lds r25,mright_power+1
 2147 0a40 2817      		cp r18,r24
 2148 0a42 3907      		cpc r19,r25
 2149 0a44 01F0      		breq .L195
1639:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(mright_ptmp < mright_power) 
 2150               		.loc 1 1639 0
 2151 0a46 2817      		cp r18,r24
 2152 0a48 3907      		cpc r19,r25
 2153 0a4a 04F4      		brge .L196
1640:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_ptmp++;
 2154               		.loc 1 1640 0
 2155 0a4c 4F5F      		subi r20,lo8(-(1))
 2156 0a4e 00C0      		rjmp .L242
 2157               	.L196:
1641:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				else 
1642:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_ptmp--;
 2158               		.loc 1 1642 0
 2159 0a50 4150      		subi r20,lo8(-(-1))
 2160               	.L242:
 2161 0a52 4093 0000 		sts mright_ptmp,r20
1643:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				OCR1AL = mright_ptmp;
 2162               		.loc 1 1643 0
 2163 0a56 8091 0000 		lds r24,mright_ptmp
 2164 0a5a 8ABD      		out 0x2a,r24
 2165               	.L195:
1644:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
1645:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mleft_ptmp != mleft_power) {
 2166               		.loc 1 1645 0
 2167 0a5c 4091 0000 		lds r20,mleft_ptmp
 2168 0a60 242F      		mov r18,r20
 2169 0a62 30E0      		ldi r19,0
 2170 0a64 8091 0000 		lds r24,mleft_power
 2171 0a68 9091 0000 		lds r25,mleft_power+1
 2172 0a6c 2817      		cp r18,r24
 2173 0a6e 3907      		cpc r19,r25
 2174 0a70 01F0      		breq .L198
1646:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(mleft_ptmp < mleft_power) 
 2175               		.loc 1 1646 0
 2176 0a72 2817      		cp r18,r24
 2177 0a74 3907      		cpc r19,r25
 2178 0a76 04F4      		brge .L199
1647:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_ptmp++;
 2179               		.loc 1 1647 0
 2180 0a78 4F5F      		subi r20,lo8(-(1))
 2181 0a7a 00C0      		rjmp .L243
 2182               	.L199:
1648:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				else 
1649:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_ptmp--;
 2183               		.loc 1 1649 0
 2184 0a7c 4150      		subi r20,lo8(-(-1))
 2185               	.L243:
 2186 0a7e 4093 0000 		sts mleft_ptmp,r20
1650:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				OCR1BL = mleft_ptmp;
 2187               		.loc 1 1650 0
 2188 0a82 8091 0000 		lds r24,mleft_ptmp
 2189 0a86 88BD      		out 0x28,r24
 2190               	.L198:
1651:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
1652:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mleft_ptmp || mright_ptmp)
 2191               		.loc 1 1652 0
 2192 0a88 8091 0000 		lds r24,mleft_ptmp
 2193 0a8c 8111      		cpse r24,__zero_reg__
 2194 0a8e 00C0      		rjmp .L201
 2195               		.loc 1 1652 0 is_stmt 0 discriminator 1
 2196 0a90 8091 0000 		lds r24,mright_ptmp
 2197 0a94 8823      		tst r24
 2198 0a96 01F0      		breq .L202
 2199               	.L201:
1653:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				TCCR1A = (1 << WGM11) | (1 << COM1A1) | (1 << COM1B1);
 2200               		.loc 1 1653 0 is_stmt 1
 2201 0a98 82EA      		ldi r24,lo8(-94)
 2202 0a9a 8FBD      		out 0x2f,r24
 2203 0a9c 00C0      		rjmp .L203
 2204               	.L202:
1654:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			else
1655:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				TCCR1A = 0;
 2205               		.loc 1 1655 0
 2206 0a9e 1FBC      		out 0x2f,__zero_reg__
 2207               	.L203:
1656:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			speed_adjust_timer = 0;
 2208               		.loc 1 1656 0
 2209 0aa0 1092 0000 		sts speed_adjust_timer,__zero_reg__
 2210               	.L194:
1657:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
1658:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1659:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		ms_timer = 0;
 2211               		.loc 1 1659 0
 2212 0aa4 1092 0000 		sts ms_timer,__zero_reg__
 2213               	.L171:
1660:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
1661:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1662:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	/*****************************************************************************/
1663:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Nice RC5 reception code, written by Peter Dannegger.
1664:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Done some modifications and matched timings...
1665:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
1666:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#define RC5_TIME 		1.778e-3				// 1778µs
1667:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#define RC5_PULSE_MIN	(uint8_t)(10e3 * RC5_TIME * 0.4 + 0.5)
1668:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#define RC5_PULSE_1_2	(uint8_t)(10e3 * RC5_TIME * 0.8 + 0.5)
1669:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#define RC5_PULSE_MAX	(uint8_t)(10e3 * RC5_TIME * 1.2 + 0.5)
1670:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
1671:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	static uint8_t	IRCOMM_RC5_bit;		// bit value
1672:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	static uint8_t	IRCOMM_RC5_time;	// count bit time
1673:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	static uint16_t IRCOMM_RC5_tmp;		// shift bits in
1674:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
1675:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if((!sysStatACS.rc5_data_received)) {
 2214               		.loc 1 1675 0
 2215 0aa8 3091 0000 		lds r19,sysStatACS
 2216 0aac 33FD      		sbrc r19,3
 2217 0aae 00C0      		rjmp .L170
 2218               	.LBB53:
1676:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		uint16_t tmp = IRCOMM_RC5_tmp;
 2219               		.loc 1 1676 0
 2220 0ab0 8091 0000 		lds r24,IRCOMM_RC5_tmp.2401
 2221 0ab4 9091 0000 		lds r25,IRCOMM_RC5_tmp.2401+1
 2222               	.LVL54:
1677:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(++IRCOMM_RC5_time > RC5_PULSE_MAX) {				// count pulse time
 2223               		.loc 1 1677 0
 2224 0ab8 2091 0000 		lds r18,IRCOMM_RC5_time.2400
 2225 0abc 2F5F      		subi r18,lo8(-(1))
 2226 0abe 2093 0000 		sts IRCOMM_RC5_time.2400,r18
 2227 0ac2 2631      		cpi r18,lo8(22)
 2228 0ac4 00F0      		brlo .L205
1678:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(!(tmp & 0x4000) && (tmp & 0x2000)) {			// only 14 bits received?
 2229               		.loc 1 1678 0
 2230 0ac6 96FD      		sbrc r25,6
 2231 0ac8 00C0      		rjmp .L206
 2232               		.loc 1 1678 0 is_stmt 0 discriminator 1
 2233 0aca 95FF      		sbrs r25,5
 2234 0acc 00C0      		rjmp .L206
1679:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				IRCOMM_RC5_data_ok.data = tmp;				// store result
 2235               		.loc 1 1679 0 is_stmt 1
 2236 0ace 9093 0000 		sts IRCOMM_RC5_data_ok+1,r25
 2237 0ad2 8093 0000 		sts IRCOMM_RC5_data_ok,r24
1680:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				sysStatACS.rc5_data_received = true; // we have new data!
 2238               		.loc 1 1680 0
 2239 0ad6 832F      		mov r24,r19
 2240               	.LVL55:
 2241 0ad8 8860      		ori r24,lo8(1<<3)
 2242 0ada 8093 0000 		sts sysStatACS,r24
 2243               	.L206:
1681:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
1682:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			sysStatACS.detect_rc5 = false; // NO RC5! 
 2244               		.loc 1 1682 0
 2245 0ade 8091 0000 		lds r24,sysStatACS
 2246 0ae2 8F7E      		andi r24,lo8(~(1<<4))
 2247 0ae4 8093 0000 		sts sysStatACS,r24
 2248               	.LVL56:
1683:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			tmp = 0;
 2249               		.loc 1 1683 0
 2250 0ae8 80E0      		ldi r24,0
 2251 0aea 90E0      		ldi r25,0
 2252               	.LVL57:
 2253               	.L205:
1684:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
1685:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if ((IRCOMM_RC5_bit ^ PINB) & ACS) {				// change detect
 2254               		.loc 1 1685 0
 2255 0aec 4091 0000 		lds r20,IRCOMM_RC5_bit.2399
 2256 0af0 36B3      		in r19,0x16
 2257 0af2 3427      		eor r19,r20
 2258 0af4 32FF      		sbrs r19,2
 2259 0af6 00C0      		rjmp .L207
1686:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			IRCOMM_RC5_bit = ~IRCOMM_RC5_bit;				// 0x00 -> 0xFF -> 0x00
 2260               		.loc 1 1686 0
 2261 0af8 342F      		mov r19,r20
 2262 0afa 3095      		com r19
 2263 0afc 3093 0000 		sts IRCOMM_RC5_bit.2399,r19
1687:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(IRCOMM_RC5_time < RC5_PULSE_MIN)	{			// to short
 2264               		.loc 1 1687 0
 2265 0b00 2730      		cpi r18,lo8(7)
 2266 0b02 00F4      		brsh .L208
1688:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				sysStatACS.detect_rc5 = false; // RC5 transmission detected! 
 2267               		.loc 1 1688 0
 2268 0b04 8091 0000 		lds r24,sysStatACS
 2269               	.LVL58:
 2270 0b08 8F7E      		andi r24,lo8(~(1<<4))
 2271 0b0a 8093 0000 		sts sysStatACS,r24
 2272               	.LVL59:
1689:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				tmp = 0;
 2273               		.loc 1 1689 0
 2274 0b0e 80E0      		ldi r24,0
 2275 0b10 90E0      		ldi r25,0
 2276 0b12 00C0      		rjmp .L209
 2277               	.LVL60:
 2278               	.L208:
1690:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
1691:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(!tmp || (IRCOMM_RC5_time > RC5_PULSE_1_2)) {	// start or long pulse time
 2279               		.loc 1 1691 0
 2280 0b14 0097      		sbiw r24,0
 2281 0b16 01F0      		breq .L209
 2282               		.loc 1 1691 0 is_stmt 0 discriminator 1
 2283 0b18 2F30      		cpi r18,lo8(15)
 2284 0b1a 00F0      		brlo .L207
 2285               	.LVL61:
 2286               	.L209:
1692:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				sysStatACS.detect_rc5 = true;
 2287               		.loc 1 1692 0 is_stmt 1
 2288 0b1c 2091 0000 		lds r18,sysStatACS
 2289 0b20 2061      		ori r18,lo8(1<<4)
 2290 0b22 2093 0000 		sts sysStatACS,r18
1693:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(!(tmp & 0x4000))							// not to many bits
 2291               		.loc 1 1693 0
 2292 0b26 96FD      		sbrc r25,6
 2293 0b28 00C0      		rjmp .L210
1694:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					tmp <<= 1;								// shift
 2294               		.loc 1 1694 0
 2295 0b2a 880F      		lsl r24
 2296 0b2c 991F      		rol r25
 2297               	.LVL62:
 2298               	.L210:
1695:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(!(IRCOMM_RC5_bit & ACS))					// inverted bit
 2299               		.loc 1 1695 0
 2300 0b2e 32FF      		sbrs r19,2
1696:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					tmp |= 1;								// insert new bit
 2301               		.loc 1 1696 0
 2302 0b30 8160      		ori r24,1
 2303               	.LVL63:
 2304               	.L211:
1697:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				IRCOMM_RC5_time = 0;						// count next pulse time
 2305               		.loc 1 1697 0
 2306 0b32 1092 0000 		sts IRCOMM_RC5_time.2400,__zero_reg__
 2307               	.L207:
1698:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
1699:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
1700:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		IRCOMM_RC5_tmp = tmp;	
 2308               		.loc 1 1700 0
 2309 0b36 9093 0000 		sts IRCOMM_RC5_tmp.2401+1,r25
 2310 0b3a 8093 0000 		sts IRCOMM_RC5_tmp.2401,r24
 2311               	.LVL64:
 2312               	.L170:
 2313               	/* epilogue start */
 2314               	.LBE53:
1701:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
1702:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	/*****************************************************************************/
1703:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
1704:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Only used in Selftest program:
1705:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#ifdef DEBUG_MEASURE_DUTY_CYCLE
1706:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(!isEncoderLeft())
1707:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			cycle_l_l_tmp++;
1708:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		else 
1709:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			cycle_h_l_tmp++;
1710:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(!isEncoderRight())
1711:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			cycle_l_r_tmp++;
1712:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		else 
1713:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			cycle_h_r_tmp++;
1714:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	#endif
1715:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 2315               		.loc 1 1715 0
 2316 0b3e BF91      		pop r27
 2317 0b40 AF91      		pop r26
 2318 0b42 9F91      		pop r25
 2319 0b44 8F91      		pop r24
 2320 0b46 7F91      		pop r23
 2321 0b48 6F91      		pop r22
 2322 0b4a 5F91      		pop r21
 2323 0b4c 4F91      		pop r20
 2324 0b4e 3F91      		pop r19
 2325 0b50 2F91      		pop r18
 2326 0b52 0F90      		pop r0
 2327 0b54 0FBE      		out __SREG__,r0
 2328 0b56 0F90      		pop r0
 2329 0b58 1F90      		pop r1
 2330 0b5a 1895      		reti
 2331               		.cfi_endproc
 2332               	.LFE44:
 2334               	.global	sleep
 2336               	sleep:
 2337               	.LFB45:
1716:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1717:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1718:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Delay with the help of the 10kHz timer.
1719:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * sleep(10) delays for *about* 1ms! Not exaclty, as we do not use assembly routines
1720:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * anywhere in this library!
1721:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1722:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This is a blocking routine, which means that the processor
1723:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * will loop in this routine and (except for interrupts) the
1724:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * normal program flow is stopped!
1725:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Thus you should use the Stopwatch functions wherever you can!
1726:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1727:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
1728:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		sleep(1); // delay 1 * 100us = 100us = 0.1ms
1729:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		sleep(10); // delay 10 * 100us = 1000us = 1ms
1730:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		sleep(100); // delay 100 * 100us = 10000us = 10ms
1731:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		// The maximum delay is:
1732:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		sleep(255); // delay 255 * 100us = 25500us = 25.5ms
1733:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1734:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void sleep(uint8_t time)
1735:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 2338               		.loc 1 1735 0
 2339               		.cfi_startproc
 2340               	.LVL65:
 2341               	/* prologue: function */
 2342               	/* frame size = 0 */
 2343               	/* stack size = 0 */
 2344               	.L__stack_usage = 0
1736:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	for (delay_timer = 0; delay_timer < time;);
 2345               		.loc 1 1736 0
 2346 0b5c 1092 0000 		sts delay_timer,__zero_reg__
 2347               	.L246:
 2348               		.loc 1 1736 0 is_stmt 0 discriminator 1
 2349 0b60 9091 0000 		lds r25,delay_timer
 2350 0b64 9817      		cp r25,r24
 2351 0b66 00F0      		brlo .L246
 2352               	/* epilogue start */
1737:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 2353               		.loc 1 1737 0 is_stmt 1
 2354 0b68 0895      		ret
 2355               		.cfi_endproc
 2356               	.LFE45:
 2358               	.global	mSleep
 2360               	mSleep:
 2361               	.LFB46:
1738:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1739:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1740:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * The same as sleep() but this delays for time*1ms! 
1741:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1742:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
1743:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *      mSleep(100); // delay 100 * 1ms = 100ms = 0.1s
1744:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *		mSleep(1000); // delay 1000 * 1ms = 1000ms = 1s
1745:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1746:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1747:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void mSleep(uint16_t time)
1748:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 2362               		.loc 1 1748 0
 2363               		.cfi_startproc
 2364               	.LVL66:
 2365 0b6a CF93      		push r28
 2366               	.LCFI28:
 2367               		.cfi_def_cfa_offset 3
 2368               		.cfi_offset 28, -2
 2369 0b6c DF93      		push r29
 2370               	.LCFI29:
 2371               		.cfi_def_cfa_offset 4
 2372               		.cfi_offset 29, -3
 2373               	/* prologue: function */
 2374               	/* frame size = 0 */
 2375               	/* stack size = 2 */
 2376               	.L__stack_usage = 2
 2377 0b6e EC01      		movw r28,r24
 2378               	.LVL67:
 2379               	.L248:
1749:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	while (time--) sleep(10);
 2380               		.loc 1 1749 0 discriminator 1
 2381 0b70 2097      		sbiw r28,0
 2382 0b72 01F0      		breq .L250
 2383               		.loc 1 1749 0 is_stmt 0 discriminator 2
 2384 0b74 8AE0      		ldi r24,lo8(10)
 2385 0b76 0E94 0000 		call sleep
 2386               	.LVL68:
 2387 0b7a 2197      		sbiw r28,1
 2388               	.LVL69:
 2389 0b7c 00C0      		rjmp .L248
 2390               	.LVL70:
 2391               	.L250:
 2392               	/* epilogue start */
1750:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 2393               		.loc 1 1750 0 is_stmt 1
 2394 0b7e DF91      		pop r29
 2395 0b80 CF91      		pop r28
 2396               	.LVL71:
 2397 0b82 0895      		ret
 2398               		.cfi_endproc
 2399               	.LFE46:
 2401               	.global	delayCycles
 2403               	delayCycles:
 2404               	.LFB47:
1751:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1752:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1753:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Delay a number of instruction cycles. 
1754:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * No exact delay function! And interrupts can still occur and 
1755:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * add a lot of extra cycles! 
1756:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * This function only guarantees to delay for a MINIMAL number
1757:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * of cycles! 
1758:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1759:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
1760:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * 	delayCycles(1000); // Delays for minimal 1000 instruction cycles
1761:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *					   // (it will be a lot more...)
1762:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1763:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void delayCycles(uint16_t dly)
1764:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 2405               		.loc 1 1764 0
 2406               		.cfi_startproc
 2407               	.LVL72:
 2408               	/* prologue: function */
 2409               	/* frame size = 0 */
 2410               	/* stack size = 0 */
 2411               	.L__stack_usage = 0
 2412               	.L252:
1765:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	while(dly--) nop();
 2413               		.loc 1 1765 0 discriminator 1
 2414               	.LVL73:
 2415 0b84 0197      		sbiw r24,1
 2416 0b86 00F0      		brcs .L254
 2417               		.loc 1 1765 0 is_stmt 0 discriminator 2
 2418               	/* #APP */
 2419               	 ;  1765 "../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c" 1
 2420 0b88 0000      		nop
 2421               		
 2422               	 ;  0 "" 2
 2423               	/* #NOAPP */
 2424 0b8a 00C0      		rjmp .L252
 2425               	.L254:
 2426               	/* epilogue start */
1766:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 2427               		.loc 1 1766 0 is_stmt 1
 2428 0b8c 0895      		ret
 2429               		.cfi_endproc
 2430               	.LFE47:
 2432               	.global	emergencyShutdown
 2434               	emergencyShutdown:
 2435               	.LFB17:
 492:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	cli();
 2436               		.loc 1 492 0
 2437               		.cfi_startproc
 2438               	.LVL74:
 2439               	/* prologue: function */
 2440               	/* frame size = 0 */
 2441               	/* stack size = 0 */
 2442               	.L__stack_usage = 0
 2443 0b8e C82F      		mov r28,r24
 493:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	IRCOMM_OFF();
 2444               		.loc 1 493 0
 2445               	/* #APP */
 2446               	 ;  493 "../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c" 1
 2447 0b90 F894      		cli
 2448               	 ;  0 "" 2
 494:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	setACSPwrOff();
 2449               		.loc 1 494 0
 2450               	/* #NOAPP */
 2451 0b92 9798      		cbi 0x12,7
 495:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_power = 0;
 2452               		.loc 1 495 0
 2453 0b94 0E94 0000 		call setACSPwrOff
 2454               	.LVL75:
 496:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_power = 0;
 2455               		.loc 1 496 0
 2456 0b98 1092 0000 		sts mleft_power+1,__zero_reg__
 2457 0b9c 1092 0000 		sts mleft_power,__zero_reg__
 497:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	left_i = 0;
 2458               		.loc 1 497 0
 2459 0ba0 1092 0000 		sts mright_power+1,__zero_reg__
 2460 0ba4 1092 0000 		sts mright_power,__zero_reg__
 498:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	right_i = 0;
 2461               		.loc 1 498 0
 2462 0ba8 1092 0000 		sts left_i+1,__zero_reg__
 2463 0bac 1092 0000 		sts left_i,__zero_reg__
 499:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mleft_ptmp = 0;
 2464               		.loc 1 499 0
 2465 0bb0 1092 0000 		sts right_i+1,__zero_reg__
 2466 0bb4 1092 0000 		sts right_i,__zero_reg__
 500:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_ptmp = 0;
 2467               		.loc 1 500 0
 2468 0bb8 1092 0000 		sts mleft_ptmp,__zero_reg__
 501:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	OCR1AL = 0;
 2469               		.loc 1 501 0
 2470 0bbc 1092 0000 		sts mright_ptmp,__zero_reg__
 502:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	OCR1BL = 0;
 2471               		.loc 1 502 0
 2472 0bc0 1ABC      		out 0x2a,__zero_reg__
 503:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	TCCR1A = 0;
 2473               		.loc 1 503 0
 2474 0bc2 18BC      		out 0x28,__zero_reg__
 504:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	powerOFF();
 2475               		.loc 1 504 0
 2476 0bc4 1FBC      		out 0x2f,__zero_reg__
 505:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #ifdef ENABLE_OC_ERROR_MESSAGE
 2477               		.loc 1 505 0
 2478 0bc6 0E94 0000 		call powerOFF
 2479               	.LVL76:
 507:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	writeString_P("##### ALL OPERATIONS STOPPED TO PREVENT ANY DAMAGE! #####\n");
 2480               		.loc 1 507 0
 2481 0bca 80E0      		ldi r24,lo8(__c.2205)
 2482 0bcc 90E0      		ldi r25,hi8(__c.2205)
 2483 0bce 0E94 0000 		call writeNStringP
 2484               	.LVL77:
 508:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(why == ENCODER_MALFUNCTION_LEFT || why == ENCODER_MALFUNCTION_RIGHT) {
 2485               		.loc 1 508 0
 2486 0bd2 80E0      		ldi r24,lo8(__c.2207)
 2487 0bd4 90E0      		ldi r25,hi8(__c.2207)
 2488 0bd6 0E94 0000 		call writeNStringP
 2489               	.LVL78:
 509:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		
 2490               		.loc 1 509 0
 2491 0bda 8FEF      		ldi r24,lo8(-1)
 2492 0bdc 8C0F      		add r24,r28
 2493 0bde 8230      		cpi r24,lo8(2)
 2494 0be0 00F4      		brsh .L256
 511:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		writeString_P("Affected channel:"); 	
 2495               		.loc 1 511 0
 2496 0be2 80E0      		ldi r24,lo8(__c.2209)
 2497 0be4 90E0      		ldi r25,hi8(__c.2209)
 2498 0be6 0E94 0000 		call writeNStringP
 2499               	.LVL79:
 512:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(why == ENCODER_MALFUNCTION_LEFT)
 2500               		.loc 1 512 0
 2501 0bea 80E0      		ldi r24,lo8(__c.2211)
 2502 0bec 90E0      		ldi r25,hi8(__c.2211)
 2503 0bee 0E94 0000 		call writeNStringP
 2504               	.LVL80:
 513:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			writeString_P("LEFT");
 2505               		.loc 1 513 0
 2506 0bf2 C130      		cpi r28,lo8(1)
 2507 0bf4 01F4      		brne .L257
 514:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		else
 2508               		.loc 1 514 0
 2509 0bf6 80E0      		ldi r24,lo8(__c.2213)
 2510 0bf8 90E0      		ldi r25,hi8(__c.2213)
 2511 0bfa 00C0      		rjmp .L265
 2512               	.L257:
 516:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		writeString_P("!\n\n(s. task_motorControl() function in RP6Lib!)\n");
 2513               		.loc 1 516 0
 2514 0bfc 80E0      		ldi r24,lo8(__c.2215)
 2515 0bfe 90E0      		ldi r25,hi8(__c.2215)
 2516               	.L265:
 2517 0c00 0E94 0000 		call writeNStringP
 2518               	.LVL81:
 517:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		writeString_P("You need to check Encoder/Motor assembly (or your software).\n\n");
 2519               		.loc 1 517 0
 2520 0c04 80E0      		ldi r24,lo8(__c.2217)
 2521 0c06 90E0      		ldi r25,hi8(__c.2217)
 2522 0c08 0E94 0000 		call writeNStringP
 2523               	.LVL82:
 518:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 2524               		.loc 1 518 0
 2525 0c0c 80E0      		ldi r24,lo8(__c.2219)
 2526 0c0e 90E0      		ldi r25,hi8(__c.2219)
 2527 0c10 00C0      		rjmp .L266
 2528               	.L256:
 520:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	{
 2529               		.loc 1 520 0
 2530 0c12 C330      		cpi r28,lo8(3)
 2531 0c14 01F4      		brne .L259
 522:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		writeString_P("\n\n(s. task_motorControl() function in RP6Lib!)\n");
 2532               		.loc 1 522 0
 2533 0c16 80E0      		ldi r24,lo8(__c.2221)
 2534 0c18 90E0      		ldi r25,hi8(__c.2221)
 2535 0c1a 0E94 0000 		call writeNStringP
 2536               	.LVL83:
 523:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		writeString_P("You need to check Motor assembly (or your software).\n\n");
 2537               		.loc 1 523 0
 2538 0c1e 80E0      		ldi r24,lo8(__c.2223)
 2539 0c20 90E0      		ldi r25,hi8(__c.2223)
 2540 0c22 0E94 0000 		call writeNStringP
 2541               	.LVL84:
 524:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 2542               		.loc 1 524 0
 2543 0c26 80E0      		ldi r24,lo8(__c.2225)
 2544 0c28 90E0      		ldi r25,hi8(__c.2225)
 2545               	.L266:
 2546 0c2a 0E94 0000 		call writeNStringP
 2547               	.LVL85:
 2548               	.L259:
 526:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** #endif
 2549               		.loc 1 526 0
 2550 0c2e 80E0      		ldi r24,lo8(__c.2227)
 2551 0c30 90E0      		ldi r25,hi8(__c.2227)
 2552 0c32 0E94 0000 		call writeNStringP
 2553               	.LVL86:
 2554               	.LBB54:
 2555               	.LBB55:
 2556               	.LBB56:
 154:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	updateStatusLEDs();
 2557               		.loc 1 154 0
 2558 0c36 D6E3      		ldi r29,lo8(54)
 2559               	.LVL87:
 2560               	.L263:
 2561 0c38 D093 0000 		sts statusLEDs,r29
 155:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 2562               		.loc 1 155 0
 2563 0c3c 0E94 0000 		call updateStatusLEDs
 2564               	.LVL88:
 2565 0c40 CAE0      		ldi r28,lo8(10)
 2566               	.LVL89:
 2567               	.L261:
 2568               	.LBE56:
 2569               	.LBE55:
 533:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		setLEDs(0b000000);
 2570               		.loc 1 533 0 discriminator 2
 2571 0c42 80E0      		ldi r24,0
 2572 0c44 90E8      		ldi r25,lo8(-128)
 2573 0c46 0E94 0000 		call delayCycles
 2574               	.LVL90:
 2575 0c4a C150      		subi r28,lo8(-(-1))
 2576               	.LVL91:
 532:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			delayCycles(32768);
 2577               		.loc 1 532 0 discriminator 2
 2578 0c4c 01F4      		brne .L261
 2579               	.LVL92:
 2580               	.LBB57:
 2581               	.LBB58:
 154:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	updateStatusLEDs();
 2582               		.loc 1 154 0
 2583 0c4e 1092 0000 		sts statusLEDs,__zero_reg__
 155:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 2584               		.loc 1 155 0
 2585 0c52 0E94 0000 		call updateStatusLEDs
 2586               	.LVL93:
 2587 0c56 CAE0      		ldi r28,lo8(10)
 2588               	.LVL94:
 2589               	.L264:
 2590               	.LBE58:
 2591               	.LBE57:
 536:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 2592               		.loc 1 536 0 discriminator 2
 2593 0c58 8FEF      		ldi r24,lo8(-1)
 2594 0c5a 9FEF      		ldi r25,lo8(-1)
 2595 0c5c 0E94 0000 		call delayCycles
 2596               	.LVL95:
 2597 0c60 C150      		subi r28,lo8(-(-1))
 2598               	.LVL96:
 535:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			delayCycles(65535);
 2599               		.loc 1 535 0 discriminator 2
 2600 0c62 01F4      		brne .L264
 2601 0c64 00C0      		rjmp .L263
 2602               	.LBE54:
 2603               		.cfi_endproc
 2604               	.LFE17:
 2606               	.global	task_motionControl
 2608               	task_motionControl:
 2609               	.LFB18:
 560:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Automatic motor overcurrent shutdown:
 2610               		.loc 1 560 0
 2611               		.cfi_startproc
 2612               	/* prologue: function */
 2613               	/* frame size = 0 */
 2614               	/* stack size = 0 */
 2615               	.L__stack_usage = 0
 562:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		overcurrent_timer = 0;
 2616               		.loc 1 562 0
 2617 0c66 8091 0000 		lds r24,overcurrent_timer
 2618 0c6a 8233      		cpi r24,lo8(50)
 2619 0c6c 00F4      		brsh .+2
 2620 0c6e 00C0      		rjmp .L268
 563:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(!overcurrent_timeout) {
 2621               		.loc 1 563 0
 2622 0c70 1092 0000 		sts overcurrent_timer,__zero_reg__
 564:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if((adcMotorCurrentLeft > 770) || (adcMotorCurrentRight > 770)) {
 2623               		.loc 1 564 0
 2624 0c74 2091 0000 		lds r18,overcurrent_timeout
 2625 0c78 8091 0000 		lds r24,adcMotorCurrentLeft
 2626 0c7c 9091 0000 		lds r25,adcMotorCurrentLeft+1
 2627 0c80 2111      		cpse r18,__zero_reg__
 2628 0c82 00C0      		rjmp .L274
 2629 0c84 4091 0000 		lds r20,motion_status
 565:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				overcurrent_errors++;
 2630               		.loc 1 565 0
 2631 0c88 8330      		cpi r24,3
 2632 0c8a 23E0      		ldi r18,3
 2633 0c8c 9207      		cpc r25,r18
 2634 0c8e 00F4      		brsh .L270
 565:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				overcurrent_errors++;
 2635               		.loc 1 565 0 is_stmt 0 discriminator 1
 2636 0c90 2091 0000 		lds r18,adcMotorCurrentRight
 2637 0c94 3091 0000 		lds r19,adcMotorCurrentRight+1
 2638 0c98 2330      		cpi r18,3
 2639 0c9a 3340      		sbci r19,3
 2640 0c9c 00F0      		brlo .L271
 2641               	.L270:
 566:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				overcurrent_timeout = 10; 
 2642               		.loc 1 566 0 is_stmt 1
 2643 0c9e 8091 0000 		lds r24,overcurrent_errors
 2644 0ca2 8F5F      		subi r24,lo8(-(1))
 2645 0ca4 8093 0000 		sts overcurrent_errors,r24
 567:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				mleft_power = 0;
 2646               		.loc 1 567 0
 2647 0ca8 8AE0      		ldi r24,lo8(10)
 2648 0caa 8093 0000 		sts overcurrent_timeout,r24
 568:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				mright_power = 0;				
 2649               		.loc 1 568 0
 2650 0cae 1092 0000 		sts mleft_power+1,__zero_reg__
 2651 0cb2 1092 0000 		sts mleft_power,__zero_reg__
 569:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				left_i = 0;
 2652               		.loc 1 569 0
 2653 0cb6 1092 0000 		sts mright_power+1,__zero_reg__
 2654 0cba 1092 0000 		sts mright_power,__zero_reg__
 570:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				right_i = 0;
 2655               		.loc 1 570 0
 2656 0cbe 1092 0000 		sts left_i+1,__zero_reg__
 2657 0cc2 1092 0000 		sts left_i,__zero_reg__
 571:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				motion_status.overcurrent = true;
 2658               		.loc 1 571 0
 2659 0cc6 1092 0000 		sts right_i+1,__zero_reg__
 2660 0cca 1092 0000 		sts right_i,__zero_reg__
 572:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				return;
 2661               		.loc 1 572 0
 2662 0cce 4460      		ori r20,lo8(1<<2)
 2663 0cd0 4093 0000 		sts motion_status,r20
 573:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
 2664               		.loc 1 573 0
 2665 0cd4 0895      		ret
 2666               	.L271:
 576:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			
 2667               		.loc 1 576 0
 2668 0cd6 242F      		mov r18,r20
 2669 0cd8 2B7F      		andi r18,lo8(~(1<<2))
 2670 0cda 2093 0000 		sts motion_status,r18
 580:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				overcurrent_errors = 0;
 2671               		.loc 1 580 0
 2672 0cde 2091 0000 		lds r18,overcurrent_error_clear
 2673 0ce2 2536      		cpi r18,lo8(101)
 2674 0ce4 00F0      		brlo .L273
 581:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				overcurrent_error_clear = 0;
 2675               		.loc 1 581 0
 2676 0ce6 1092 0000 		sts overcurrent_errors,__zero_reg__
 582:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			}
 2677               		.loc 1 582 0
 2678 0cea 1092 0000 		sts overcurrent_error_clear,__zero_reg__
 2679 0cee 00C0      		rjmp .L274
 2680               	.L273:
 584:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				emergencyShutdown(OVERCURRENT);
 2681               		.loc 1 584 0
 2682 0cf0 2091 0000 		lds r18,overcurrent_errors
 2683 0cf4 2330      		cpi r18,lo8(3)
 2684 0cf6 00F0      		brlo .L274
 585:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
 2685               		.loc 1 585 0
 2686 0cf8 83E0      		ldi r24,lo8(3)
 2687 0cfa 00C0      		rjmp .L325
 2688               	.L274:
 590:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		  && (mleft_des_speed != 0) &&  (mleft_ptmp > 150))
 2689               		.loc 1 590 0
 2690 0cfc 8639      		cpi r24,-106
 2691 0cfe 9105      		cpc r25,__zero_reg__
 2692 0d00 00F4      		brsh .L275
 590:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		  && (mleft_des_speed != 0) &&  (mleft_ptmp > 150))
 2693               		.loc 1 590 0 is_stmt 0 discriminator 1
 2694 0d02 8091 0000 		lds r24,mleft_speed
 2695 0d06 9091 0000 		lds r25,mleft_speed+1
 2696 0d0a 892B      		or r24,r25
 2697 0d0c 01F4      		brne .L275
 591:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			emergencyShutdown(ENCODER_MALFUNCTION_LEFT);
 2698               		.loc 1 591 0 is_stmt 1
 2699 0d0e 8091 0000 		lds r24,mleft_des_speed
 2700 0d12 9091 0000 		lds r25,mleft_des_speed+1
 2701 0d16 892B      		or r24,r25
 2702 0d18 01F0      		breq .L275
 591:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			emergencyShutdown(ENCODER_MALFUNCTION_LEFT);
 2703               		.loc 1 591 0 is_stmt 0 discriminator 1
 2704 0d1a 8091 0000 		lds r24,mleft_ptmp
 2705 0d1e 8739      		cpi r24,lo8(-105)
 2706 0d20 00F0      		brlo .L275
 592:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if((adcMotorCurrentRight < 150) && (mright_speed == 0) 
 2707               		.loc 1 592 0 is_stmt 1
 2708 0d22 81E0      		ldi r24,lo8(1)
 2709               	.L325:
 2710 0d24 0E94 0000 		call emergencyShutdown
 2711               	.LVL97:
 2712               	.L275:
 593:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		  && (mright_des_speed != 0) && (mright_ptmp > 150))
 2713               		.loc 1 593 0
 2714 0d28 8091 0000 		lds r24,adcMotorCurrentRight
 2715 0d2c 9091 0000 		lds r25,adcMotorCurrentRight+1
 2716 0d30 8639      		cpi r24,-106
 2717 0d32 9105      		cpc r25,__zero_reg__
 2718 0d34 00F4      		brsh .L268
 593:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		  && (mright_des_speed != 0) && (mright_ptmp > 150))
 2719               		.loc 1 593 0 is_stmt 0 discriminator 1
 2720 0d36 8091 0000 		lds r24,mright_speed
 2721 0d3a 9091 0000 		lds r25,mright_speed+1
 2722 0d3e 892B      		or r24,r25
 2723 0d40 01F4      		brne .L268
 594:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			emergencyShutdown(ENCODER_MALFUNCTION_RIGHT);
 2724               		.loc 1 594 0 is_stmt 1
 2725 0d42 8091 0000 		lds r24,mright_des_speed
 2726 0d46 9091 0000 		lds r25,mright_des_speed+1
 2727 0d4a 892B      		or r24,r25
 2728 0d4c 01F0      		breq .L268
 594:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			emergencyShutdown(ENCODER_MALFUNCTION_RIGHT);
 2729               		.loc 1 594 0 is_stmt 0 discriminator 1
 2730 0d4e 8091 0000 		lds r24,mright_ptmp
 2731 0d52 8739      		cpi r24,lo8(-105)
 2732 0d54 00F0      		brlo .L268
 595:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 2733               		.loc 1 595 0 is_stmt 1
 2734 0d56 82E0      		ldi r24,lo8(2)
 2735 0d58 00C0      		rjmp .L325
 2736               	.L268:
 599:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		if(!overcurrent_timeout) { // No overcurrent timeout? (default is to wait 2 seconds before new tr
 2737               		.loc 1 599 0
 2738 0d5a 8091 0000 		lds r24,motor_control
 2739 0d5e 8823      		tst r24
 2740 0d60 01F4      		brne .+2
 2741 0d62 00C0      		rjmp .L276
 600:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(overcurrent_errors) // Overcurrent errors?
 2742               		.loc 1 600 0
 2743 0d64 8091 0000 		lds r24,overcurrent_timeout
 2744 0d68 8111      		cpse r24,__zero_reg__
 2745 0d6a 00C0      		rjmp .L277
 2746               	.LBB59:
 601:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				overcurrent_error_clear++; // Yes, Timeout to clear all error events.
 2747               		.loc 1 601 0
 2748 0d6c 8091 0000 		lds r24,overcurrent_errors
 2749 0d70 8823      		tst r24
 2750 0d72 01F0      		breq .L278
 602:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			else
 2751               		.loc 1 602 0
 2752 0d74 8091 0000 		lds r24,overcurrent_error_clear
 2753 0d78 8F5F      		subi r24,lo8(-(1))
 2754 0d7a 8093 0000 		sts overcurrent_error_clear,r24
 2755 0d7e 00C0      		rjmp .L279
 2756               	.L278:
 604:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				
 2757               		.loc 1 604 0
 2758 0d80 1092 0000 		sts overcurrent_error_clear,__zero_reg__
 2759               	.L279:
 607:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(mleft_dist >= preStop_R) { // Stop a bit before the desired distance for ..
 2760               		.loc 1 607 0
 2761 0d84 4091 0000 		lds r20,motion_status
 2762 0d88 41FF      		sbrs r20,1
 2763 0d8a 00C0      		rjmp .L281
 608:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_des_speed = 0;      // ... better accurancy.
 2764               		.loc 1 608 0
 2765 0d8c 2091 0000 		lds r18,mleft_dist
 2766 0d90 3091 0000 		lds r19,mleft_dist+1
 2767 0d94 8091 0000 		lds r24,preStop_R
 2768 0d98 9091 0000 		lds r25,preStop_R+1
 2769 0d9c 2817      		cp r18,r24
 2770 0d9e 3907      		cpc r19,r25
 2771 0da0 00F0      		brlo .L282
 609:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					left_i = 0;
 2772               		.loc 1 609 0
 2773 0da2 1092 0000 		sts mleft_des_speed+1,__zero_reg__
 2774 0da6 1092 0000 		sts mleft_des_speed,__zero_reg__
 610:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_power = 0;		
 2775               		.loc 1 610 0
 2776 0daa 1092 0000 		sts left_i+1,__zero_reg__
 2777 0dae 1092 0000 		sts left_i,__zero_reg__
 611:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					motion_status.move_R = false;
 2778               		.loc 1 611 0
 2779 0db2 1092 0000 		sts mleft_power+1,__zero_reg__
 2780 0db6 1092 0000 		sts mleft_power,__zero_reg__
 612:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}
 2781               		.loc 1 612 0
 2782 0dba 842F      		mov r24,r20
 2783 0dbc 8D7F      		andi r24,lo8(~(1<<1))
 2784 0dbe 8093 0000 		sts motion_status,r24
 2785 0dc2 00C0      		rjmp .L281
 2786               	.L282:
 614:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_des_speed /= 2;
 2787               		.loc 1 614 0
 2788 0dc4 2091 0000 		lds r18,mleft_dist
 2789 0dc8 3091 0000 		lds r19,mleft_dist+1
 2790 0dcc 8091 0000 		lds r24,preDecelerate_R
 2791 0dd0 9091 0000 		lds r25,preDecelerate_R+1
 2792 0dd4 2817      		cp r18,r24
 2793 0dd6 3907      		cpc r19,r25
 2794 0dd8 00F0      		brlo .L281
 615:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					if(mleft_des_speed < 22) mleft_des_speed = 22;
 2795               		.loc 1 615 0
 2796 0dda 8091 0000 		lds r24,mleft_des_speed
 2797 0dde 9091 0000 		lds r25,mleft_des_speed+1
 2798 0de2 9695      		lsr r25
 2799 0de4 8795      		ror r24
 2800 0de6 9093 0000 		sts mleft_des_speed+1,r25
 2801 0dea 8093 0000 		sts mleft_des_speed,r24
 616:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}	
 2802               		.loc 1 616 0
 2803 0dee 4697      		sbiw r24,22
 2804 0df0 00F4      		brsh .L281
 616:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}	
 2805               		.loc 1 616 0 is_stmt 0 discriminator 1
 2806 0df2 86E1      		ldi r24,lo8(22)
 2807 0df4 90E0      		ldi r25,0
 2808 0df6 9093 0000 		sts mleft_des_speed+1,r25
 2809 0dfa 8093 0000 		sts mleft_des_speed,r24
 2810               	.L281:
 621:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(mright_dist >= preStop_L) { // Stop a bit before the desired distance for ..
 2811               		.loc 1 621 0 is_stmt 1
 2812 0dfe 4091 0000 		lds r20,motion_status
 2813 0e02 40FF      		sbrs r20,0
 2814 0e04 00C0      		rjmp .L285
 622:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_des_speed = 0;      // ... better accurancy.
 2815               		.loc 1 622 0
 2816 0e06 2091 0000 		lds r18,mright_dist
 2817 0e0a 3091 0000 		lds r19,mright_dist+1
 2818 0e0e 8091 0000 		lds r24,preStop_L
 2819 0e12 9091 0000 		lds r25,preStop_L+1
 2820 0e16 2817      		cp r18,r24
 2821 0e18 3907      		cpc r19,r25
 2822 0e1a 00F0      		brlo .L286
 623:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					right_i = 0;
 2823               		.loc 1 623 0
 2824 0e1c 1092 0000 		sts mright_des_speed+1,__zero_reg__
 2825 0e20 1092 0000 		sts mright_des_speed,__zero_reg__
 624:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_power = 0;
 2826               		.loc 1 624 0
 2827 0e24 1092 0000 		sts right_i+1,__zero_reg__
 2828 0e28 1092 0000 		sts right_i,__zero_reg__
 625:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					motion_status.move_L = false;
 2829               		.loc 1 625 0
 2830 0e2c 1092 0000 		sts mright_power+1,__zero_reg__
 2831 0e30 1092 0000 		sts mright_power,__zero_reg__
 626:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}
 2832               		.loc 1 626 0
 2833 0e34 842F      		mov r24,r20
 2834 0e36 8E7F      		andi r24,lo8(~(1<<0))
 2835 0e38 8093 0000 		sts motion_status,r24
 2836 0e3c 00C0      		rjmp .L285
 2837               	.L286:
 628:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_des_speed /= 2;
 2838               		.loc 1 628 0
 2839 0e3e 2091 0000 		lds r18,mright_dist
 2840 0e42 3091 0000 		lds r19,mright_dist+1
 2841 0e46 8091 0000 		lds r24,preDecelerate_L
 2842 0e4a 9091 0000 		lds r25,preDecelerate_L+1
 2843 0e4e 2817      		cp r18,r24
 2844 0e50 3907      		cpc r19,r25
 2845 0e52 00F0      		brlo .L285
 629:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					if(mright_des_speed < 22) mright_des_speed = 22;
 2846               		.loc 1 629 0
 2847 0e54 8091 0000 		lds r24,mright_des_speed
 2848 0e58 9091 0000 		lds r25,mright_des_speed+1
 2849 0e5c 9695      		lsr r25
 2850 0e5e 8795      		ror r24
 2851 0e60 9093 0000 		sts mright_des_speed+1,r25
 2852 0e64 8093 0000 		sts mright_des_speed,r24
 630:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}	
 2853               		.loc 1 630 0
 2854 0e68 4697      		sbiw r24,22
 2855 0e6a 00F4      		brsh .L285
 630:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}	
 2856               		.loc 1 630 0 is_stmt 0 discriminator 1
 2857 0e6c 86E1      		ldi r24,lo8(22)
 2858 0e6e 90E0      		ldi r25,0
 2859 0e70 9093 0000 		sts mright_des_speed+1,r25
 2860 0e74 8093 0000 		sts mright_des_speed,r24
 2861               	.L285:
 661:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(mleft_des_speed || mright_des_speed) {
 2862               		.loc 1 661 0 is_stmt 1
 2863 0e78 8091 0000 		lds r24,mleft_des_dir
 2864 0e7c 9091 0000 		lds r25,mleft_dir
 2865 0e80 8913      		cpse r24,r25
 2866 0e82 00C0      		rjmp .L288
 661:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				if(mleft_des_speed || mright_des_speed) {
 2867               		.loc 1 661 0 is_stmt 0 discriminator 1
 2868 0e84 2091 0000 		lds r18,mright_des_dir
 2869 0e88 9091 0000 		lds r25,mright_dir
 2870 0e8c 2917      		cp r18,r25
 2871 0e8e 01F4      		brne .+2
 2872 0e90 00C0      		rjmp .L289
 2873               	.L288:
 662:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_des_speed_tmp = mleft_des_speed; // store current speed
 2874               		.loc 1 662 0 is_stmt 1
 2875 0e92 4091 0000 		lds r20,mleft_des_speed
 2876 0e96 5091 0000 		lds r21,mleft_des_speed+1
 2877 0e9a 2091 0000 		lds r18,mright_des_speed
 2878 0e9e 3091 0000 		lds r19,mright_des_speed+1
 2879 0ea2 4115      		cp r20,__zero_reg__
 2880 0ea4 5105      		cpc r21,__zero_reg__
 2881 0ea6 01F4      		brne .L290
 662:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_des_speed_tmp = mleft_des_speed; // store current speed
 2882               		.loc 1 662 0 is_stmt 0 discriminator 1
 2883 0ea8 2115      		cp r18,__zero_reg__
 2884 0eaa 3105      		cpc r19,__zero_reg__
 2885 0eac 01F0      		breq .L291
 2886               	.L290:
 663:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_des_speed_tmp = mright_des_speed; 
 2887               		.loc 1 663 0 is_stmt 1
 2888 0eae 5093 0000 		sts mleft_des_speed_tmp+1,r21
 2889 0eb2 4093 0000 		sts mleft_des_speed_tmp,r20
 664:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_des_speed = 0;			
 2890               		.loc 1 664 0
 2891 0eb6 3093 0000 		sts mright_des_speed_tmp+1,r19
 2892 0eba 2093 0000 		sts mright_des_speed_tmp,r18
 665:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_des_speed = 0;
 2893               		.loc 1 665 0
 2894 0ebe 1092 0000 		sts mleft_des_speed+1,__zero_reg__
 2895 0ec2 1092 0000 		sts mleft_des_speed,__zero_reg__
 666:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_power=0; // Soft PWM adjust to 0
 2896               		.loc 1 666 0
 2897 0ec6 1092 0000 		sts mright_des_speed+1,__zero_reg__
 2898 0eca 1092 0000 		sts mright_des_speed,__zero_reg__
 667:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_power=0;
 2899               		.loc 1 667 0
 2900 0ece 1092 0000 		sts mright_power+1,__zero_reg__
 2901 0ed2 1092 0000 		sts mright_power,__zero_reg__
 668:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					left_i = 0;
 2902               		.loc 1 668 0
 2903 0ed6 1092 0000 		sts mleft_power+1,__zero_reg__
 2904 0eda 1092 0000 		sts mleft_power,__zero_reg__
 669:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					right_i = 0;
 2905               		.loc 1 669 0
 2906 0ede 1092 0000 		sts left_i+1,__zero_reg__
 2907 0ee2 1092 0000 		sts left_i,__zero_reg__
 670:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}
 2908               		.loc 1 670 0
 2909 0ee6 1092 0000 		sts right_i+1,__zero_reg__
 2910 0eea 1092 0000 		sts right_i,__zero_reg__
 2911               	.L291:
 672:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					setMotorDir(mleft_des_dir,mright_des_dir);
 2912               		.loc 1 672 0
 2913 0eee 9FB5      		in r25,0x2f
 2914 0ef0 9111      		cpse r25,__zero_reg__
 2915 0ef2 00C0      		rjmp .L289
 673:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mleft_des_speed = mleft_des_speed_tmp;
 2916               		.loc 1 673 0
 2917 0ef4 6091 0000 		lds r22,mright_des_dir
 2918 0ef8 0E94 0000 		call setMotorDir
 2919               	.LVL98:
 674:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					mright_des_speed = mright_des_speed_tmp;
 2920               		.loc 1 674 0
 2921 0efc 2091 0000 		lds r18,mleft_des_speed_tmp
 2922 0f00 3091 0000 		lds r19,mleft_des_speed_tmp+1
 2923 0f04 3093 0000 		sts mleft_des_speed+1,r19
 2924 0f08 2093 0000 		sts mleft_des_speed,r18
 675:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					left_i = mleft_des_speed / 2;
 2925               		.loc 1 675 0
 2926 0f0c 8091 0000 		lds r24,mright_des_speed_tmp
 2927 0f10 9091 0000 		lds r25,mright_des_speed_tmp+1
 2928 0f14 9093 0000 		sts mright_des_speed+1,r25
 2929 0f18 8093 0000 		sts mright_des_speed,r24
 676:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					right_i = mright_des_speed / 2;
 2930               		.loc 1 676 0
 2931 0f1c 3695      		lsr r19
 2932 0f1e 2795      		ror r18
 2933 0f20 3093 0000 		sts left_i+1,r19
 2934 0f24 2093 0000 		sts left_i,r18
 677:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				}
 2935               		.loc 1 677 0
 2936 0f28 9695      		lsr r25
 2937 0f2a 8795      		ror r24
 2938 0f2c 9093 0000 		sts right_i+1,r25
 2939 0f30 8093 0000 		sts right_i,r24
 2940               	.L289:
 713:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			left_i = left_i + error_left;
 2941               		.loc 1 713 0
 2942 0f34 2091 0000 		lds r18,mleft_des_speed
 2943 0f38 3091 0000 		lds r19,mleft_des_speed+1
 2944 0f3c 8091 0000 		lds r24,mleft_speed
 2945 0f40 9091 0000 		lds r25,mleft_speed+1
 2946               	.LVL99:
 2947 0f44 A901      		movw r20,r18
 2948 0f46 481B      		sub r20,r24
 2949 0f48 590B      		sbc r21,r25
 2950               	.LVL100:
 2951 0f4a CA01      		movw r24,r20
 714:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(left_i > MC_LEFT_IMAX) left_i = MC_LEFT_IMAX;
 2952               		.loc 1 714 0
 2953 0f4c 4091 0000 		lds r20,left_i
 2954 0f50 5091 0000 		lds r21,left_i+1
 2955               	.LVL101:
 2956 0f54 840F      		add r24,r20
 2957 0f56 951F      		adc r25,r21
 2958               	.LVL102:
 715:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(left_i < MC_LEFT_IMIN) left_i = MC_LEFT_IMIN;
 2959               		.loc 1 715 0
 2960 0f58 853A      		cpi r24,-91
 2961 0f5a 51E0      		ldi r21,1
 2962 0f5c 9507      		cpc r25,r21
 2963 0f5e 04F0      		brlt .L321
 715:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(left_i < MC_LEFT_IMIN) left_i = MC_LEFT_IMIN;
 2964               		.loc 1 715 0 is_stmt 0 discriminator 1
 2965 0f60 84EA      		ldi r24,lo8(-92)
 2966 0f62 91E0      		ldi r25,lo8(1)
 2967               	.L321:
 2968 0f64 9093 0000 		sts left_i+1,r25
 2969 0f68 8093 0000 		sts left_i,r24
 716:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mleft_speed == 0 && mleft_des_speed == 0)
 2970               		.loc 1 716 0 is_stmt 1 discriminator 1
 2971 0f6c 8091 0000 		lds r24,left_i
 2972 0f70 9091 0000 		lds r25,left_i+1
 2973 0f74 8C35      		cpi r24,92
 2974 0f76 9E4F      		sbci r25,-2
 2975 0f78 04F4      		brge .L295
 2976 0f7a 8CE5      		ldi r24,lo8(92)
 2977 0f7c 9EEF      		ldi r25,lo8(-2)
 2978 0f7e 9093 0000 		sts left_i+1,r25
 2979 0f82 8093 0000 		sts left_i,r24
 2980               	.L295:
 717:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				left_i = 0;
 2981               		.loc 1 717 0
 2982 0f86 8091 0000 		lds r24,mleft_speed
 2983 0f8a 9091 0000 		lds r25,mleft_speed+1
 2984 0f8e 892B      		or r24,r25
 2985 0f90 01F4      		brne .L296
 717:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				left_i = 0;
 2986               		.loc 1 717 0 is_stmt 0 discriminator 1
 2987 0f92 232B      		or r18,r19
 2988 0f94 01F4      		brne .L296
 718:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			mleft_power = left_i / 2; 
 2989               		.loc 1 718 0 is_stmt 1
 2990 0f96 1092 0000 		sts left_i+1,__zero_reg__
 2991 0f9a 1092 0000 		sts left_i,__zero_reg__
 2992               	.L296:
 719:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mleft_power > 210) mleft_power = 210;
 2993               		.loc 1 719 0
 2994 0f9e 8091 0000 		lds r24,left_i
 2995 0fa2 9091 0000 		lds r25,left_i+1
 2996 0fa6 97FD      		sbrc r25,7
 2997 0fa8 0196      		adiw r24,1
 2998               	.L297:
 2999 0faa 9595      		asr r25
 3000 0fac 8795      		ror r24
 720:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mleft_power < 0) mleft_power = 0;
 3001               		.loc 1 720 0
 3002 0fae 833D      		cpi r24,-45
 3003 0fb0 9105      		cpc r25,__zero_reg__
 3004 0fb2 04F0      		brlt .L322
 720:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mleft_power < 0) mleft_power = 0;
 3005               		.loc 1 720 0 is_stmt 0 discriminator 1
 3006 0fb4 82ED      		ldi r24,lo8(-46)
 3007 0fb6 90E0      		ldi r25,0
 3008               	.L322:
 3009 0fb8 9093 0000 		sts mleft_power+1,r25
 3010 0fbc 8093 0000 		sts mleft_power,r24
 721:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			
 3011               		.loc 1 721 0 is_stmt 1 discriminator 1
 3012 0fc0 8091 0000 		lds r24,mleft_power
 3013 0fc4 9091 0000 		lds r25,mleft_power+1
 3014 0fc8 97FF      		sbrs r25,7
 3015 0fca 00C0      		rjmp .L300
 3016 0fcc 1092 0000 		sts mleft_power+1,__zero_reg__
 3017 0fd0 1092 0000 		sts mleft_power,__zero_reg__
 3018               	.L300:
 724:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			right_i = right_i + error_right;
 3019               		.loc 1 724 0
 3020 0fd4 2091 0000 		lds r18,mright_des_speed
 3021 0fd8 3091 0000 		lds r19,mright_des_speed+1
 3022 0fdc 8091 0000 		lds r24,mright_speed
 3023 0fe0 9091 0000 		lds r25,mright_speed+1
 3024               	.LVL103:
 3025 0fe4 A901      		movw r20,r18
 3026 0fe6 481B      		sub r20,r24
 3027 0fe8 590B      		sbc r21,r25
 3028               	.LVL104:
 3029 0fea CA01      		movw r24,r20
 725:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(right_i > MC_RIGHT_IMAX) right_i = MC_RIGHT_IMAX;
 3030               		.loc 1 725 0
 3031 0fec 4091 0000 		lds r20,right_i
 3032 0ff0 5091 0000 		lds r21,right_i+1
 3033               	.LVL105:
 3034 0ff4 840F      		add r24,r20
 3035 0ff6 951F      		adc r25,r21
 3036               	.LVL106:
 726:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(right_i < MC_RIGHT_IMIN) right_i = MC_RIGHT_IMIN;
 3037               		.loc 1 726 0
 3038 0ff8 853A      		cpi r24,-91
 3039 0ffa 51E0      		ldi r21,1
 3040 0ffc 9507      		cpc r25,r21
 3041 0ffe 04F0      		brlt .L323
 726:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(right_i < MC_RIGHT_IMIN) right_i = MC_RIGHT_IMIN;
 3042               		.loc 1 726 0 is_stmt 0 discriminator 1
 3043 1000 84EA      		ldi r24,lo8(-92)
 3044 1002 91E0      		ldi r25,lo8(1)
 3045               	.L323:
 3046 1004 9093 0000 		sts right_i+1,r25
 3047 1008 8093 0000 		sts right_i,r24
 727:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mright_speed == 0 && mright_des_speed == 0)
 3048               		.loc 1 727 0 is_stmt 1 discriminator 1
 3049 100c 8091 0000 		lds r24,right_i
 3050 1010 9091 0000 		lds r25,right_i+1
 3051 1014 8C35      		cpi r24,92
 3052 1016 9E4F      		sbci r25,-2
 3053 1018 04F4      		brge .L303
 3054 101a 8CE5      		ldi r24,lo8(92)
 3055 101c 9EEF      		ldi r25,lo8(-2)
 3056 101e 9093 0000 		sts right_i+1,r25
 3057 1022 8093 0000 		sts right_i,r24
 3058               	.L303:
 728:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				right_i = 0;
 3059               		.loc 1 728 0
 3060 1026 8091 0000 		lds r24,mright_speed
 3061 102a 9091 0000 		lds r25,mright_speed+1
 3062 102e 892B      		or r24,r25
 3063 1030 01F4      		brne .L304
 728:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				right_i = 0;
 3064               		.loc 1 728 0 is_stmt 0 discriminator 1
 3065 1032 232B      		or r18,r19
 3066 1034 01F4      		brne .L304
 729:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			mright_power = right_i / 2;
 3067               		.loc 1 729 0 is_stmt 1
 3068 1036 1092 0000 		sts right_i+1,__zero_reg__
 3069 103a 1092 0000 		sts right_i,__zero_reg__
 3070               	.L304:
 730:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mright_power > 210) mright_power = 210;
 3071               		.loc 1 730 0
 3072 103e 8091 0000 		lds r24,right_i
 3073 1042 9091 0000 		lds r25,right_i+1
 3074 1046 97FD      		sbrc r25,7
 3075 1048 0196      		adiw r24,1
 3076               	.L305:
 3077 104a 9595      		asr r25
 3078 104c 8795      		ror r24
 731:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mright_power < 0) mright_power = 0;
 3079               		.loc 1 731 0
 3080 104e 833D      		cpi r24,-45
 3081 1050 9105      		cpc r25,__zero_reg__
 3082 1052 04F0      		brlt .L324
 731:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			if(mright_power < 0) mright_power = 0;
 3083               		.loc 1 731 0 is_stmt 0 discriminator 1
 3084 1054 82ED      		ldi r24,lo8(-46)
 3085 1056 90E0      		ldi r25,0
 3086               	.L324:
 3087 1058 9093 0000 		sts mright_power+1,r25
 3088 105c 8093 0000 		sts mright_power,r24
 732:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		}
 3089               		.loc 1 732 0 is_stmt 1 discriminator 1
 3090 1060 8091 0000 		lds r24,mright_power
 3091 1064 9091 0000 		lds r25,mright_power+1
 3092 1068 97FF      		sbrs r25,7
 3093 106a 00C0      		rjmp .L308
 3094 106c 1092 0000 		sts mright_power+1,__zero_reg__
 3095 1070 1092 0000 		sts mright_power,__zero_reg__
 3096 1074 00C0      		rjmp .L308
 3097               	.L277:
 3098               	.LBE59:
 735:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		motor_control = false;
 3099               		.loc 1 735 0
 3100 1076 8150      		subi r24,lo8(-(-1))
 3101 1078 8093 0000 		sts overcurrent_timeout,r24
 3102               	.L308:
 736:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 3103               		.loc 1 736 0
 3104 107c 1092 0000 		sts motor_control,__zero_reg__
 3105               	.L276:
 740:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	{
 3106               		.loc 1 740 0
 3107 1080 8091 0000 		lds r24,motion_status
 3108 1084 9091 0000 		lds r25,motion_status_tmp
 3109 1088 9817      		cp r25,r24
 3110 108a 01F0      		breq .L267
 742:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		MOTIONCONTROL_stateChangedHandler();
 3111               		.loc 1 742 0
 3112 108c 8093 0000 		sts motion_status_tmp,r24
 743:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 3113               		.loc 1 743 0
 3114 1090 E091 0000 		lds r30,MOTIONCONTROL_stateChangedHandler
 3115 1094 F091 0000 		lds r31,MOTIONCONTROL_stateChangedHandler+1
 3116 1098 0994      		ijmp
 3117               	.LVL107:
 3118               	.L267:
 3119 109a 0895      		ret
 3120               		.cfi_endproc
 3121               	.LFE18:
 3123               	.global	extIntON
 3125               	extIntON:
 3126               	.LFB48:
1767:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1768:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
1769:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // External Interrupt Output 
1770:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Can be used to notify Master Controllers 
1771:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // about events when operating in Slave Mode.
1772:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1773:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1774:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Set external interrupt to high level
1775:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1776:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void extIntON(void)
1777:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 3127               		.loc 1 1777 0
 3128               		.cfi_startproc
 3129               	/* prologue: function */
 3130               	/* frame size = 0 */
 3131               	/* stack size = 0 */
 3132               	.L__stack_usage = 0
1778:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRA |= E_INT1;
 3133               		.loc 1 1778 0
 3134 109c D49A      		sbi 0x1a,4
1779:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTA |= E_INT1;
 3135               		.loc 1 1779 0
 3136 109e DC9A      		sbi 0x1b,4
 3137 10a0 0895      		ret
 3138               		.cfi_endproc
 3139               	.LFE48:
 3141               	.global	extIntOFF
 3143               	extIntOFF:
 3144               	.LFB49:
1780:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1781:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1782:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1783:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Set external interrupt to low level
1784:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1785:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void extIntOFF(void)
1786:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 3145               		.loc 1 1786 0
 3146               		.cfi_startproc
 3147               	/* prologue: function */
 3148               	/* frame size = 0 */
 3149               	/* stack size = 0 */
 3150               	.L__stack_usage = 0
1787:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	PORTA &= ~E_INT1;
 3151               		.loc 1 1787 0
 3152 10a2 DC98      		cbi 0x1b,4
1788:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	DDRA &= ~E_INT1;
 3153               		.loc 1 1788 0
 3154 10a4 D498      		cbi 0x1a,4
 3155 10a6 0895      		ret
 3156               		.cfi_endproc
 3157               	.LFE49:
 3159               	.global	task_RP6System
 3161               	task_RP6System:
 3162               	.LFB50:
1789:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1790:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1791:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
1792:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
1793:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
1794:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // System control routine
1795:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1796:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1797:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Calls all important system tasks.
1798:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1799:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void task_RP6System(void)
1800:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 3163               		.loc 1 1800 0
 3164               		.cfi_startproc
 3165               	/* prologue: function */
 3166               	/* frame size = 0 */
 3167               	/* stack size = 0 */
 3168               	.L__stack_usage = 0
1801:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	task_ADC();
 3169               		.loc 1 1801 0
 3170 10a8 0E94 0000 		call task_ADC
 3171               	.LVL108:
1802:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	task_ACS();
 3172               		.loc 1 1802 0
 3173 10ac 0E94 0000 		call task_ACS
 3174               	.LVL109:
1803:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	task_Bumpers();
 3175               		.loc 1 1803 0
 3176 10b0 0E94 0000 		call task_Bumpers
 3177               	.LVL110:
1804:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	task_motionControl();
 3178               		.loc 1 1804 0
 3179 10b4 0C94 0000 		jmp task_motionControl
 3180               	.LVL111:
 3181               		.cfi_endproc
 3182               	.LFE50:
 3184               	.global	move
 3186               	move:
 3187               	.LFB24:
 856:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status.move_L = true;
 3188               		.loc 1 856 0
 3189               		.cfi_startproc
 3190               	.LVL112:
 3191 10b8 EF92      		push r14
 3192               	.LCFI30:
 3193               		.cfi_def_cfa_offset 3
 3194               		.cfi_offset 14, -2
 3195 10ba FF92      		push r15
 3196               	.LCFI31:
 3197               		.cfi_def_cfa_offset 4
 3198               		.cfi_offset 15, -3
 3199 10bc 1F93      		push r17
 3200               	.LCFI32:
 3201               		.cfi_def_cfa_offset 5
 3202               		.cfi_offset 17, -4
 3203 10be CF93      		push r28
 3204               	.LCFI33:
 3205               		.cfi_def_cfa_offset 6
 3206               		.cfi_offset 28, -5
 3207 10c0 DF93      		push r29
 3208               	.LCFI34:
 3209               		.cfi_def_cfa_offset 7
 3210               		.cfi_offset 29, -6
 3211 10c2 1F92      		push __zero_reg__
 3212               	.LCFI35:
 3213               		.cfi_def_cfa_offset 8
 3214 10c4 CDB7      		in r28,__SP_L__
 3215 10c6 DEB7      		in r29,__SP_H__
 3216               	.LCFI36:
 3217               		.cfi_def_cfa_register 28
 3218               	/* prologue: function */
 3219               	/* frame size = 1 */
 3220               	/* stack size = 6 */
 3221               	.L__stack_usage = 6
 3222 10c8 162F      		mov r17,r22
 3223 10ca 7A01      		movw r14,r20
 857:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status.move_R = true;
 3224               		.loc 1 857 0
 3225 10cc 9091 0000 		lds r25,motion_status
 858:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	preDecelerate_L = 0;
 3226               		.loc 1 858 0
 3227 10d0 9160      		ori r25,lo8(1)
 3228 10d2 9260      		ori r25,lo8(1<<1)
 3229 10d4 9093 0000 		sts motion_status,r25
 859:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	preDecelerate_R = 0;
 3230               		.loc 1 859 0
 3231 10d8 1092 0000 		sts preDecelerate_L+1,__zero_reg__
 3232 10dc 1092 0000 		sts preDecelerate_L,__zero_reg__
 860:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(desired_speed > 22) {
 3233               		.loc 1 860 0
 3234 10e0 1092 0000 		sts preDecelerate_R+1,__zero_reg__
 3235 10e4 1092 0000 		sts preDecelerate_R,__zero_reg__
 861:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_L = distance - (20+(desired_speed*2));
 3236               		.loc 1 861 0
 3237 10e8 8731      		cpi r24,lo8(23)
 3238 10ea 00F0      		brlo .L330
 862:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_R = preDecelerate_L;
 3239               		.loc 1 862 0
 3240 10ec 46EF      		ldi r20,lo8(-10)
 3241 10ee 5FEF      		ldi r21,lo8(-1)
 3242               	.LVL113:
 3243 10f0 481B      		sub r20,r24
 3244 10f2 5109      		sbc r21,__zero_reg__
 3245 10f4 440F      		lsl r20
 3246 10f6 551F      		rol r21
 3247 10f8 4E0D      		add r20,r14
 3248 10fa 5F1D      		adc r21,r15
 3249 10fc 5093 0000 		sts preDecelerate_L+1,r21
 3250 1100 4093 0000 		sts preDecelerate_L,r20
 863:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 3251               		.loc 1 863 0
 3252 1104 5093 0000 		sts preDecelerate_R+1,r21
 3253 1108 4093 0000 		sts preDecelerate_R,r20
 3254               	.L330:
 865:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	preStop_R = preStop_L;
 3255               		.loc 1 865 0
 3256 110c A701      		movw r20,r14
 3257 110e 4250      		subi r20,2
 3258 1110 5109      		sbc r21,__zero_reg__
 3259 1112 5093 0000 		sts preStop_L+1,r21
 3260 1116 4093 0000 		sts preStop_L,r20
 866:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(distance < 40) {
 3261               		.loc 1 866 0
 3262 111a 5093 0000 		sts preStop_R+1,r21
 3263 111e 4093 0000 		sts preStop_R,r20
 867:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		distance = 40; 
 3264               		.loc 1 867 0
 3265 1122 98E2      		ldi r25,40
 3266 1124 E916      		cp r14,r25
 3267 1126 F104      		cpc r15,__zero_reg__
 3268 1128 00F4      		brsh .L331
 3269               	.LVL114:
 869:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preStop_R = preStop_L;
 3270               		.loc 1 869 0
 3271 112a 44E1      		ldi r20,lo8(20)
 3272 112c 50E0      		ldi r21,0
 3273 112e 5093 0000 		sts preStop_L+1,r21
 3274 1132 4093 0000 		sts preStop_L,r20
 870:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_L = 10;
 3275               		.loc 1 870 0
 3276 1136 5093 0000 		sts preStop_R+1,r21
 3277 113a 4093 0000 		sts preStop_R,r20
 871:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_R = preDecelerate_L;
 3278               		.loc 1 871 0
 3279 113e 4AE0      		ldi r20,lo8(10)
 3280 1140 50E0      		ldi r21,0
 3281 1142 5093 0000 		sts preDecelerate_L+1,r21
 3282 1146 4093 0000 		sts preDecelerate_L,r20
 872:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 3283               		.loc 1 872 0
 3284 114a 5093 0000 		sts preDecelerate_R+1,r21
 3285 114e 4093 0000 		sts preDecelerate_R,r20
 868:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preStop_L = 20;
 3286               		.loc 1 868 0
 3287 1152 A8E2      		ldi r26,lo8(40)
 3288 1154 EA2E      		mov r14,r26
 3289 1156 F12C      		mov r15,__zero_reg__
 3290 1158 00C0      		rjmp .L332
 3291               	.LVL115:
 3292               	.L331:
 874:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		desired_speed = 40; 
 3293               		.loc 1 874 0
 3294 115a E0E9      		ldi r30,-112
 3295 115c EE16      		cp r14,r30
 3296 115e E1E0      		ldi r30,1
 3297 1160 FE06      		cpc r15,r30
 3298 1162 00F4      		brsh .L333
 3299               	.LVL116:
 3300               	.L332:
 874:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		desired_speed = 40; 
 3301               		.loc 1 874 0 is_stmt 0 discriminator 1
 3302 1164 8932      		cpi r24,lo8(41)
 3303 1166 00F0      		brlo .L333
 3304               	.LVL117:
 876:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_R = preDecelerate_L;
 3305               		.loc 1 876 0 is_stmt 1
 3306 1168 A701      		movw r20,r14
 3307 116a 5695      		lsr r21
 3308 116c 4795      		ror r20
 3309 116e 5695      		lsr r21
 3310 1170 4795      		ror r20
 3311 1172 C701      		movw r24,r14
 3312 1174 841B      		sub r24,r20
 3313 1176 950B      		sbc r25,r21
 3314 1178 9093 0000 		sts preDecelerate_L+1,r25
 3315 117c 8093 0000 		sts preDecelerate_L,r24
 877:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 3316               		.loc 1 877 0
 3317 1180 9093 0000 		sts preDecelerate_R+1,r25
 3318 1184 8093 0000 		sts preDecelerate_R,r24
 875:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_L = distance - (distance/4);
 3319               		.loc 1 875 0
 3320 1188 88E2      		ldi r24,lo8(40)
 3321               	.LVL118:
 3322               	.L333:
 879:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_dist = 0;
 3323               		.loc 1 879 0
 3324 118a 1092 0000 		sts mleft_dist+1,__zero_reg__
 3325 118e 1092 0000 		sts mleft_dist,__zero_reg__
 880:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	moveAtSpeed(desired_speed,desired_speed);
 3326               		.loc 1 880 0
 3327 1192 1092 0000 		sts mright_dist+1,__zero_reg__
 3328 1196 1092 0000 		sts mright_dist,__zero_reg__
 881:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	changeDirection(dir);
 3329               		.loc 1 881 0
 3330 119a 682F      		mov r22,r24
 3331               	.LVL119:
 3332 119c 2983      		std Y+1,r18
 3333 119e 0E94 0000 		call moveAtSpeed
 3334               	.LVL120:
 882:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 3335               		.loc 1 882 0
 3336 11a2 812F      		mov r24,r17
 3337 11a4 0E94 0000 		call changeDirection
 3338               	.LVL121:
 884:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	distanceToMove_R = distance;
 3339               		.loc 1 884 0
 3340 11a8 F092 0000 		sts distanceToMove_L+1,r15
 3341 11ac E092 0000 		sts distanceToMove_L,r14
 885:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 3342               		.loc 1 885 0
 3343 11b0 F092 0000 		sts distanceToMove_R+1,r15
 3344 11b4 E092 0000 		sts distanceToMove_R,r14
 887:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 3345               		.loc 1 887 0
 3346 11b8 8091 0000 		lds r24,motion_status
 3347 11bc 8093 0000 		sts motion_status_tmp,r24
 890:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 3348               		.loc 1 890 0
 3349 11c0 E091 0000 		lds r30,MOTIONCONTROL_stateChangedHandler
 3350 11c4 F091 0000 		lds r31,MOTIONCONTROL_stateChangedHandler+1
 3351 11c8 0995      		icall
 3352               	.LVL122:
 892:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		while(!isMovementComplete())
 3353               		.loc 1 892 0
 3354 11ca 2981      		ldd r18,Y+1
 3355 11cc 2223      		tst r18
 3356 11ce 01F0      		breq .L329
 3357               	.L338:
 893:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			task_RP6System();
 3358               		.loc 1 893 0 discriminator 1
 3359 11d0 0E94 0000 		call isMovementComplete
 3360               	.LVL123:
 3361 11d4 8111      		cpse r24,__zero_reg__
 3362 11d6 00C0      		rjmp .L329
 894:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 3363               		.loc 1 894 0
 3364 11d8 0E94 0000 		call task_RP6System
 3365               	.LVL124:
 3366 11dc 00C0      		rjmp .L338
 3367               	.L329:
 3368               	/* epilogue start */
 895:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 3369               		.loc 1 895 0
 3370 11de 0F90      		pop __tmp_reg__
 3371 11e0 DF91      		pop r29
 3372 11e2 CF91      		pop r28
 3373 11e4 1F91      		pop r17
 3374               	.LVL125:
 3375 11e6 FF90      		pop r15
 3376 11e8 EF90      		pop r14
 3377               	.LVL126:
 3378 11ea 0895      		ret
 3379               		.cfi_endproc
 3380               	.LFE24:
 3382               	.global	rotate
 3384               	rotate:
 3385               	.LFB25:
 918:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status.move_L = true;
 3386               		.loc 1 918 0
 3387               		.cfi_startproc
 3388               	.LVL127:
 3389 11ec FF92      		push r15
 3390               	.LCFI37:
 3391               		.cfi_def_cfa_offset 3
 3392               		.cfi_offset 15, -2
 3393 11ee 0F93      		push r16
 3394               	.LCFI38:
 3395               		.cfi_def_cfa_offset 4
 3396               		.cfi_offset 16, -3
 3397 11f0 1F93      		push r17
 3398               	.LCFI39:
 3399               		.cfi_def_cfa_offset 5
 3400               		.cfi_offset 17, -4
 3401 11f2 CF93      		push r28
 3402               	.LCFI40:
 3403               		.cfi_def_cfa_offset 6
 3404               		.cfi_offset 28, -5
 3405 11f4 DF93      		push r29
 3406               	.LCFI41:
 3407               		.cfi_def_cfa_offset 7
 3408               		.cfi_offset 29, -6
 3409               	/* prologue: function */
 3410               	/* frame size = 0 */
 3411               	/* stack size = 5 */
 3412               	.L__stack_usage = 5
 3413 11f6 182F      		mov r17,r24
 3414 11f8 F62E      		mov r15,r22
 3415 11fa 022F      		mov r16,r18
 919:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	motion_status.move_R = true;
 3416               		.loc 1 919 0
 3417 11fc 8091 0000 		lds r24,motion_status
 3418               	.LVL128:
 920:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	uint16_t distance = (uint16_t) (((uint32_t)(ROTATION_FACTOR) * (uint16_t)angle)/100);
 3419               		.loc 1 920 0
 3420 1200 8160      		ori r24,lo8(1)
 3421 1202 8260      		ori r24,lo8(1<<1)
 3422 1204 8093 0000 		sts motion_status,r24
 921:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	preDecelerate_L = distance - 100;
 3423               		.loc 1 921 0
 3424 1208 9A01      		movw r18,r20
 3425               	.LVL129:
 3426 120a A0EB      		ldi r26,lo8(-80)
 3427 120c B2E0      		ldi r27,lo8(2)
 3428 120e 0E94 0000 		call __umulhisi3
 3429               	.LVL130:
 3430 1212 24E6      		ldi r18,lo8(100)
 3431 1214 30E0      		ldi r19,0
 3432 1216 40E0      		ldi r20,0
 3433 1218 50E0      		ldi r21,0
 3434 121a 0E94 0000 		call __udivmodsi4
 3435 121e E901      		movw r28,r18
 3436               	.LVL131:
 922:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	preDecelerate_R = distance - 100;
 3437               		.loc 1 922 0
 3438 1220 C901      		movw r24,r18
 3439 1222 8456      		subi r24,100
 3440 1224 9109      		sbc r25,__zero_reg__
 3441 1226 9093 0000 		sts preDecelerate_L+1,r25
 3442 122a 8093 0000 		sts preDecelerate_L,r24
 923:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	preStop_L = distance;
 3443               		.loc 1 923 0
 3444 122e 9093 0000 		sts preDecelerate_R+1,r25
 3445 1232 8093 0000 		sts preDecelerate_R,r24
 924:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	preStop_R = distance;
 3446               		.loc 1 924 0
 3447 1236 3093 0000 		sts preStop_L+1,r19
 3448 123a 2093 0000 		sts preStop_L,r18
 925:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(distance < 40) {
 3449               		.loc 1 925 0
 3450 123e 3093 0000 		sts preStop_R+1,r19
 3451 1242 2093 0000 		sts preStop_R,r18
 926:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		distance = 40; 
 3452               		.loc 1 926 0
 3453 1246 2832      		cpi r18,40
 3454 1248 3105      		cpc r19,__zero_reg__
 3455 124a 00F4      		brsh .L340
 3456               	.LVL132:
 928:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preStop_R = 20;
 3457               		.loc 1 928 0
 3458 124c 44E1      		ldi r20,lo8(20)
 3459 124e 50E0      		ldi r21,0
 3460               	.LVL133:
 3461 1250 5093 0000 		sts preStop_L+1,r21
 3462 1254 4093 0000 		sts preStop_L,r20
 929:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_L = 10;
 3463               		.loc 1 929 0
 3464 1258 5093 0000 		sts preStop_R+1,r21
 3465 125c 4093 0000 		sts preStop_R,r20
 930:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preDecelerate_R = 10;
 3466               		.loc 1 930 0
 3467 1260 4AE0      		ldi r20,lo8(10)
 3468 1262 50E0      		ldi r21,0
 3469 1264 5093 0000 		sts preDecelerate_L+1,r21
 3470 1268 4093 0000 		sts preDecelerate_L,r20
 931:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	}
 3471               		.loc 1 931 0
 3472 126c 5093 0000 		sts preDecelerate_R+1,r21
 3473 1270 4093 0000 		sts preDecelerate_R,r20
 927:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		preStop_L = 20;
 3474               		.loc 1 927 0
 3475 1274 C8E2      		ldi r28,lo8(40)
 3476 1276 D0E0      		ldi r29,0
 3477               	.LVL134:
 3478               	.L340:
 933:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	changeDirection(dir);
 3479               		.loc 1 933 0
 3480 1278 612F      		mov r22,r17
 3481 127a 812F      		mov r24,r17
 3482 127c 0E94 0000 		call moveAtSpeed
 3483               	.LVL135:
 934:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 3484               		.loc 1 934 0
 3485 1280 8F2D      		mov r24,r15
 3486 1282 0E94 0000 		call changeDirection
 3487               	.LVL136:
 936:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	mright_dist = 0;
 3488               		.loc 1 936 0
 3489 1286 1092 0000 		sts mleft_dist+1,__zero_reg__
 3490 128a 1092 0000 		sts mleft_dist,__zero_reg__
 937:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	distanceToMove_L = distance;
 3491               		.loc 1 937 0
 3492 128e 1092 0000 		sts mright_dist+1,__zero_reg__
 3493 1292 1092 0000 		sts mright_dist,__zero_reg__
 938:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	distanceToMove_R = distance;
 3494               		.loc 1 938 0
 3495 1296 D093 0000 		sts distanceToMove_L+1,r29
 3496 129a C093 0000 		sts distanceToMove_L,r28
 939:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
 3497               		.loc 1 939 0
 3498 129e D093 0000 		sts distanceToMove_R+1,r29
 3499 12a2 C093 0000 		sts distanceToMove_R,r28
 941:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	MOTIONCONTROL_stateChangedHandler();
 3500               		.loc 1 941 0
 3501 12a6 8091 0000 		lds r24,motion_status
 3502 12aa 8093 0000 		sts motion_status_tmp,r24
 942:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	if(blocking)
 3503               		.loc 1 942 0
 3504 12ae E091 0000 		lds r30,MOTIONCONTROL_stateChangedHandler
 3505 12b2 F091 0000 		lds r31,MOTIONCONTROL_stateChangedHandler+1
 3506 12b6 0995      		icall
 3507               	.LVL137:
 943:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 		while(!isMovementComplete())
 3508               		.loc 1 943 0
 3509 12b8 0023      		tst r16
 3510 12ba 01F0      		breq .L339
 3511               	.L345:
 944:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			task_RP6System();
 3512               		.loc 1 944 0 discriminator 1
 3513 12bc 0E94 0000 		call isMovementComplete
 3514               	.LVL138:
 3515 12c0 8111      		cpse r24,__zero_reg__
 3516 12c2 00C0      		rjmp .L339
 945:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
 3517               		.loc 1 945 0
 3518 12c4 0E94 0000 		call task_RP6System
 3519               	.LVL139:
 3520 12c8 00C0      		rjmp .L345
 3521               	.L339:
 3522               	/* epilogue start */
 946:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
 3523               		.loc 1 946 0
 3524 12ca DF91      		pop r29
 3525 12cc CF91      		pop r28
 3526               	.LVL140:
 3527 12ce 1F91      		pop r17
 3528               	.LVL141:
 3529 12d0 0F91      		pop r16
 3530               	.LVL142:
 3531 12d2 FF90      		pop r15
 3532               	.LVL143:
 3533 12d4 0895      		ret
 3534               		.cfi_endproc
 3535               	.LFE25:
 3537               	.global	initRobotBase
 3539               	initRobotBase:
 3540               	.LFB51:
1805:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** }
1806:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1807:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
1808:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
1809:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
1810:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1811:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1812:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /*****************************************************************************/
1813:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** // Initialisation:
1814:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1815:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** /**
1816:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Initialise the Robot Base Controller - ALWAYS CALL THIS FIRST!
1817:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * The Processor will not work correctly otherwise.
1818:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * (If you don't implement your own init routine!)
1819:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1820:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  * Example:
1821:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1822:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			int16_t main(void)
1823:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			{
1824:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *				initRobotBase();
1825:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1826:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *				// ... your application code
1827:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1828:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *				while(true);
1829:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *				return 0;
1830:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *			}
1831:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  *
1832:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****  */
1833:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** void initRobotBase(void)
1834:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** {
 3541               		.loc 1 1834 0
 3542               		.cfi_startproc
 3543               	/* prologue: function */
 3544               	/* frame size = 0 */
 3545               	/* stack size = 0 */
 3546               	.L__stack_usage = 0
1835:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	portInit();		// Setup port directions and initial values.
 3547               		.loc 1 1835 0
 3548 12d6 1BBA      		out 0x1b,__zero_reg__
 3549 12d8 18BA      		out 0x18,__zero_reg__
 3550 12da 15BA      		out 0x15,__zero_reg__
 3551 12dc 81E0      		ldi r24,lo8(1)
 3552 12de 82BB      		out 0x12,r24
 3553 12e0 1ABA      		out 0x1a,__zero_reg__
 3554 12e2 88E5      		ldi r24,lo8(88)
 3555 12e4 87BB      		out 0x17,r24
 3556 12e6 8CE8      		ldi r24,lo8(-116)
 3557 12e8 84BB      		out 0x14,r24
 3558 12ea 82EF      		ldi r24,lo8(-14)
 3559 12ec 81BB      		out 0x11,r24
1836:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 					// THIS IS THE MOST IMPORTANT STEP!
1837:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1838:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	cli();			// Disable global interrupts
 3560               		.loc 1 1838 0
 3561               	/* #APP */
 3562               	 ;  1838 "../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c" 1
 3563 12ee F894      		cli
 3564               	 ;  0 "" 2
 3565               	/* #NOAPP */
 3566               	.LBB60:
1839:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
1840:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	enableResetButton(); // Make sure the Reset Button is enabled!
 3567               		.loc 1 1840 0
 3568 12f0 C598      		cbi 0x18,5
 3569 12f2 BD9A      		sbi 0x17,5
 3570               	.LBE60:
1841:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						 // Do not disable it if you want to be able to
1842:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						 // reset your robot! (Otherwise you can only
1843:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						 // stop it by switching it off completely, 
1844:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						 // if it gets out of control ;) )
1845:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1846:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	IRCOMM_OFF(); 	     // Make sure that IRCOMM and ...
 3571               		.loc 1 1846 0
 3572 12f4 9798      		cbi 0x12,7
1847:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	setACSPwrOff();		 // ACS are turned OFF!
 3573               		.loc 1 1847 0
 3574 12f6 0E94 0000 		call setACSPwrOff
 3575               	.LVL144:
1848:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1849:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// UART:
1850:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	UBRRH = UBRR_BAUD_LOW >> 8;	// Setup UART: Baudrate is Low Speed
 3576               		.loc 1 1850 0
 3577 12fa 10BC      		out 0x20,__zero_reg__
1851:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	UBRRL = (uint8_t) UBRR_BAUD_LOW;
 3578               		.loc 1 1851 0
 3579 12fc 8CE0      		ldi r24,lo8(12)
 3580 12fe 89B9      		out 0x9,r24
1852:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	UCSRA = 0x00;
 3581               		.loc 1 1852 0
 3582 1300 1BB8      		out 0xb,__zero_reg__
1853:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****     UCSRC = (1<<URSEL)|(1<<UCSZ1)|(1<<UCSZ0);
 3583               		.loc 1 1853 0
 3584 1302 86E8      		ldi r24,lo8(-122)
 3585 1304 80BD      		out 0x20,r24
1854:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c ****     UCSRB = (1 << TXEN) | (1 << RXEN) | (1 << RXCIE);
 3586               		.loc 1 1854 0
 3587 1306 88E9      		ldi r24,lo8(-104)
 3588 1308 8AB9      		out 0xa,r24
1855:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
1856:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Initialize ADC:
1857:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADMUX = 0; //external reference 
 3589               		.loc 1 1857 0
 3590 130a 17B8      		out 0x7,__zero_reg__
1858:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ADCSRA = (0<<ADIE) | (0<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADIF);
 3591               		.loc 1 1858 0
 3592 130c 86E1      		ldi r24,lo8(22)
 3593 130e 86B9      		out 0x6,r24
1859:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	SFIOR = 0;
 3594               		.loc 1 1859 0
 3595 1310 10BE      		out 0x30,__zero_reg__
1860:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1861:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Initialize External interrupts:
1862:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	MCUCR = (0 << ISC11) | (1 << ISC10) | (0 << ISC01) | (1 << ISC00);
 3596               		.loc 1 1862 0
 3597 1312 85E0      		ldi r24,lo8(5)
 3598 1314 85BF      		out 0x35,r24
1863:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	GICR = (1 << INT2) | (1 << INT1) | (1 << INT0);
 3599               		.loc 1 1863 0
 3600 1316 80EE      		ldi r24,lo8(-32)
 3601 1318 8BBF      		out 0x3b,r24
1864:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	MCUCSR = (0 << ISC2);
 3602               		.loc 1 1864 0
 3603 131a 14BE      		out 0x34,__zero_reg__
1865:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1866:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Initialize Timer 0 -  100µs cycle for Delays/Stopwatches, RC5 reception etc.:
1867:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	TCCR0 =   (0 << WGM00) | (1 << WGM01) 
 3604               		.loc 1 1867 0
 3605 131c 8AE0      		ldi r24,lo8(10)
 3606 131e 83BF      		out 0x33,r24
1868:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			| (0 << COM00) | (0 << COM01) 
1869:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 			| (0 << CS02)  | (1 << CS01) | (0 << CS00);
1870:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	OCR0  = 99;
 3607               		.loc 1 1870 0
 3608 1320 83E6      		ldi r24,lo8(99)
 3609 1322 8CBF      		out 0x3c,r24
1871:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1872:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Initialize Timer1 - PWM:
1873:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// PWM, phase correct with ICR1 as top value.
1874:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	TCCR1A = (0 << WGM10) | (1 << WGM11) | (1 << COM1A1) | (1 << COM1B1);
 3610               		.loc 1 1874 0
 3611 1324 82EA      		ldi r24,lo8(-94)
 3612 1326 8FBD      		out 0x2f,r24
1875:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	TCCR1B =  (1 << WGM13) | (0 << WGM12) | (1 << CS10);
 3613               		.loc 1 1875 0
 3614 1328 81E1      		ldi r24,lo8(17)
 3615 132a 8EBD      		out 0x2e,r24
1876:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	ICR1 = 210; // Phase corret PWM top value - 210 results in 
 3616               		.loc 1 1876 0
 3617 132c 82ED      		ldi r24,lo8(-46)
 3618 132e 90E0      		ldi r25,0
 3619 1330 97BD      		out 0x26+1,r25
 3620 1332 86BD      		out 0x26,r24
1877:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				// about 19 kHz PWM.
1878:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				// ICR1 is the maximum (=100% duty cycle) PWM value!
1879:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				// This means that the PWM resolution is a bit lower, but
1880:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				// if the frequency is lower than 19 kHz you may hear very
1881:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				// annoying high pitch noises from the motors!
1882:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				// 19 kHz is a bit over the maximum frequency most people can
1883:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				// hear!
1884:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				// 
1885:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 				// ATTENTION: Max PWM value is 210 and NOT 255 !!!
1886:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	OCR1AL = 0;
 3621               		.loc 1 1886 0
 3622 1334 1ABC      		out 0x2a,__zero_reg__
1887:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	OCR1BL = 0;
 3623               		.loc 1 1887 0
 3624 1336 18BC      		out 0x28,__zero_reg__
1888:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	setMotorDir(FWD,FWD); 	// Direction Forwards
 3625               		.loc 1 1888 0
 3626 1338 60E0      		ldi r22,0
 3627 133a 80E0      		ldi r24,0
 3628 133c 0E94 0000 		call setMotorDir
 3629               	.LVL145:
1889:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1890:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Initialize Timer2 - ACS:
1891:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	TCCR2 = (1 << WGM21) | (0 << COM20) | (1 << CS20);
 3630               		.loc 1 1891 0
 3631 1340 89E0      		ldi r24,lo8(9)
 3632 1342 85BD      		out 0x25,r24
1892:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	OCR2  = 0x6E; // 0x6E = 72kHz @8MHz
 3633               		.loc 1 1892 0
 3634 1344 8EE6      		ldi r24,lo8(110)
 3635 1346 83BD      		out 0x23,r24
1893:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	
1894:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Initialize Timer Interrupts:
1895:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	TIMSK = (1 << OCIE0); //| (1 << OCIE2); // Fixed: Timer2 Interrupt is turned 
 3636               		.loc 1 1895 0
 3637 1348 82E0      		ldi r24,lo8(2)
 3638 134a 89BF      		out 0x39,r24
1896:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	                      // off by default now! It is only active 
1897:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 						  // when ACS/IRCOMM are transmitting.
1898:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1899:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	// Initialize ACS:
1900:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	sysStatACS.channel = ACS_CHANNEL_RIGHT;
 3639               		.loc 1 1900 0
 3640 134c 8091 0000 		lds r24,sysStatACS
 3641 1350 8160      		ori r24,lo8(1<<0)
 3642 1352 8093 0000 		sts sysStatACS,r24
1901:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	acs_state = ACS_STATE_IRCOMM_DELAY;
 3643               		.loc 1 1901 0
 3644 1356 81E0      		ldi r24,lo8(1)
 3645 1358 8093 0000 		sts acs_state,r24
1902:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 
1903:../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c **** 	sei(); // Enable Global Interrupts
 3646               		.loc 1 1903 0
 3647               	/* #APP */
 3648               	 ;  1903 "../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.c" 1
 3649 135c 7894      		sei
 3650               	 ;  0 "" 2
 3651               	/* #NOAPP */
 3652 135e 0895      		ret
 3653               		.cfi_endproc
 3654               	.LFE51:
 3656               		.local	IRCOMM_RC5_bit.2399
 3657               		.comm	IRCOMM_RC5_bit.2399,1,1
 3658               		.local	IRCOMM_RC5_time.2400
 3659               		.comm	IRCOMM_RC5_time.2400,1,1
 3660               		.local	IRCOMM_RC5_tmp.2401
 3661               		.comm	IRCOMM_RC5_tmp.2401,2,1
 3662               		.local	leds_on_timer.2398
 3663               		.comm	leds_on_timer.2398,2,1
 3664               		.local	acs_r_tmp.2363
 3665               		.comm	acs_r_tmp.2363,1,1
 3666               		.local	acs_l_tmp.2362
 3667               		.comm	acs_l_tmp.2362,1,1
 3668               		.local	acs_detect_timeout.2354
 3669               		.comm	acs_detect_timeout.2354,2,1
 3670               		.local	acs_counter.2353
 3671               		.comm	acs_counter.2353,1,1
 3672               		.local	ircomm_pulse.2326
 3673               		.comm	ircomm_pulse.2326,1,1
 3674               		.section	.progmem.data,"a",@progbits
 3677               	__c.2227:
 3678 0000 5468 6520 		.string	"The Robot needs to be resetted now.\n\n"
 3678      526F 626F 
 3678      7420 6E65 
 3678      6564 7320 
 3678      746F 2062 
 3681               	__c.2225:
 3682 0026 596F 7520 		.string	"You need to check Motor assembly (or your software).\n\n"
 3682      6E65 6564 
 3682      2074 6F20 
 3682      6368 6563 
 3682      6B20 4D6F 
 3685               	__c.2223:
 3686 005d 0A0A 2873 		.string	"\n\n(s. task_motorControl() function in RP6Lib!)\n"
 3686      2E20 7461 
 3686      736B 5F6D 
 3686      6F74 6F72 
 3686      436F 6E74 
 3689               	__c.2221:
 3690 008d 0A0A 2323 		.string	"\n\n### MOTOR OVERCURRENT ###\n"
 3690      2320 4D4F 
 3690      544F 5220 
 3690      4F56 4552 
 3690      4355 5252 
 3693               	__c.2219:
 3694 00aa 596F 7520 		.string	"You need to check Encoder/Motor assembly (or your software).\n\n"
 3694      6E65 6564 
 3694      2074 6F20 
 3694      6368 6563 
 3694      6B20 456E 
 3697               	__c.2217:
 3698 00e9 210A 0A28 		.string	"!\n\n(s. task_motorControl() function in RP6Lib!)\n"
 3698      732E 2074 
 3698      6173 6B5F 
 3698      6D6F 746F 
 3698      7243 6F6E 
 3701               	__c.2215:
 3702 011a 5249 4748 		.string	"RIGHT"
 3702      5400 
 3705               	__c.2213:
 3706 0120 4C45 4654 		.string	"LEFT"
 3706      00
 3709               	__c.2211:
 3710 0125 4166 6665 		.string	"Affected channel:"
 3710      6374 6564 
 3710      2063 6861 
 3710      6E6E 656C 
 3710      3A00 
 3713               	__c.2209:
 3714 0137 0A23 2323 		.string	"\n### ENCODER (OR MOTOR) MALFUNCTION! ###\n"
 3714      2045 4E43 
 3714      4F44 4552 
 3714      2028 4F52 
 3714      204D 4F54 
 3717               	__c.2207:
 3718 0161 2323 2323 		.string	"##### ALL OPERATIONS STOPPED TO PREVENT ANY DAMAGE! #####\n"
 3718      2320 414C 
 3718      4C20 4F50 
 3718      4552 4154 
 3718      494F 4E53 
 3721               	__c.2205:
 3722 019c 0A0A 2323 		.string	"\n\n##### EMERGENCY SHUTDOWN #####\n"
 3722      2323 2320 
 3722      454D 4552 
 3722      4745 4E43 
 3722      5920 5348 
 3723               		.local	current_adc_channel.2141
 3724               		.comm	current_adc_channel.2141,1,1
 3725               		.comm	speed_adjust_timer,1,1
 3726               		.comm	ms_timer,1,1
 3727               		.comm	delay_timer,1,1
 3728               		.comm	stopwatches,17,1
 3729               		.data
 3732               	ACS_stateChangedHandler:
 3733 0000 0000      		.word	gs(ACS_stateChanged_DUMMY)
 3736               	IRCOMM_RC5dataReadyHandler:
 3737 0002 0000      		.word	gs(IRCOMM_RC5dataReady_DUMMY)
 3738               		.comm	IRCOMM_RC5_data,2,1
 3739               		.comm	IRCOMM_RC5_data_ok,2,1
 3740               		.comm	ircomm_data_tmp,2,1
 3741               		.comm	ircomm_data,2,1
 3742               		.comm	ircomm_send,1,1
 3743               		.comm	sysStatACS,1,1
 3744               		.comm	obstacle_right,1,1
 3745               		.comm	obstacle_left,1,1
 3746               		.comm	acs_event_counter,1,1
 3747               		.comm	acs_pulse,1,1
 3748               		.comm	acs_timer,2,1
 3749               	.global	acs_state
 3752               	acs_state:
 3753 0004 01        		.byte	1
 3754               	.global	drive_dir
 3755               		.section .bss
 3758               	drive_dir:
 3759 0000 00        		.zero	1
 3760               		.data
 3763               	MOTIONCONTROL_stateChangedHandler:
 3764 0005 0000      		.word	gs(MOTIONCONTROL_stateChanged_DUMMY)
 3765               		.comm	motor_control,1,1
 3766               		.comm	preStop_R,2,1
 3767               		.comm	preStop_L,2,1
 3768               		.comm	preDecelerate_R,2,1
 3769               		.comm	preDecelerate_L,2,1
 3770               		.comm	distanceToMove_R,2,1
 3771               		.comm	distanceToMove_L,2,1
 3772               		.comm	motion_status_tmp,1,1
 3773               		.comm	overcurrent_error_clear,1,1
 3774               		.comm	overcurrent_errors,1,1
 3775               		.comm	overcurrent_timer,1,1
 3776               		.comm	overcurrent_timeout,1,1
 3777               	.global	mright_dir
 3778               		.section .bss
 3781               	mright_dir:
 3782 0001 00        		.zero	1
 3783               	.global	mleft_dir
 3786               	mleft_dir:
 3787 0002 00        		.zero	1
 3788               	.global	mright_des_dir
 3791               	mright_des_dir:
 3792 0003 00        		.zero	1
 3793               	.global	mleft_des_dir
 3796               	mleft_des_dir:
 3797 0004 00        		.zero	1
 3798               		.comm	mright_des_speed_tmp,2,1
 3799               		.comm	mleft_des_speed_tmp,2,1
 3800               		.comm	mright_des_speed,2,1
 3801               		.comm	mleft_des_speed,2,1
 3802               		.comm	mright_ptmp,1,1
 3803               		.comm	mleft_ptmp,1,1
 3804               		.comm	mright_power,2,1
 3805               		.comm	mleft_power,2,1
 3806               		.comm	left_i,2,1
 3807               		.comm	right_i,2,1
 3808               		.comm	mright_dist,2,1
 3809               		.comm	mleft_dist,2,1
 3810               		.comm	mright_speed,2,1
 3811               		.comm	mleft_speed,2,1
 3812               		.comm	mright_counter,2,1
 3813               		.comm	mleft_counter,2,1
 3814               		.comm	speed_timer,1,1
 3815               		.comm	adc1,2,1
 3816               		.comm	adc0,2,1
 3817               		.comm	adcLSR,2,1
 3818               		.comm	adcLSL,2,1
 3819               		.comm	adcMotorCurrentRight,2,1
 3820               		.comm	adcMotorCurrentLeft,2,1
 3821               		.comm	adcBat,2,1
 3822               		.comm	bumper_right,1,1
 3823               		.comm	bumper_left,1,1
 3824               		.comm	bumper_timer,1,1
 3825               		.data
 3828               	BUMPERS_stateChangedHandler:
 3829 0007 0000      		.word	gs(BUMPERS_stateChanged_DUMMY)
 3830               		.comm	leds_on,1,1
 3831               		.comm	timer,2,1
 3832               		.comm	motion_status,1,1
 3833               		.comm	statusLEDs,1,1
 3834               		.text
 3835               	.Letext0:
 3836               		.file 2 "/usr/avr/include/stdint.h"
 3837               		.file 3 "../RP6Examples_20120725f/RP6Lib/RP6base/RP6RobotBaseLib.h"
 3838               		.file 4 "../RP6Examples_20120725f/RP6Lib/RP6common/RP6uart.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 RP6RobotBaseLib.c
     /tmp/cc27SJt0.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc27SJt0.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc27SJt0.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc27SJt0.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc27SJt0.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc27SJt0.s:12     .text:0000000000000000 BUMPERS_stateChanged_DUMMY
     /tmp/cc27SJt0.s:27     .text:0000000000000002 MOTIONCONTROL_stateChanged_DUMMY
     /tmp/cc27SJt0.s:41     .text:0000000000000004 IRCOMM_RC5dataReady_DUMMY
     /tmp/cc27SJt0.s:56     .text:0000000000000006 ACS_stateChanged_DUMMY
     /tmp/cc27SJt0.s:70     .text:0000000000000008 enablePowerOnWarning
                            *COM*:0000000000000001 leds_on
     /tmp/cc27SJt0.s:91     .text:0000000000000016 disablePowerOnWarning
     /tmp/cc27SJt0.s:108    .text:000000000000001e updateStatusLEDs
                            *COM*:0000000000000001 statusLEDs
     /tmp/cc27SJt0.s:195    .text:000000000000009c setLEDs
     /tmp/cc27SJt0.s:214    .text:00000000000000a4 getBumperLeft
     /tmp/cc27SJt0.s:253    .text:00000000000000bc getBumperRight
     /tmp/cc27SJt0.s:292    .text:00000000000000d4 BUMPERS_setStateChangedHandler
     /tmp/cc27SJt0.s:3828   .data:0000000000000007 BUMPERS_stateChangedHandler
     /tmp/cc27SJt0.s:310    .text:00000000000000de task_Bumpers
                            *COM*:0000000000000001 bumper_timer
                            *COM*:0000000000000001 bumper_left
                            *COM*:0000000000000001 bumper_right
     /tmp/cc27SJt0.s:368    .text:000000000000011c readADC
     /tmp/cc27SJt0.s:410    .text:000000000000013a startADC
     /tmp/cc27SJt0.s:432    .text:0000000000000144 task_ADC
     /tmp/cc27SJt0.s:3673   .bss:0000000000000011 current_adc_channel.2141
                            *COM*:0000000000000002 adcBat
                            *COM*:0000000000000002 adcMotorCurrentLeft
                            *COM*:0000000000000002 adcMotorCurrentRight
                            *COM*:0000000000000002 adcLSL
                            *COM*:0000000000000002 adcLSR
                            *COM*:0000000000000002 adc0
                            *COM*:0000000000000002 adc1
     /tmp/cc27SJt0.s:582    .text:00000000000001d0 __vector_1
                            *COM*:0000000000000002 mleft_dist
                            *COM*:0000000000000002 mleft_counter
     /tmp/cc27SJt0.s:635    .text:0000000000000210 __vector_2
                            *COM*:0000000000000002 mright_dist
                            *COM*:0000000000000002 mright_counter
     /tmp/cc27SJt0.s:688    .text:0000000000000250 MOTIONCONTROL_setStateChangedHandler
     /tmp/cc27SJt0.s:3763   .data:0000000000000005 MOTIONCONTROL_stateChangedHandler
     /tmp/cc27SJt0.s:706    .text:000000000000025a moveAtSpeed
                            *COM*:0000000000000002 mleft_des_speed
                            *COM*:0000000000000002 mright_des_speed
     /tmp/cc27SJt0.s:739    .text:000000000000027c changeDirection
     /tmp/cc27SJt0.s:3758   .bss:0000000000000000 drive_dir
     /tmp/cc27SJt0.s:3796   .bss:0000000000000004 mleft_des_dir
     /tmp/cc27SJt0.s:3791   .bss:0000000000000003 mright_des_dir
     /tmp/cc27SJt0.s:774    .text:00000000000002a0 moveAtSpeedDirection
     /tmp/cc27SJt0.s:813    .text:00000000000002c4 isMovementComplete
                            *COM*:0000000000000001 motion_status
     /tmp/cc27SJt0.s:835    .text:00000000000002d2 stop
                            *COM*:0000000000000002 left_i
                            *COM*:0000000000000002 right_i
                            *COM*:0000000000000001 motion_status_tmp
     /tmp/cc27SJt0.s:873    .text:000000000000030c setMotorPower
                            *COM*:0000000000000002 mright_power
                            *COM*:0000000000000002 mleft_power
     /tmp/cc27SJt0.s:905    .text:000000000000032e setMotorDir
     /tmp/cc27SJt0.s:3786   .bss:0000000000000002 mleft_dir
     /tmp/cc27SJt0.s:3781   .bss:0000000000000001 mright_dir
     /tmp/cc27SJt0.s:953    .text:0000000000000354 IRCOMM_sendRC5
                            *COM*:0000000000000001 ircomm_send
                            *COM*:0000000000000002 ircomm_data_tmp
                            *COM*:0000000000000001 sysStatACS
     /tmp/cc27SJt0.s:998    .text:000000000000038c __vector_4
     /tmp/cc27SJt0.s:3752   .data:0000000000000004 acs_state
     /tmp/cc27SJt0.s:3671   .bss:0000000000000010 ircomm_pulse.2326
                            *COM*:0000000000000002 ircomm_data
                            *COM*:0000000000000001 acs_pulse
     /tmp/cc27SJt0.s:1132   .text:000000000000044c __vector_3
                            *COM*:0000000000000001 acs_event_counter
     /tmp/cc27SJt0.s:1196   .text:000000000000049a IRCOMM_setRC5DataReadyHandler
     /tmp/cc27SJt0.s:3736   .data:0000000000000002 IRCOMM_RC5dataReadyHandler
     /tmp/cc27SJt0.s:1214   .text:00000000000004a4 ACS_setStateChangedHandler
     /tmp/cc27SJt0.s:3732   .data:0000000000000000 ACS_stateChangedHandler
     /tmp/cc27SJt0.s:1232   .text:00000000000004ae task_ACS
                            *COM*:0000000000000002 acs_timer
     /tmp/cc27SJt0.s:3669   .bss:000000000000000f acs_counter.2353
                            *COM*:0000000000000002 IRCOMM_RC5_data_ok
                            *COM*:0000000000000002 IRCOMM_RC5_data
     /tmp/cc27SJt0.s:3667   .bss:000000000000000d acs_detect_timeout.2354
                            *COM*:0000000000000001 obstacle_left
                            *COM*:0000000000000001 obstacle_right
     /tmp/cc27SJt0.s:3665   .bss:000000000000000c acs_l_tmp.2362
     /tmp/cc27SJt0.s:3663   .bss:000000000000000b acs_r_tmp.2363
     /tmp/cc27SJt0.s:1598   .text:0000000000000736 disableACS
     /tmp/cc27SJt0.s:1628   .text:0000000000000750 enableACS
     /tmp/cc27SJt0.s:1659   .text:000000000000076c setACSPwrOff
     /tmp/cc27SJt0.s:1685   .text:000000000000077a setACSPwrLow
     /tmp/cc27SJt0.s:1707   .text:0000000000000784 setACSPwrMed
     /tmp/cc27SJt0.s:1729   .text:000000000000078e setACSPwrHigh
     /tmp/cc27SJt0.s:1751   .text:0000000000000798 powerON
     /tmp/cc27SJt0.s:1775   .text:00000000000007aa powerOFF
     /tmp/cc27SJt0.s:1812   .text:00000000000007ce __vector_10
                            *COM*:0000000000000002 timer
                            *COM*:0000000000000001 delay_timer
                            *COM*:0000000000000001 ms_timer
                            *COM*:0000000000000011 stopwatches
                            *COM*:0000000000000001 speed_timer
                            *COM*:0000000000000002 mright_speed
                            *COM*:0000000000000002 mleft_speed
                            *COM*:0000000000000001 motor_control
     /tmp/cc27SJt0.s:3661   .bss:0000000000000009 leds_on_timer.2398
                            *COM*:0000000000000001 overcurrent_timer
                            *COM*:0000000000000001 speed_adjust_timer
                            *COM*:0000000000000001 mright_ptmp
                            *COM*:0000000000000001 mleft_ptmp
     /tmp/cc27SJt0.s:3659   .bss:0000000000000007 IRCOMM_RC5_tmp.2401
     /tmp/cc27SJt0.s:3657   .bss:0000000000000006 IRCOMM_RC5_time.2400
                             .bss:0000000000000005 IRCOMM_RC5_bit.2399
     /tmp/cc27SJt0.s:2336   .text:0000000000000b5c sleep
     /tmp/cc27SJt0.s:2360   .text:0000000000000b6a mSleep
     /tmp/cc27SJt0.s:2403   .text:0000000000000b84 delayCycles
     /tmp/cc27SJt0.s:2434   .text:0000000000000b8e emergencyShutdown
     /tmp/cc27SJt0.s:3721   .progmem.data:000000000000019c __c.2205
     /tmp/cc27SJt0.s:3717   .progmem.data:0000000000000161 __c.2207
     /tmp/cc27SJt0.s:3713   .progmem.data:0000000000000137 __c.2209
     /tmp/cc27SJt0.s:3709   .progmem.data:0000000000000125 __c.2211
     /tmp/cc27SJt0.s:3705   .progmem.data:0000000000000120 __c.2213
     /tmp/cc27SJt0.s:3701   .progmem.data:000000000000011a __c.2215
     /tmp/cc27SJt0.s:3697   .progmem.data:00000000000000e9 __c.2217
     /tmp/cc27SJt0.s:3693   .progmem.data:00000000000000aa __c.2219
     /tmp/cc27SJt0.s:3689   .progmem.data:000000000000008d __c.2221
     /tmp/cc27SJt0.s:3685   .progmem.data:000000000000005d __c.2223
     /tmp/cc27SJt0.s:3681   .progmem.data:0000000000000026 __c.2225
     /tmp/cc27SJt0.s:3677   .progmem.data:0000000000000000 __c.2227
     /tmp/cc27SJt0.s:2608   .text:0000000000000c66 task_motionControl
                            *COM*:0000000000000001 overcurrent_timeout
                            *COM*:0000000000000001 overcurrent_errors
                            *COM*:0000000000000001 overcurrent_error_clear
                            *COM*:0000000000000002 preStop_R
                            *COM*:0000000000000002 preDecelerate_R
                            *COM*:0000000000000002 preStop_L
                            *COM*:0000000000000002 preDecelerate_L
                            *COM*:0000000000000002 mleft_des_speed_tmp
                            *COM*:0000000000000002 mright_des_speed_tmp
     /tmp/cc27SJt0.s:3125   .text:000000000000109c extIntON
     /tmp/cc27SJt0.s:3143   .text:00000000000010a2 extIntOFF
     /tmp/cc27SJt0.s:3161   .text:00000000000010a8 task_RP6System
     /tmp/cc27SJt0.s:3186   .text:00000000000010b8 move
                            *COM*:0000000000000002 distanceToMove_L
                            *COM*:0000000000000002 distanceToMove_R
     /tmp/cc27SJt0.s:3384   .text:00000000000011ec rotate
     /tmp/cc27SJt0.s:3539   .text:00000000000012d6 initRobotBase

UNDEFINED SYMBOLS
__tablejump2__
__udivmodhi4
writeNStringP
__umulhisi3
__udivmodsi4
__do_copy_data
__do_clear_bss
